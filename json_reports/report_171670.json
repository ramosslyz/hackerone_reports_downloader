{
    "id": 171670,
    "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNzE2NzA=",
    "url": "https://hackerone.com/reports/171670",
    "title": "Link sanitation bypass in xss_clean() ",
    "state": "Closed",
    "substate": "resolved",
    "readable_substate": "Resolved",
    "created_at": "2016-09-24T10:29:32.313Z",
    "submitted_at": "2016-09-24T10:29:32.313Z",
    "is_member_of_team?": false,
    "is_organization_group_member?": false,
    "reporter": {
        "disabled": false,
        "username": "0xsyndr0me",
        "url": "/0xsyndr0me",
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/variants/000/040/377/8b0b9be2bac5759979445550c29fbd6f8612469b_original.jpg/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c"
        },
        "is_me?": false,
        "cleared": false,
        "verified": false,
        "hackerone_triager": false,
        "hacker_mediation": false
    },
    "team": {
        "id": 5013,
        "url": "https://hackerone.com/codeigniter",
        "handle": "codeigniter",
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/variants/000/005/013/e87b0eabd0d6f18ee690e66e0390fb2ab4681ce0_original.jpg/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c",
            "medium": "https://profile-photos.hackerone-user-content.com/variants/000/005/013/e87b0eabd0d6f18ee690e66e0390fb2ab4681ce0_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "permissions": [],
        "submission_state": "paused",
        "default_currency": "usd",
        "awards_miles": false,
        "offers_bounties": false,
        "state": "public_mode",
        "only_cleared_hackers": false,
        "pentest_feature_enabled?": false,
        "profile": {
            "name": "CodeIgniter",
            "twitter_handle": "codeigniter",
            "website": "https://www.codeigniter.com/",
            "about": "CodeIgniter is a powerful PHP framework, built for developers who need a simple and elegant toolkit to create full-featured web applications."
        }
    },
    "has_bounty?": false,
    "in_validation?": false,
    "can_view_team": true,
    "can_view_report": true,
    "is_external_bug": false,
    "is_published": false,
    "is_participant": false,
    "has_collaborators": false,
    "submitted_by_team_member": false,
    "stage": 4,
    "public": true,
    "visibility": "full",
    "cve_ids": [],
    "singular_disclosure_disabled": false,
    "disclosed_at": "2016-11-04T10:53:18.736Z",
    "bug_reporter_agreed_on_going_public_at": "2016-11-04T02:22:32.780Z",
    "team_member_agreed_on_going_public_at": "2016-11-04T10:53:18.704Z",
    "comments_closed?": false,
    "facebook_team?": false,
    "team_private?": false,
    "vulnerability_information": "Hi there,\n\nWhile researching a website that uses your framework xss_clean() function to sanitize user's input in comments, I was able to bypass it and could trigger XSS payloads using javascript links in allowed tags such as anchors. This could be achieved by using the new HTML5 standard entities such as `&NewLine;` `&Tab;` `&colon;`\n\n### PoC\nRun the following piece of code under CI framework\n```\necho $this->security->xss_clean('<a href=\"javascript&NewLine;&colon;eval(String.fromCharCode(97, 108, 101, 114, 116, 40, 100, 111, 99, 117, 109, 101, 110, 116, 46, 100, 111, 109, 97, 105, 110, 41));\">XSS Link</a>');\n```\n**For a demo**\n1. Go to http://www.aorank.com/tutorial/codeigniter_xss_clean/index.php/form/ (*a demo of a tutorial illustrating xss_clean();*)\n2. In employee name's field, enter\n ```\n<a href=\"javascript&NewLine;&colon;eval(String.fromCharCode(97, 108, 101, 114, 116, 40, 100, 111, 99, 117, 109, 101, 110, 116, 46, 100, 111, 109, 97, 105, 110, 41));\">XSS Link</a>\n```\n3. Submit the form\n4. The payload is injected into the page and XSS vector is triggered as soon as user clicks the link.\n\n### Why?\nActually the website was using an old version of xss_clean() that did not take the new standard entities into consideration. However, when I downloaded the latest version of CI to see if this is fixed, I noticed that you check if they exist and handle them accordingly but there is a flaw in the regular expression used to detect standard entities that causes the XSS bypass.\n\nIn line 677 in ./system/core/Security.php\n`if (preg_match_all('/&[a-z]{2,}(?![a-z;])/i', $str, $matches))`\n\nWe can see that this regular expression matches alpha characters preceded by ampersand (&) and **not followed** by a semi-colon (;) --*I have no idea why you do this BTW, since entities are usually followed by a semicolon :D*--\n\nSo when user injects `&NewLine;` and/or `&Tab;` they are not detected by the regular expression and hence not converted to their corresponding characters. That's why the XSS filter fails to detect the presence `javascript:` in the attribute.\n\n### Remediation\nRegular expression should be fixed to count for entities followed by a semi-colon :))\n\nLooking forward to hearing from you soon ^_^\n\nSincerely,\nAbood Nour\n",
    "weakness": {
        "id": 60,
        "name": "Cross-site Scripting (XSS) - Generic"
    },
    "original_report_id": null,
    "original_report_url": null,
    "attachments": [],
    "allow_singular_disclosure_at": "2016-12-04T02:22:32.837Z",
    "allow_singular_disclosure_after": -212478443.8642677,
    "singular_disclosure_allowed": true,
    "vote_count": 20,
    "voters": [
        "michiel",
        "flashdisk",
        "apapedulimu",
        "xsam",
        "mdv",
        "savitar0x01",
        "ibram",
        "m16",
        "ymy",
        "ajdumanhug",
        "and 10 more..."
    ],
    "structured_scope": null,
    "abilities": {
        "assignable_team_members": [],
        "assignable_team_member_groups": []
    },
    "activities": [
        {
            "id": 1218182,
            "is_internal": false,
            "editable": false,
            "type": "Activities::Comment",
            "message": "Hi,\n\nI cannot reproduce this with our latest released version - 3.1.0.\nWhich CodeIgniter version did you use?\n\nCheers,\nAndrey.",
            "automated_response": false,
            "created_at": "2016-09-27T07:48:46.893Z",
            "updated_at": "2016-09-27T07:48:46.893Z",
            "actor": {
                "username": "narf",
                "cleared": false,
                "verified": false,
                "url": "/narf",
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/variants/000/038/733/d7e0c2e6fd2d983de427427f05ddae7189809a0b_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "codeigniter"
        },
        {
            "id": 1218295,
            "is_internal": false,
            "editable": false,
            "type": "Activities::Comment",
            "message": "Hi @Narf,\n\nActually it affects the latest CI version running on servers with **PHP versions < 5.4.0**, because newer PHP versions automatically decode the new HTML5 entities with the given flag.\nThe code snippet that does this rests at line 668 in ./system/core/Security.php\n```\n$flag = is_php('5.4')\n\t\t\t? ENT_COMPAT | ENT_HTML5\n\t\t\t: ENT_COMPAT;\n```\nSo if the PHP version is less than 5.4, the `ENT_HTML5` flag is not added, and *as mentioned before*, the regular expression in line 676 will fail to detect the HTML5 entities and hence not decoded leading to failure to detect javascript URI attacks resulting in Cross-Site Scripting (XSS)\n",
            "automated_response": false,
            "created_at": "2016-09-27T08:47:52.037Z",
            "updated_at": "2016-09-27T08:47:52.037Z",
            "actor": {
                "username": "0xsyndr0me",
                "cleared": false,
                "verified": false,
                "url": "/0xsyndr0me",
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/variants/000/040/377/8b0b9be2bac5759979445550c29fbd6f8612469b_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "codeigniter"
        },
        {
            "id": 1218303,
            "is_internal": false,
            "editable": false,
            "type": "Activities::Comment",
            "message": "Here is a PoC from my local host\n\npiece of code added into controller\n```\necho $this->security->xss_clean($_GET['xss']);\n```\n\n**Result**\nCI_XSS.JPG",
            "automated_response": false,
            "created_at": "2016-09-27T08:55:15.410Z",
            "updated_at": "2016-09-27T08:55:15.410Z",
            "actor": {
                "username": "0xsyndr0me",
                "cleared": false,
                "verified": false,
                "url": "/0xsyndr0me",
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/variants/000/040/377/8b0b9be2bac5759979445550c29fbd6f8612469b_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "attachments": [
                {
                    "id": 123302,
                    "filename": "CI_XSS.JPG",
                    "type": "image/jpeg",
                    "url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/123/302/91f1c7f9210aa508016e3e46c51912bd642e4fe2/CI_XSS.JPG?response-content-disposition=attachment%3B%20filename%3D%22CI_XSS.JPG%22%3B%20filename%2A%3DUTF-8%27%27CI_XSS.JPG&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ3M3ZUGHF%2F20230829%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230829T080956Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjENf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDalu3R3A%2FswTPJ4xVHOG9Rxl2RApgY8sDhKppqfGAqUQIgYRBv%2BXAmyBbaQawCIn40ZDK40fVkJHB%2FveoHhr1DlesqugUIoP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDJ%2F4bKMCrS7jIJwMtiqOBd%2FriANSh5ipBo8Pk%2F2qb1z5a0uuM2PdRzqESOe7VvDp2Qb4FOUjbmWUlbaFWD8QKCBfRxUchp5N36dI8BDE1Fu3JNTXj6zUJB8ynNY37PM8a9OxhHOFsdRIDX2DAUt99aaSeFLpCfWSzZmgFg5zOzSET2USuldSMvVn0mF6Q3TgV0FGypNplJbb7pipy5SsltuaylNiSVXn7ksT4%2BCaiDyPu0aiEximdK7dDGqZGy%2FV5TM3wWaZyabFm5LkvbKmkMsSuy%2FteOZVfnz5WS54DCAgFk3BkYRe1sR9v7G6bWkI2wLugYmg72chgnrnriCzE0hGEXnO9EFMBws0BGBY3Ug4FDE1TZMi87%2FqBcGR97mlCIYsP%2BVCM723Bd6WSUS%2BzEeBYFoUT9iO5YHFEy8fw%2FnrM1iOt1nKsPdTdOzQduTV1SlzJ%2FDLuHjFyVBWGCivs88xGFIqJPeFqSOHqUo3UzYeDQhdPJzkDDM%2FI9njibpaiyGs1oALVu3IBnIxkXS5CHFpYciPsHF%2F4raxKXpon6BMx3ZAMKTfhYOcFqIcFIDi22YkKJxYedXNOhMtQ7sTAYBwZG%2B1z%2FgIPfJPJeN4BkF%2FNpnvwThw2cbyM6EmTfwe0qqtLfmIZHaIa0eyCtd96iO15JfptkDRrrOb3Aqpkp15g%2B22lD4mhnBnaJv67%2FvHeJH7Nir6w%2BxGqIJmozIJ828xZ2Pr97VsI4EmPi637KNZV5SVnXEIkRqhsZCEz%2F8o4v6m8mHkk2%2B9mlkkXMjGHrcFiHKSwnWxuDY%2BhaT9EfJFDQakyKaWJXWwRUI9%2F%2Bgz3LwComeOi11ysyBCCZsLyamqnStpOeP6aNEUTXLa%2B0OTdU22NEbO4iiVsv63jDDcqranBjqxASLvyauRn%2FzRj6Fk%2FoXEaEcToFwsxz%2FuiH7YLtJQoADGa4xQ%2BHp5%2BtVbj10EvYfXNdzqfn7NU0Zp7FAb4j2bw73CIg1m%2F%2BG0yg9qkKCCJeh9mVROmsoU9faMoswyb5G0l01K547DYaXx6PXGCdiFcf3FmifZ66Uzod21ITV%2B%2FEeXzYeGCknxhsK9dcOw4z5NYmglL7Ns1qDcK6MTZ8044CCp6XRpr%2Fr8GamPJmpfWx1T2Q%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=732edfc05ca1639f52823598314e433f8ca486c0d10ae1ea2c3616bd6ff396a9"
                }
            ],
            "genius_execution_id": null,
            "team_handle": "codeigniter"
        },
        {
            "id": 1218728,
            "is_internal": false,
            "editable": false,
            "type": "Activities::BugTriaged",
            "message": "Hi again @syndr0me ,\nIndeed, the issue affects PHP 5.3 environments.\n\nThe semi-colon thing is intentional though - that's not where the problem comes from (see the ``entity_decode()`` description in the docblock to understand why it is that way).\n\nI've got a patch ready and will try to prepare for a release soon.\nThank you!\n\nCheers,\nAndrey.",
            "automated_response": false,
            "created_at": "2016-09-27T12:03:41.879Z",
            "updated_at": "2016-09-27T12:03:41.879Z",
            "actor": {
                "username": "narf",
                "cleared": false,
                "verified": false,
                "url": "/narf",
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/variants/000/038/733/d7e0c2e6fd2d983de427427f05ddae7189809a0b_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "codeigniter"
        },
        {
            "id": 1222515,
            "is_internal": false,
            "editable": false,
            "type": "Activities::Comment",
            "message": "Thanks, Andry for confirmation ^_^\n\nI got your point but what I meant is that I do not understand why you take care of those *special cases* where browsers interpret entities not followed by a semi-colon and ignore the most often case where they are followed by semi-colons.\n\nFrom my point, I guess if the regular expression changed to something like `/&[a-z]{2,}(?![a-z])/i` you will be able to detect and decode entities (both followed or not followed by a semi-colon) and the attack vector will fail ;).\n\nSincerely,\nAbood",
            "automated_response": false,
            "created_at": "2016-09-28T21:27:53.059Z",
            "updated_at": "2016-09-28T21:27:53.059Z",
            "actor": {
                "username": "0xsyndr0me",
                "cleared": false,
                "verified": false,
                "url": "/0xsyndr0me",
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/variants/000/040/377/8b0b9be2bac5759979445550c29fbd6f8612469b_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "codeigniter"
        },
        {
            "id": 1248144,
            "is_internal": false,
            "editable": false,
            "type": "Activities::Comment",
            "message": "Hi @narf,\n\nJust wanted to know whether you have any plans to release the fix any time soon.\n\nThanks,\nAbood",
            "automated_response": false,
            "created_at": "2016-10-14T19:15:45.295Z",
            "updated_at": "2016-10-14T19:15:45.295Z",
            "actor": {
                "username": "0xsyndr0me",
                "cleared": false,
                "verified": false,
                "url": "/0xsyndr0me",
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/variants/000/040/377/8b0b9be2bac5759979445550c29fbd6f8612469b_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "codeigniter"
        },
        {
            "id": 1250361,
            "is_internal": false,
            "editable": false,
            "type": "Activities::Comment",
            "message": "Hi @syndr0me,\n\nYes I do. Sorry about the delay, I've been really busy ... Hopefully, we should release by the end of the week.\nI haven't forgotten about this, but thanks for keeping us focused. :)\n\nCheers,\nAndrey.",
            "automated_response": false,
            "created_at": "2016-10-17T08:13:53.784Z",
            "updated_at": "2016-10-17T08:13:53.784Z",
            "actor": {
                "username": "narf",
                "cleared": false,
                "verified": false,
                "url": "/narf",
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/variants/000/038/733/d7e0c2e6fd2d983de427427f05ddae7189809a0b_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "codeigniter"
        },
        {
            "id": 1263747,
            "is_internal": false,
            "editable": false,
            "type": "Activities::BugResolved",
            "message": "Hi,\n\nJust confirming that we've released the fix with version 3.1.1.\nThanks again for reporting the issue.\n\nCheers,\nAndrey.",
            "automated_response": false,
            "created_at": "2016-10-24T07:14:35.921Z",
            "updated_at": "2016-10-24T07:14:35.921Z",
            "actor": {
                "username": "narf",
                "cleared": false,
                "verified": false,
                "url": "/narf",
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/variants/000/038/733/d7e0c2e6fd2d983de427427f05ddae7189809a0b_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "reporter": {
                "username": "0xsyndr0me",
                "url": "/0xsyndr0me"
            },
            "genius_execution_id": null,
            "team_handle": "codeigniter"
        },
        {
            "id": 1283718,
            "is_internal": false,
            "editable": false,
            "type": "Activities::AgreedOnGoingPublic",
            "message": "You are always welcome ^_^\nMind if we disclose this?",
            "automated_response": false,
            "created_at": "2016-11-04T02:22:32.808Z",
            "updated_at": "2016-11-04T02:22:32.808Z",
            "first_to_agree": true,
            "actor": {
                "username": "0xsyndr0me",
                "cleared": false,
                "verified": false,
                "url": "/0xsyndr0me",
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/variants/000/040/377/8b0b9be2bac5759979445550c29fbd6f8612469b_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "codeigniter"
        },
        {
            "id": 1284144,
            "is_internal": false,
            "editable": false,
            "type": "Activities::AgreedOnGoingPublic",
            "message": "",
            "automated_response": false,
            "created_at": "2016-11-04T10:53:18.719Z",
            "updated_at": "2016-11-04T10:53:18.719Z",
            "actor": {
                "username": "narf",
                "cleared": false,
                "verified": false,
                "url": "/narf",
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/variants/000/038/733/d7e0c2e6fd2d983de427427f05ddae7189809a0b_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "codeigniter"
        },
        {
            "id": 1284145,
            "is_internal": false,
            "editable": false,
            "type": "Activities::ReportBecamePublic",
            "message": "",
            "automated_response": false,
            "created_at": "2016-11-04T10:53:18.749Z",
            "updated_at": "2016-11-04T10:53:18.749Z",
            "actor": {
                "username": "narf",
                "cleared": false,
                "verified": false,
                "url": "/narf",
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/variants/000/038/733/d7e0c2e6fd2d983de427427f05ddae7189809a0b_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "codeigniter"
        }
    ],
    "activity_page_count": 1,
    "activity_page_number": 1,
    "summaries": [
        {
            "category": "team",
            "can_view?": true,
            "can_create?": false
        },
        {
            "category": "researcher",
            "can_view?": true,
            "can_create?": false
        }
    ]
}