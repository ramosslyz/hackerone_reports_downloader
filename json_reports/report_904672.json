{
    "id": 904672,
    "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC85MDQ2NzI=",
    "url": "https://hackerone.com/reports/904672",
    "title": "Server-side Template Injection in lodash.js ",
    "state": "Closed",
    "substate": "informative",
    "severity_rating": "high",
    "readable_substate": "Informative",
    "created_at": "2020-06-22T06:16:28.733Z",
    "submitted_at": "2020-06-22T06:16:28.733Z",
    "is_member_of_team?": false,
    "is_organization_group_member?": false,
    "reporter": {
        "disabled": false,
        "username": "zerohex",
        "url": "/zerohex",
        "profile_picture_urls": {
            "small": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "is_me?": false,
        "cleared": false,
        "verified": false,
        "hackerone_triager": false,
        "hacker_mediation": false
    },
    "team": {
        "id": 23949,
        "url": "https://hackerone.com/nodejs-ecosystem",
        "handle": "nodejs-ecosystem",
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
            "medium": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "permissions": [],
        "submission_state": "disabled",
        "default_currency": "usd",
        "awards_miles": false,
        "offers_bounties": true,
        "state": "public_mode",
        "only_cleared_hackers": false,
        "pentest_feature_enabled?": false,
        "profile": {
            "name": "Node.js third-party modules",
            "twitter_handle": "",
            "website": "https://nodejs.org/en/security/",
            "about": "This program was used to handle vulnerabilities in the Node.js ecosystem."
        }
    },
    "has_bounty?": false,
    "in_validation?": false,
    "can_view_team": true,
    "can_view_report": true,
    "is_external_bug": false,
    "is_published": false,
    "is_participant": false,
    "has_collaborators": false,
    "submitted_by_team_member": false,
    "stage": 4,
    "public": true,
    "visibility": "full",
    "cve_ids": [],
    "singular_disclosure_disabled": true,
    "disclosed_at": "2021-06-28T08:43:38.785Z",
    "bug_reporter_agreed_on_going_public_at": "2021-02-15T20:56:08.284Z",
    "team_member_agreed_on_going_public_at": "2021-06-28T08:43:38.697Z",
    "comments_closed?": false,
    "facebook_team?": false,
    "team_private?": false,
    "vulnerability_information": "I would like to report Server-side Template Injection in lodash.js  (_.template function)\nIt allows the execution of code on the server\n\n# Module\n\n**module name:** lodash\n**version:** 4.17.15\n**npm page:** `https://www.npmjs.com/package/lodash`\n\n## Module Description\n\nThe Lodash library exported as Node.js modules.\n\n## Module Stats\n\n26,664,631 weekly downloads\n\n# Vulnerability\n\n## Vulnerability Description\n\nThe _.template function of the lodash package does not properly validate user-supplied input. \n\n\n\nAn application making use of the lodash package may be exploited by an attacker that controls the value of a parameter processed by the _.template function. An attacker can inject code such as Javascript within parenthesis for example `parameter=${JSON.stringify(process.env)}` which will be executed by the server.\n\n## Steps To Reproduce:\n\n**Step 1:** Create a test application that requires the lodash.js library. The application below accepts user-supplied input in the  'name' parameter that is handled by lodash `_.template` function\n\n```\nconst express = require('express');\nconst _ = require('lodash');\nconst escapeHTML = require('escape-html');\nconst app = express();\napp.get('/', (req, res) => {\n  res.set('Content-Type', 'text/html');\n  const name = req.query.name\n  // Create a template from user input\n  const compiled = _.template(\"Hello \" + escapeHTML(name) + \".\");\n  res.status(200).send(compiled());\n});\n\napp.listen(8000, () => {\n  console.log('POC app listening on port 8000!')\n});\n```\n\n**Step 2:** Visit the vulnerable application at http://127.0.0.1:8000/?name=Test\n\n**Step 3:** Visit the vulnerable application and enter a payload such as `${JSON.stringify(process.env)}` into the `name` parameter e.g.  http://127.0.0.1:8000/?name=Test${JSON.stringify(process.env)}\n\n## Supporting Material/References:\n\n- OSX 10.15.5\n- NODEJS v10.16.0\n- NPM v 6.9.0\n\n# Wrap up\n\n- I contacted the maintainer to let them know: [Y/N] N\n- I opened an issue in the related repository: [Y/N] N\n\n> Hunter's comments and funny memes goes here\n\nApologies if I haven't used the ideal terminology or if this is a duplicate.\n\n## Impact\n\nRemote code execution",
    "weakness": {
        "id": 70,
        "name": "Code Injection"
    },
    "original_report_id": null,
    "original_report_url": null,
    "attachments": [],
    "allow_singular_disclosure_at": null,
    "vote_count": 5,
    "voters": [
        "0xwise",
        "killua88",
        "ekgaribadmi",
        "m4v3r1ck_m4n",
        "manofthevoid"
    ],
    "severity": {
        "rating": "high",
        "score": 8.6,
        "author_type": "User",
        "metrics": {
            "attack_vector": "network",
            "attack_complexity": "low",
            "privileges_required": "none",
            "user_interaction": "none",
            "scope": "unchanged",
            "confidentiality": "high",
            "integrity": "low",
            "availability": "low"
        }
    },
    "structured_scope": {
        "databaseId": 5914,
        "asset_type": "SOURCE_CODE",
        "asset_identifier": "lodash",
        "max_severity": "critical"
    },
    "abilities": {
        "assignable_team_members": [],
        "assignable_team_member_groups": []
    },
    "activities": [
        {
            "id": 8366284,
            "is_internal": false,
            "editable": false,
            "type": "Activities::Comment",
            "message": "I think building templates based on untrusted input with any templating engine can be considered a vulnerability. I am not sure if this is due to a bug in Lodash or is it due the way it is used.\n\n@zerohex What kind of behavior do you expect for the provided sample?",
            "automated_response": false,
            "created_at": "2020-06-22T07:17:00.750Z",
            "updated_at": "2020-06-22T07:17:00.750Z",
            "actor": {
                "username": "marcinhoppe",
                "cleared": false,
                "verified": false,
                "url": "/marcinhoppe",
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "nodejs-ecosystem"
        },
        {
            "id": 8389728,
            "is_internal": false,
            "editable": false,
            "type": "Activities::Comment",
            "message": "Hi, \n\nAfter reading Lodash documentation and repo comments by the maintainer it appears that template() will interpret ${} as template delimiters by design to support ES. https://github.com/lodash/lodash/issues/2658. \n\nLooking more into the source code in template.js a match is performed using regex to check if the input contains the pattern `${}`. When a match occurs the input is evaluated as an embedded expression. With the provided sample as an example, a value of `${JSON.stringify(process.env)}` being handed to template() would result in the return of the application environment variables, or if `name=Fred${7*7}` the result would be Fred49\n\n```\n/**\n * Used to match\n * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n */\nvar reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n```\n\nHowever, as you allude, my POC implementation is likely flawed (due to my inexperience and the indicators pointing towards an issue that is a by-design feature). Sorry for wasting your time on this.\n\n",
            "automated_response": false,
            "created_at": "2020-06-23T21:49:42.229Z",
            "updated_at": "2020-06-23T21:49:42.229Z",
            "actor": {
                "username": "zerohex",
                "cleared": false,
                "verified": false,
                "url": "/zerohex",
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "nodejs-ecosystem"
        },
        {
            "id": 8403714,
            "is_internal": false,
            "editable": false,
            "type": "Activities::Comment",
            "message": "@zerohex No worries! I will close this report as informational.",
            "automated_response": false,
            "created_at": "2020-06-25T08:47:17.805Z",
            "updated_at": "2020-06-25T08:47:17.805Z",
            "actor": {
                "username": "marcinhoppe",
                "cleared": false,
                "verified": false,
                "url": "/marcinhoppe",
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "nodejs-ecosystem"
        },
        {
            "id": 8403730,
            "is_internal": false,
            "editable": false,
            "type": "Activities::BugInformative",
            "message": "This functionality in Lodash works as expected. Templates should not be built based on untrusted input data.",
            "automated_response": false,
            "created_at": "2020-06-25T08:48:40.163Z",
            "updated_at": "2020-06-25T08:48:40.163Z",
            "actor": {
                "username": "marcinhoppe",
                "cleared": false,
                "verified": false,
                "url": "/marcinhoppe",
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "nodejs-ecosystem"
        },
        {
            "id": 10678488,
            "is_internal": false,
            "editable": false,
            "type": "Activities::Comment",
            "message": "Hi, just stumbled across CVE-2021-23337 which seems to confirm that this report was valid (https://nvd.nist.gov/vuln/detail/CVE-2021-23337) (https://snyk.io/vuln/SNYK-JS-LODASH-1040724).",
            "automated_response": false,
            "created_at": "2021-02-15T20:20:22.080Z",
            "updated_at": "2021-02-15T20:20:22.080Z",
            "actor": {
                "username": "zerohex",
                "cleared": false,
                "verified": false,
                "url": "/zerohex",
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "nodejs-ecosystem"
        },
        {
            "id": 10678658,
            "is_internal": false,
            "editable": false,
            "type": "Activities::AgreedOnGoingPublic",
            "message": "Turns out this was a bug (CVE-2021-23337) so I'd like to disclose the report",
            "automated_response": false,
            "created_at": "2021-02-15T20:56:08.322Z",
            "updated_at": "2021-02-15T20:56:08.322Z",
            "first_to_agree": true,
            "actor": {
                "username": "zerohex",
                "cleared": false,
                "verified": false,
                "url": "/zerohex",
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "nodejs-ecosystem"
        },
        {
            "id": 12267490,
            "is_internal": false,
            "editable": false,
            "type": "Activities::AgreedOnGoingPublic",
            "message": "@zerohex indeed so.\nI'm disclosing the report, thank you!\n",
            "automated_response": false,
            "created_at": "2021-06-28T08:43:38.714Z",
            "updated_at": "2021-06-28T08:43:38.714Z",
            "actor": {
                "username": "lirantal",
                "cleared": false,
                "verified": false,
                "url": "/lirantal",
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "nodejs-ecosystem"
        },
        {
            "id": 12267491,
            "is_internal": false,
            "editable": false,
            "type": "Activities::ReportBecamePublic",
            "message": "",
            "automated_response": false,
            "created_at": "2021-06-28T08:43:38.817Z",
            "updated_at": "2021-06-28T08:43:38.817Z",
            "actor": {
                "username": "lirantal",
                "cleared": false,
                "verified": false,
                "url": "/lirantal",
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/variants/000/096/045/7e9d9170c9862d8d3697b11b0bb7160d40444c16_original.jpeg/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "nodejs-ecosystem"
        }
    ],
    "activity_page_count": 1,
    "activity_page_number": 1,
    "summaries": [
        {
            "category": "team",
            "can_view?": true,
            "can_create?": false
        },
        {
            "category": "researcher",
            "can_view?": true,
            "can_create?": false
        }
    ]
}