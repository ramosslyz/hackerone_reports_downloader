{
    "id": 874401,
    "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC84NzQ0MDE=",
    "url": "https://hackerone.com/reports/874401",
    "title": "Use of Ruby Forwardable module and runtime meta-programming may introduce vulnerabilities",
    "state": "Closed",
    "substate": "informative",
    "severity_rating": "medium",
    "readable_substate": "Informative",
    "created_at": "2020-05-14T18:46:29.801Z",
    "submitted_at": "2020-05-14T18:46:29.801Z",
    "is_member_of_team?": false,
    "is_organization_group_member?": false,
    "reporter": {
        "disabled": false,
        "username": "jobert",
        "url": "/jobert",
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98"
        },
        "is_me?": false,
        "cleared": true,
        "verified": true,
        "hackerone_triager": false,
        "hacker_mediation": false
    },
    "team": {
        "id": 264,
        "url": "https://hackerone.com/gitlab",
        "handle": "gitlab",
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/variants/f0hovtq73f9ap815a0r1w42bocp4/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
            "medium": "https://profile-photos.hackerone-user-content.com/variants/f0hovtq73f9ap815a0r1w42bocp4/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "permissions": [],
        "submission_state": "open",
        "default_currency": "usd",
        "awards_miles": false,
        "offers_bounties": true,
        "state": "public_mode",
        "only_cleared_hackers": false,
        "pentest_feature_enabled?": false,
        "profile": {
            "name": "GitLab",
            "twitter_handle": "gitlab",
            "website": "https://about.gitlab.com",
            "about": "A single application for the entire software development lifecycle."
        }
    },
    "has_bounty?": false,
    "in_validation?": false,
    "can_view_team": true,
    "can_view_report": true,
    "is_external_bug": false,
    "is_published": false,
    "is_participant": false,
    "has_collaborators": false,
    "submitted_by_team_member": false,
    "stage": 4,
    "public": true,
    "visibility": "full",
    "cve_ids": [],
    "singular_disclosure_disabled": true,
    "disclosed_at": "2021-11-15T16:24:12.617Z",
    "bug_reporter_agreed_on_going_public_at": "2021-11-15T16:24:12.477Z",
    "team_member_agreed_on_going_public_at": "2021-11-15T03:00:41.852Z",
    "comments_closed?": false,
    "facebook_team?": false,
    "team_private?": false,
    "vulnerability_information": "I was digging through the `gitlab-foss`  repository and noticed an interested pattern that seems to be adopted in a few places: the use of `Forwardable` with meta-programming over delegators, explicit `attr_reader` methods or `method_missing`. Heads up: the arbitrary file read vulnerability I demonstrate in this report isn't currently exploitable. I was somewhat hesitant to submit this, but I think it'd be a good refactor nonetheless. Before diving into the vulnerability, I'd like to start by describing Ruby's `Forwardable` module behavior in combination with `def_delegators`.\n\nBefore Ruby 2.5.1, delegators could be implemented using the `delegate` or `method_missing` methods. It would look something like this:\n\n```ruby\nclass HelloWorld\n  def initialize(attributes)\n    @options = OpenStruct.new(attributes)\n  end\n\n  def say_it\n    \"Hello world\"\n  end\n\n  def method_missing(method, *args)\n    @options.send(method, *args)\n  end\nend\n```\n\nWhen a method would be called on a `HelloWorld` instance that wouldn't exist, it would pass it along to the `@options` instance variable.\n\n```ruby\nHelloWorld.new({}).say_it\n# => \"Hello world\"\n\nHelloWorld.new(hello: \"world\").hello\n# => \"world\"\n\nHelloWorld.new(say_it: \"Not hello world\").say_it\n# => \"Hello world\"\n```\n\nBecause the `say_it` method is already defined on the class, its behavior won't be overridden when passing `say_it` to the initializer.\n\nThis class can be refactored to use the `Forwardable` method and `def_delegators`:\n\n```ruby\nclass HelloWorld\n  extend Forwardable\n\n  def initialize(attributes)\n    @options = OpenStruct.new(attributes)\n\n    self.class.instance_eval do\n      def_delegators :@options, *attributes.keys\n    end\n  end\n\n  def say_it\n    \"Hello world\"\n  end\nend\n```\n\nAt first glance, this seems like it has the same behavior as the first code example; but there's one crucial difference: **because the delegators are meta-programmed after the class was loaded, it can overwrite existing methods**:\n\n```ruby\nHelloWorld.new({}).say_it\n# => \"Hello world\"\n\nHelloWorld.new(hello: \"world\").hello\n# => \"world\"\n\nHelloWorld.new(say_it: \"Not hello world\").say_it\n# => \"Not hello world\"\n#        ^------------------ The method is overwritten\n```\n\nAs can be seen in the above example, the `say_it` method is overwritten when passing it to the initializer.\n\nGoing back to GitLab's main Ruby repository, there are a number of places where the `Forwardable` module is used. One place in particular stands out: `Gitlab::ImportExport::AfterExportStrategies::BaseAfterExportStrategy`. This class is a base class used for:\n\n* `Gitlab::ImportExport::AfterExportStrategies::MoveFileStrategy`\n* `Gitlab::ImportExport::AfterExportStrategies::DownloadNotificationStrategy`\n* `Gitlab::ImportExport::AfterExportStrategies::WebUploadStrategy`\n\n```ruby\n# frozen_string_literal: true\n\nmodule Gitlab\n  module ImportExport\n    module AfterExportStrategies\n      class BaseAfterExportStrategy\n        extend Gitlab::ImportExport::CommandLineUtil\n        include ActiveModel::Validations\n        extend Forwardable\n\n        # ...\n\n        def initialize(attributes = {})\n          @options = OpenStruct.new(attributes)\n\n          self.class.instance_eval do\n            def_delegators :@options, *attributes.keys\n          end\n        end\n\n        # ...\n\n        def archive_path\n          project.import_export_shared.archive_path\n        end\n\n        # ...\n      end\n    end\n  end\nend\n```\n\nThe `MoveFileStrategy` and `WebUploadStrategy` classes overwrite the initializer method or declare its arguments, so these don't meta-program the arguments on the class or limit what can be delegated. My worry, and the potential security vulnerabilities, is that if a new strategy would be declared that inherits from the `BaseAfterExportStrategy` without overwriting the initializer, it may give attackers the ability to change the behavior of existing methods.\n\nAs an example, let's say the `DownloadNotificationStrategy` class would be initialized with a user-inputted hash: if the user would specify the `archive_path` argument, it could overwrite the method and point it to a different archive on the local system. Same for the `WebUploadStrategy`: if the `initialize` method would be removed today, specs would still pass, but suddenly a security vulnerability would be present if the user could give it arbitrary arguments (same thing, overwrite the `archive_path`).\n\nI know that this isn't the security vulnerabilities you typically receive from me, but after reading the code, I felt it was the right thing to do to warn you about the potential security vulnerabilities that could be introduced in the future.\n\nThis is based on the `master` branch as of May 13, 2020.\n\n# Recommendation\nGiven that there are only three classes inheriting from the base class, I'd rewrite the code like this to avoid trouble in the future (untested). Direct download: F828467.\n\n```diff\ndiff --git a/lib/gitlab/import_export/after_export_strategies/base_after_export_strategy.rb b/lib/gitlab/import_export/after_export_strategies/base_after_export_strategy.rb\nindex b30258123d4..b52073978ee 100644\n--- a/lib/gitlab/import_export/after_export_strategies/base_after_export_strategy.rb\n+++ b/lib/gitlab/import_export/after_export_strategies/base_after_export_strategy.rb\n@@ -6,7 +6,6 @@ module Gitlab\n       class BaseAfterExportStrategy\n         extend Gitlab::ImportExport::CommandLineUtil\n         include ActiveModel::Validations\n-        extend Forwardable\n \n         StrategyError = Class.new(StandardError)\n \n@@ -16,14 +15,6 @@ module Gitlab\n \n         public\n \n-        def initialize(attributes = {})\n-          @options = OpenStruct.new(attributes)\n-\n-          self.class.instance_eval do\n-            def_delegators :@options, *attributes.keys\n-          end\n-        end\n-\n         def execute(current_user, project)\n           @project = project\n \n@@ -67,10 +58,6 @@ module Gitlab\n           project.import_export_shared.lock_files_path\n         end\n \n-        def archive_path\n-          project.import_export_shared.archive_path\n-        end\n-\n         def locks_present?\n           project.import_export_shared.locks_present?\n         end\ndiff --git a/lib/gitlab/import_export/after_export_strategies/download_notification_strategy.rb b/lib/gitlab/import_export/after_export_strategies/download_notification_strategy.rb\nindex 39a6090ad87..da0a593691c 100644\n--- a/lib/gitlab/import_export/after_export_strategies/download_notification_strategy.rb\n+++ b/lib/gitlab/import_export/after_export_strategies/download_notification_strategy.rb\n@@ -10,6 +10,10 @@ module Gitlab\n           false\n         end\n \n+        def archive_path\n+          project.import_export_shared.archive_path\n+        end\n+\n         private\n \n         def strategy_execute\ndiff --git a/lib/gitlab/import_export/after_export_strategies/move_file_strategy.rb b/lib/gitlab/import_export/after_export_strategies/move_file_strategy.rb\nindex 2e3136936f8..8a58f0911e3 100644\n--- a/lib/gitlab/import_export/after_export_strategies/move_file_strategy.rb\n+++ b/lib/gitlab/import_export/after_export_strategies/move_file_strategy.rb\n@@ -4,6 +4,8 @@ module Gitlab\n   module ImportExport\n     module AfterExportStrategies\n       class MoveFileStrategy < BaseAfterExportStrategy\n+        attr_reader :archive_path\n+\n         def initialize(archive_path:)\n           @archive_path = archive_path\n         end\ndiff --git a/lib/gitlab/import_export/after_export_strategies/web_upload_strategy.rb b/lib/gitlab/import_export/after_export_strategies/web_upload_strategy.rb\nindex e2dba831661..80b12a76d26 100644\n--- a/lib/gitlab/import_export/after_export_strategies/web_upload_strategy.rb\n+++ b/lib/gitlab/import_export/after_export_strategies/web_upload_strategy.rb\n@@ -16,8 +16,11 @@ module Gitlab\n           end\n         end\n \n+        attr_reader :url, :http_method\n+\n         def initialize(url:, http_method: PUT_METHOD)\n-          super\n+          @url = url\n+          @http_method = http_method\n         end\n \n         protected\n@@ -32,6 +35,10 @@ module Gitlab\n           end\n         end\n \n+        def archive_path\n+          project.import_export_shared.archive_path\n+        end\n+\n         private\n \n         def send_file\n```\n\n## Impact\n\nAllowing an attacker to pass a hash to the initializer of a class inheriting from `BaseAfterExportStrategy` may lead to arbitrary file read, or potentially even to remote code execution.",
    "weakness": {
        "id": 18,
        "name": "Information Disclosure"
    },
    "original_report_id": null,
    "original_report_url": null,
    "attachments": [
        {
            "id": 828467,
            "file_name": "patch.diff",
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/7A7wcfj8Cff4HQyPYctGXBz7?response-content-disposition=attachment%3B%20filename%3D%22patch.diff%22%3B%20filename%2A%3DUTF-8%27%27patch.diff&response-content-type=text%2Fx-patch&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQS6BUFUEE%2F20230829%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230829T070606Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjENf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDD9FHXU0ld2gtz64ZpnjlAw950FEQMqICGzFbRk4pC0AIhAMguqPvT6svEZTrq0b2WG76XHZFVJtNfIkDZQTZEBAWsKrsFCKD%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQAxoMMDEzNjE5Mjc0ODQ5IgygpHklaEgyfIVznI8qjwWOIdWktDm9Jabt75qlpVIMtXS%2FssDvdH3liIUrqSO%2Fn2cugELxTHsITAFkdxtpuIqUfC022kq1x7KnVsJ8dbHLeYcjqR%2BmyMsSM7Xr6UnozwhB4Y9cX%2F6UxIQ4Shov2Zz%2B4D9ygjyO8TAHyL4iD%2B6CaUtaTRDQPU4E5CflxhSrTzcxVSW%2BqeTqxyYZggcMEnSIhCb9IgOZ920mfAKlQNAc9hEp1VBpmPzgJ45%2F2pnRD4bAeZccOTQ2N7ai9tDdrydJZNrpSPB7gPdG8BDlQdEVpOmjIqxieGAy0zoKfSOl%2F5VHAxD0l8CodVdcp4kMEcdDDDNKGFD%2BYvWC25TJ5mw59Uk5USrQymohsM1fenBd610Hv6tbF2BGQAVrViDT2nJXnDxNQyRmqsIbJeitdGdnlpUpx45ObdZIcNmzHof%2FPv%2FVqoTgI06D0Wk6Z63VBvlhxWqLe%2BSaLcx2GAU%2Fy14hWDJEf7ZqhZ%2BM9OJtRIxfWXKISDxoTmTfZp%2F5B%2FiqubY1RL%2FDk%2BkMTxMcbSGw43o6kyeDbQbyyaDtV%2BYAWvx%2BSe9%2FhRFQPmqTdKCb%2BT23vEPLhAJ2vYsQ%2BTTeLcxLwsZ3TUOVQTBnE3%2FUfsxEMeVHPai2qUl0CGsun0HgjD95lQIzmeHal%2B%2BEP6LBM8JhmIfrmEmxecDlEpJEWMvTnef%2FUlhfSrGHNndRTanOi%2BSbxAkMtWE84y5d6km2hMzs9vO8ITHcwoDqJD9MHDjIWYVJG9MlQbnFckuSFWS1rIVtaRMcayfrXSfW9hMolo%2BRqzfol8wiNwiDk%2FCKe151LpjhbW4NYcVDBPgw8tG9ATi5pkPIxbtfE3grt%2BpRK%2Faq2%2F5BArkGIJcrN5tzOoFCLeiuMLOltqcGOrABo0TqeJmB%2BrDGBqaoTHwPAvK4%2FwgcpFFUm8NwdvRQDqlRqJax0yb%2BBe6w2ez9ShfsMMqJTOyg4Y%2FE%2BuAcIW10gTr%2BvpIXBkF%2F8x6GDpOA2qbdCvafgrSufD%2B5I4%2BvTz5e4TgiIX3QWw7OH4QNLX1OUdaUk3t0Pz5pXzlKIOWV579ZeH8AP1NSW2e%2Fj%2B8nGME4HiDOlB%2BZW%2FO8raM%2BngBp42hfPK0q4CctRMJh8z2fdSQ%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=857dcf2857af70121145066eabec1f6d8382a16c82d7cbad1c4773ecdd9b7602",
            "file_size": 3315,
            "type": "text/x-patch"
        }
    ],
    "allow_singular_disclosure_at": null,
    "vote_count": 1,
    "voters": [
        "official_blackhat13"
    ],
    "severity": {
        "rating": "medium",
        "author_type": "Team"
    },
    "structured_scope": {
        "databaseId": 18138,
        "asset_type": "URL",
        "asset_identifier": "gitlab.com",
        "max_severity": "critical"
    },
    "abilities": {
        "assignable_team_members": [],
        "assignable_team_member_groups": []
    },
    "activities": [
        {
            "id": 8003555,
            "is_internal": false,
            "editable": false,
            "type": "Activities::Comment",
            "message": "Hi @jobert,\n\nThank you for submitting this report. We will investigate the issue as soon as possible.\nDue to our current workload, we will get back within 10 business days with an update.\n\nPlease refrain from submitting your report or inquiring about its status through\nadditional channels, as this unnecessarily binds resources in the security team.\n\nBest regards,\nGitLab Security Team\n",
            "automated_response": true,
            "created_at": "2020-05-14T19:06:09.751Z",
            "updated_at": "2020-05-14T19:06:09.751Z",
            "actor": {
                "username": "gitlab-securitybot",
                "cleared": false,
                "verified": false,
                "url": "/gitlab-securitybot",
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "gitlab"
        },
        {
            "id": 8003933,
            "is_internal": false,
            "editable": false,
            "type": "Activities::Comment",
            "message": "I'd like to point out the following code path to further demonstrate the potential impact of this: in `lib/api/project_export.rb` on line 47, the `:id/export` API endpoint is defined.\n\n```ruby\ndesc 'Start export' do\n  detail 'This feature was introduced in GitLab 10.6.'\nend\nparams do\n  optional :description, type: String, desc: 'Override the project description'\n  optional :upload, type: Hash do\n    optional :url, type: String, desc: 'The URL to upload the project'\n    optional :http_method, type: String, default: 'PUT', desc: 'HTTP method to upload the exported project'\n  end\nend\npost ':id/export' do\n  check_rate_limit! :project_export, [current_user, :project_export, user_project]\n\n  project_export_params = declared_params(include_missing: false)\n  after_export_params = project_export_params.delete(:upload) || {}\n\n  export_strategy = if after_export_params[:url].present?\n                      params = after_export_params.slice(:url, :http_method).symbolize_keys\n\n                      Gitlab::ImportExport::AfterExportStrategies::WebUploadStrategy.new(params)\n                    end\n\n  if export_strategy&.invalid?\n    render_validation_error!(export_strategy)\n  else\n    user_project.add_export_job(current_user: current_user,\n                                after_export_strategy: export_strategy,\n                                params: project_export_params)\n  end\n\n  accepted!\nend\n```\n\nThe declared params can be `id`, `description`, `upload.url`, and `upload.http_method`. When `url` is present, the `WebUploadStrategy` will be used and the `url` and `http_method` values are passed to its initializer. When URL isn't present, the `project_export_params` is passed as `params` to the `Project#add_export_job` method. Following this code path will lead to a factory pattern (`lib/gitlab/import_export/after_export_strategy_builder.rb`) that defaults to the `AfterExportStrategies::DownloadNotificationStrategy` class. This class inherits its initializer from `BaseAfterExportStrategy`, meta-programming any method on an instance when it's passed to the initializer. Since the code passes `project_export_params` (all declared API parameters) when `url` **isn't** present, it will meta-program a `description`, `id`, and `upload` method on the `DownloadNotificationStrategy` class instance. Although those methods aren't called, it demonstrates that arbitrary methods can be defined on the class.",
            "automated_response": false,
            "created_at": "2020-05-14T19:56:22.370Z",
            "updated_at": "2020-05-14T19:56:22.370Z",
            "actor": {
                "username": "jobert",
                "cleared": true,
                "verified": true,
                "url": "/jobert",
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
                },
                "hackerone_triager": false,
                "hackerone_employee": true
            },
            "genius_execution_id": null,
            "team_handle": "gitlab"
        },
        {
            "id": 8048328,
            "is_internal": false,
            "editable": false,
            "type": "Activities::ReportSeverityUpdated",
            "message": "",
            "automated_response": false,
            "created_at": "2020-05-19T13:56:14.242Z",
            "updated_at": "2020-05-19T13:56:14.242Z",
            "additional_data": {
                "old_severity": null,
                "new_severity": "Medium",
                "old_severity_id": null,
                "new_severity_id": 726235
            },
            "actor": {
                "username": "gitlab_cmaxim",
                "cleared": false,
                "verified": false,
                "url": "/gitlab_cmaxim",
                "profile_picture_urls": {
                    "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/vmc7q2peqzpyt965jezuwkm4ravx/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937?response-content-disposition=inline%3B%20filename%3D%22cyber.png%22%3B%20filename%2A%3DUTF-8%27%27cyber.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQS6BUFUEE%2F20230829%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230829T070606Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjENf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDD9FHXU0ld2gtz64ZpnjlAw950FEQMqICGzFbRk4pC0AIhAMguqPvT6svEZTrq0b2WG76XHZFVJtNfIkDZQTZEBAWsKrsFCKD%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQAxoMMDEzNjE5Mjc0ODQ5IgygpHklaEgyfIVznI8qjwWOIdWktDm9Jabt75qlpVIMtXS%2FssDvdH3liIUrqSO%2Fn2cugELxTHsITAFkdxtpuIqUfC022kq1x7KnVsJ8dbHLeYcjqR%2BmyMsSM7Xr6UnozwhB4Y9cX%2F6UxIQ4Shov2Zz%2B4D9ygjyO8TAHyL4iD%2B6CaUtaTRDQPU4E5CflxhSrTzcxVSW%2BqeTqxyYZggcMEnSIhCb9IgOZ920mfAKlQNAc9hEp1VBpmPzgJ45%2F2pnRD4bAeZccOTQ2N7ai9tDdrydJZNrpSPB7gPdG8BDlQdEVpOmjIqxieGAy0zoKfSOl%2F5VHAxD0l8CodVdcp4kMEcdDDDNKGFD%2BYvWC25TJ5mw59Uk5USrQymohsM1fenBd610Hv6tbF2BGQAVrViDT2nJXnDxNQyRmqsIbJeitdGdnlpUpx45ObdZIcNmzHof%2FPv%2FVqoTgI06D0Wk6Z63VBvlhxWqLe%2BSaLcx2GAU%2Fy14hWDJEf7ZqhZ%2BM9OJtRIxfWXKISDxoTmTfZp%2F5B%2FiqubY1RL%2FDk%2BkMTxMcbSGw43o6kyeDbQbyyaDtV%2BYAWvx%2BSe9%2FhRFQPmqTdKCb%2BT23vEPLhAJ2vYsQ%2BTTeLcxLwsZ3TUOVQTBnE3%2FUfsxEMeVHPai2qUl0CGsun0HgjD95lQIzmeHal%2B%2BEP6LBM8JhmIfrmEmxecDlEpJEWMvTnef%2FUlhfSrGHNndRTanOi%2BSbxAkMtWE84y5d6km2hMzs9vO8ITHcwoDqJD9MHDjIWYVJG9MlQbnFckuSFWS1rIVtaRMcayfrXSfW9hMolo%2BRqzfol8wiNwiDk%2FCKe151LpjhbW4NYcVDBPgw8tG9ATi5pkPIxbtfE3grt%2BpRK%2Faq2%2F5BArkGIJcrN5tzOoFCLeiuMLOltqcGOrABo0TqeJmB%2BrDGBqaoTHwPAvK4%2FwgcpFFUm8NwdvRQDqlRqJax0yb%2BBe6w2ez9ShfsMMqJTOyg4Y%2FE%2BuAcIW10gTr%2BvpIXBkF%2F8x6GDpOA2qbdCvafgrSufD%2B5I4%2BvTz5e4TgiIX3QWw7OH4QNLX1OUdaUk3t0Pz5pXzlKIOWV579ZeH8AP1NSW2e%2Fj%2B8nGME4HiDOlB%2BZW%2FO8raM%2BngBp42hfPK0q4CctRMJh8z2fdSQ%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=a8c2aafead9b6c8153314367b947fb312fc683a44f0021fb4803a8201cf47d52"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "gitlab"
        },
        {
            "id": 8048692,
            "is_internal": false,
            "editable": false,
            "type": "Activities::BugTriaged",
            "message": "Hello @jobert,\n\nThanks for reporting this. We are reaching out to our development and product teams to obtain further input regarding this issue. Thank you for your patience, and we will let you know as soon as there are updates.\n\nBest regards,\nCostel\nSecurity Team | GitLab Inc.",
            "automated_response": false,
            "created_at": "2020-05-19T14:24:47.121Z",
            "updated_at": "2020-05-19T14:24:47.121Z",
            "actor": {
                "username": "gitlab_cmaxim",
                "cleared": false,
                "verified": false,
                "url": "/gitlab_cmaxim",
                "profile_picture_urls": {
                    "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/vmc7q2peqzpyt965jezuwkm4ravx/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937?response-content-disposition=inline%3B%20filename%3D%22cyber.png%22%3B%20filename%2A%3DUTF-8%27%27cyber.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQS6BUFUEE%2F20230829%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230829T070606Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjENf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDD9FHXU0ld2gtz64ZpnjlAw950FEQMqICGzFbRk4pC0AIhAMguqPvT6svEZTrq0b2WG76XHZFVJtNfIkDZQTZEBAWsKrsFCKD%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQAxoMMDEzNjE5Mjc0ODQ5IgygpHklaEgyfIVznI8qjwWOIdWktDm9Jabt75qlpVIMtXS%2FssDvdH3liIUrqSO%2Fn2cugELxTHsITAFkdxtpuIqUfC022kq1x7KnVsJ8dbHLeYcjqR%2BmyMsSM7Xr6UnozwhB4Y9cX%2F6UxIQ4Shov2Zz%2B4D9ygjyO8TAHyL4iD%2B6CaUtaTRDQPU4E5CflxhSrTzcxVSW%2BqeTqxyYZggcMEnSIhCb9IgOZ920mfAKlQNAc9hEp1VBpmPzgJ45%2F2pnRD4bAeZccOTQ2N7ai9tDdrydJZNrpSPB7gPdG8BDlQdEVpOmjIqxieGAy0zoKfSOl%2F5VHAxD0l8CodVdcp4kMEcdDDDNKGFD%2BYvWC25TJ5mw59Uk5USrQymohsM1fenBd610Hv6tbF2BGQAVrViDT2nJXnDxNQyRmqsIbJeitdGdnlpUpx45ObdZIcNmzHof%2FPv%2FVqoTgI06D0Wk6Z63VBvlhxWqLe%2BSaLcx2GAU%2Fy14hWDJEf7ZqhZ%2BM9OJtRIxfWXKISDxoTmTfZp%2F5B%2FiqubY1RL%2FDk%2BkMTxMcbSGw43o6kyeDbQbyyaDtV%2BYAWvx%2BSe9%2FhRFQPmqTdKCb%2BT23vEPLhAJ2vYsQ%2BTTeLcxLwsZ3TUOVQTBnE3%2FUfsxEMeVHPai2qUl0CGsun0HgjD95lQIzmeHal%2B%2BEP6LBM8JhmIfrmEmxecDlEpJEWMvTnef%2FUlhfSrGHNndRTanOi%2BSbxAkMtWE84y5d6km2hMzs9vO8ITHcwoDqJD9MHDjIWYVJG9MlQbnFckuSFWS1rIVtaRMcayfrXSfW9hMolo%2BRqzfol8wiNwiDk%2FCKe151LpjhbW4NYcVDBPgw8tG9ATi5pkPIxbtfE3grt%2BpRK%2Faq2%2F5BArkGIJcrN5tzOoFCLeiuMLOltqcGOrABo0TqeJmB%2BrDGBqaoTHwPAvK4%2FwgcpFFUm8NwdvRQDqlRqJax0yb%2BBe6w2ez9ShfsMMqJTOyg4Y%2FE%2BuAcIW10gTr%2BvpIXBkF%2F8x6GDpOA2qbdCvafgrSufD%2B5I4%2BvTz5e4TgiIX3QWw7OH4QNLX1OUdaUk3t0Pz5pXzlKIOWV579ZeH8AP1NSW2e%2Fj%2B8nGME4HiDOlB%2BZW%2FO8raM%2BngBp42hfPK0q4CctRMJh8z2fdSQ%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=a8c2aafead9b6c8153314367b947fb312fc683a44f0021fb4803a8201cf47d52"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "gitlab"
        },
        {
            "id": 8069463,
            "is_internal": false,
            "editable": false,
            "type": "Activities::Comment",
            "message": "Hello @jobert, \n\nIn order to better judge the impact of this type of vulnerability: do you have any public references to exploitable vulnerabilities of this type?\n\nThanks,\nCostel",
            "automated_response": false,
            "created_at": "2020-05-21T14:30:33.365Z",
            "updated_at": "2020-05-21T14:30:33.365Z",
            "actor": {
                "username": "gitlab_cmaxim",
                "cleared": false,
                "verified": false,
                "url": "/gitlab_cmaxim",
                "profile_picture_urls": {
                    "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/vmc7q2peqzpyt965jezuwkm4ravx/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937?response-content-disposition=inline%3B%20filename%3D%22cyber.png%22%3B%20filename%2A%3DUTF-8%27%27cyber.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQS6BUFUEE%2F20230829%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230829T070606Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjENf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDD9FHXU0ld2gtz64ZpnjlAw950FEQMqICGzFbRk4pC0AIhAMguqPvT6svEZTrq0b2WG76XHZFVJtNfIkDZQTZEBAWsKrsFCKD%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQAxoMMDEzNjE5Mjc0ODQ5IgygpHklaEgyfIVznI8qjwWOIdWktDm9Jabt75qlpVIMtXS%2FssDvdH3liIUrqSO%2Fn2cugELxTHsITAFkdxtpuIqUfC022kq1x7KnVsJ8dbHLeYcjqR%2BmyMsSM7Xr6UnozwhB4Y9cX%2F6UxIQ4Shov2Zz%2B4D9ygjyO8TAHyL4iD%2B6CaUtaTRDQPU4E5CflxhSrTzcxVSW%2BqeTqxyYZggcMEnSIhCb9IgOZ920mfAKlQNAc9hEp1VBpmPzgJ45%2F2pnRD4bAeZccOTQ2N7ai9tDdrydJZNrpSPB7gPdG8BDlQdEVpOmjIqxieGAy0zoKfSOl%2F5VHAxD0l8CodVdcp4kMEcdDDDNKGFD%2BYvWC25TJ5mw59Uk5USrQymohsM1fenBd610Hv6tbF2BGQAVrViDT2nJXnDxNQyRmqsIbJeitdGdnlpUpx45ObdZIcNmzHof%2FPv%2FVqoTgI06D0Wk6Z63VBvlhxWqLe%2BSaLcx2GAU%2Fy14hWDJEf7ZqhZ%2BM9OJtRIxfWXKISDxoTmTfZp%2F5B%2FiqubY1RL%2FDk%2BkMTxMcbSGw43o6kyeDbQbyyaDtV%2BYAWvx%2BSe9%2FhRFQPmqTdKCb%2BT23vEPLhAJ2vYsQ%2BTTeLcxLwsZ3TUOVQTBnE3%2FUfsxEMeVHPai2qUl0CGsun0HgjD95lQIzmeHal%2B%2BEP6LBM8JhmIfrmEmxecDlEpJEWMvTnef%2FUlhfSrGHNndRTanOi%2BSbxAkMtWE84y5d6km2hMzs9vO8ITHcwoDqJD9MHDjIWYVJG9MlQbnFckuSFWS1rIVtaRMcayfrXSfW9hMolo%2BRqzfol8wiNwiDk%2FCKe151LpjhbW4NYcVDBPgw8tG9ATi5pkPIxbtfE3grt%2BpRK%2Faq2%2F5BArkGIJcrN5tzOoFCLeiuMLOltqcGOrABo0TqeJmB%2BrDGBqaoTHwPAvK4%2FwgcpFFUm8NwdvRQDqlRqJax0yb%2BBe6w2ez9ShfsMMqJTOyg4Y%2FE%2BuAcIW10gTr%2BvpIXBkF%2F8x6GDpOA2qbdCvafgrSufD%2B5I4%2BvTz5e4TgiIX3QWw7OH4QNLX1OUdaUk3t0Pz5pXzlKIOWV579ZeH8AP1NSW2e%2Fj%2B8nGME4HiDOlB%2BZW%2FO8raM%2BngBp42hfPK0q4CctRMJh8z2fdSQ%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=a8c2aafead9b6c8153314367b947fb312fc683a44f0021fb4803a8201cf47d52"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "gitlab"
        },
        {
            "id": 8070192,
            "is_internal": false,
            "editable": false,
            "type": "Activities::Comment",
            "message": "Hi @gitlab_cmaxim - I don't, but I can demonstrate it with some code. Let's consider an endpoint that writes some content to a file:\n\n```ruby\nclass TestController < ApplicationController\n  def create\n    render plain: WriteFile.new(params).execute\n  end\nend\n```\n\nAnd here's the implementation of the `WriteFile` class, implemented similar to the way the GitLab code was written:\n\n```ruby\nclass WriteFile\n  extend Forwardable\n\n  def initialize(attributes)\n    @attributes = OpenStruct.new(attributes)\n\n    self.class.instance_eval do\n      def_delegators :@attributes, *attributes.keys\n    end\n  end\n\n  def execute\n    IO.write(path, text)\n  end\n\n  def path\n    \"/tmp/test\"\n  end\nend\n```\n\nWhen the controller action is called with parameters `{\"text\": \"Hello\"}`, the contents `Hello` will be written to `/tmp/test`. As you can see, the file location is hard coded in the class. However, because `def_delegators` is executed on runtime, it can overwrite existing methods. When the controller action is called with `{\"text\":\"Hello\",\"path\":\"/etc/somewhere-else\"}`, the `path` method in the class instance will return `/etc/somewhere-else` instead of `/tmp/test`.\n\nBetter would be for the class to define which attributes it can take, like so:\n\n```ruby\nclass WriteFile\n  def initialize(text:)\n    @text = text\n  end\n\n  def execute\n    IO.write(path, @text)\n  end\n\n  def path\n    \"/tmp/test\"\n  end\nend\n```\n\nOr, if you still want to use delegation:\n\n```ruby\nclass WriteFile\n  extend Forwardable\n\n  def initialize(attributes)\n    @attributes = OpenStruct.new(attributes.slice(:text))\n\n    self.class.instance_eval do\n      def_delegators :@attributes, *attributes.keys\n    end\n  end\n\n  def execute\n    IO.write(path, text)\n  end\n\n  def path\n    \"/tmp/test\"\n  end\nend\n```\n\nDoes that make sense?",
            "automated_response": false,
            "created_at": "2020-05-21T15:27:33.281Z",
            "updated_at": "2020-05-21T15:27:33.281Z",
            "actor": {
                "username": "jobert",
                "cleared": true,
                "verified": true,
                "url": "/jobert",
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
                },
                "hackerone_triager": false,
                "hackerone_employee": true
            },
            "genius_execution_id": null,
            "team_handle": "gitlab"
        },
        {
            "id": 12083315,
            "is_internal": false,
            "editable": false,
            "type": "Activities::BugInformative",
            "message": "Hello @jobert, \n\nThank you for your report. After a long wait we have decided to close this report as `Informative` for now. \nThank you for the report and we hope to hear back from you on other issues.\n\nBest regards,\nCostel",
            "automated_response": false,
            "created_at": "2021-06-14T05:51:39.990Z",
            "updated_at": "2021-06-14T05:51:39.990Z",
            "actor": {
                "username": "gitlab_cmaxim",
                "cleared": false,
                "verified": false,
                "url": "/gitlab_cmaxim",
                "profile_picture_urls": {
                    "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/vmc7q2peqzpyt965jezuwkm4ravx/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937?response-content-disposition=inline%3B%20filename%3D%22cyber.png%22%3B%20filename%2A%3DUTF-8%27%27cyber.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQS6BUFUEE%2F20230829%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230829T070606Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjENf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDD9FHXU0ld2gtz64ZpnjlAw950FEQMqICGzFbRk4pC0AIhAMguqPvT6svEZTrq0b2WG76XHZFVJtNfIkDZQTZEBAWsKrsFCKD%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQAxoMMDEzNjE5Mjc0ODQ5IgygpHklaEgyfIVznI8qjwWOIdWktDm9Jabt75qlpVIMtXS%2FssDvdH3liIUrqSO%2Fn2cugELxTHsITAFkdxtpuIqUfC022kq1x7KnVsJ8dbHLeYcjqR%2BmyMsSM7Xr6UnozwhB4Y9cX%2F6UxIQ4Shov2Zz%2B4D9ygjyO8TAHyL4iD%2B6CaUtaTRDQPU4E5CflxhSrTzcxVSW%2BqeTqxyYZggcMEnSIhCb9IgOZ920mfAKlQNAc9hEp1VBpmPzgJ45%2F2pnRD4bAeZccOTQ2N7ai9tDdrydJZNrpSPB7gPdG8BDlQdEVpOmjIqxieGAy0zoKfSOl%2F5VHAxD0l8CodVdcp4kMEcdDDDNKGFD%2BYvWC25TJ5mw59Uk5USrQymohsM1fenBd610Hv6tbF2BGQAVrViDT2nJXnDxNQyRmqsIbJeitdGdnlpUpx45ObdZIcNmzHof%2FPv%2FVqoTgI06D0Wk6Z63VBvlhxWqLe%2BSaLcx2GAU%2Fy14hWDJEf7ZqhZ%2BM9OJtRIxfWXKISDxoTmTfZp%2F5B%2FiqubY1RL%2FDk%2BkMTxMcbSGw43o6kyeDbQbyyaDtV%2BYAWvx%2BSe9%2FhRFQPmqTdKCb%2BT23vEPLhAJ2vYsQ%2BTTeLcxLwsZ3TUOVQTBnE3%2FUfsxEMeVHPai2qUl0CGsun0HgjD95lQIzmeHal%2B%2BEP6LBM8JhmIfrmEmxecDlEpJEWMvTnef%2FUlhfSrGHNndRTanOi%2BSbxAkMtWE84y5d6km2hMzs9vO8ITHcwoDqJD9MHDjIWYVJG9MlQbnFckuSFWS1rIVtaRMcayfrXSfW9hMolo%2BRqzfol8wiNwiDk%2FCKe151LpjhbW4NYcVDBPgw8tG9ATi5pkPIxbtfE3grt%2BpRK%2Faq2%2F5BArkGIJcrN5tzOoFCLeiuMLOltqcGOrABo0TqeJmB%2BrDGBqaoTHwPAvK4%2FwgcpFFUm8NwdvRQDqlRqJax0yb%2BBe6w2ez9ShfsMMqJTOyg4Y%2FE%2BuAcIW10gTr%2BvpIXBkF%2F8x6GDpOA2qbdCvafgrSufD%2B5I4%2BvTz5e4TgiIX3QWw7OH4QNLX1OUdaUk3t0Pz5pXzlKIOWV579ZeH8AP1NSW2e%2Fj%2B8nGME4HiDOlB%2BZW%2FO8raM%2BngBp42hfPK0q4CctRMJh8z2fdSQ%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=a8c2aafead9b6c8153314367b947fb312fc683a44f0021fb4803a8201cf47d52"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "gitlab"
        },
        {
            "id": 14301850,
            "is_internal": false,
            "editable": false,
            "type": "Activities::Comment",
            "message": "Just as a note, last month we updated our documentation using your example. Thanks again jobert! https://docs.gitlab.com/ee/development/secure_coding_guidelines.html#insecure-metaprogramming-example",
            "automated_response": false,
            "created_at": "2021-11-15T02:59:55.927Z",
            "updated_at": "2021-11-15T02:59:55.927Z",
            "actor": {
                "username": "nmalcolm_gitlab",
                "cleared": false,
                "verified": false,
                "url": "/nmalcolm_gitlab",
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/variants/qugqy57v49704ukw2816cro62zrc/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "gitlab"
        },
        {
            "id": 14301851,
            "is_internal": false,
            "editable": false,
            "type": "Activities::AgreedOnGoingPublic",
            "message": "",
            "automated_response": false,
            "created_at": "2021-11-15T03:00:41.900Z",
            "updated_at": "2021-11-15T03:00:41.900Z",
            "first_to_agree": true,
            "actor": {
                "username": "nmalcolm_gitlab",
                "cleared": false,
                "verified": false,
                "url": "/nmalcolm_gitlab",
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/variants/qugqy57v49704ukw2816cro62zrc/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "gitlab"
        },
        {
            "id": 14311609,
            "is_internal": false,
            "editable": false,
            "type": "Activities::AgreedOnGoingPublic",
            "message": "",
            "automated_response": false,
            "created_at": "2021-11-15T16:24:12.524Z",
            "updated_at": "2021-11-15T16:24:12.524Z",
            "actor": {
                "username": "jobert",
                "cleared": true,
                "verified": true,
                "url": "/jobert",
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
                },
                "hackerone_triager": false,
                "hackerone_employee": true
            },
            "genius_execution_id": null,
            "team_handle": "gitlab"
        },
        {
            "id": 14311610,
            "is_internal": false,
            "editable": false,
            "type": "Activities::ReportBecamePublic",
            "message": "",
            "automated_response": false,
            "created_at": "2021-11-15T16:24:12.674Z",
            "updated_at": "2021-11-15T16:24:12.674Z",
            "actor": {
                "username": "jobert",
                "cleared": true,
                "verified": true,
                "url": "/jobert",
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
                },
                "hackerone_triager": false,
                "hackerone_employee": true
            },
            "genius_execution_id": null,
            "team_handle": "gitlab"
        }
    ],
    "activity_page_count": 1,
    "activity_page_number": 1,
    "summaries": [
        {
            "category": "team",
            "can_view?": true,
            "can_create?": false
        },
        {
            "category": "researcher",
            "can_view?": true,
            "can_create?": false
        }
    ]
}