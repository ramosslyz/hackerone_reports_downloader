{
    "id": 962705,
    "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC85NjI3MDU=",
    "url": "https://hackerone.com/reports/962705",
    "title": "The “payload” Field of Transactions in a Block Reveals the Private Data to All Peers ",
    "state": "Closed",
    "substate": "informative",
    "readable_substate": "Informative",
    "created_at": "2020-08-19T18:48:25.272Z",
    "submitted_at": "2020-08-19T18:48:25.281Z",
    "is_member_of_team?": false,
    "is_organization_group_member?": false,
    "reporter": {
        "disabled": false,
        "username": "swang1994",
        "url": "/swang1994",
        "profile_picture_urls": {
            "small": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "is_me?": false,
        "cleared": false,
        "verified": false,
        "hackerone_triager": false,
        "hacker_mediation": false
    },
    "team": {
        "id": 22522,
        "url": "https://hackerone.com/hyperledger",
        "handle": "hyperledger",
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/variants/000/022/522/14a496059824de0648d5d65966e9ab4dd8c8e715_original./d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
            "medium": "https://profile-photos.hackerone-user-content.com/variants/000/022/522/14a496059824de0648d5d65966e9ab4dd8c8e715_original./5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "permissions": [],
        "submission_state": "open",
        "default_currency": "usd",
        "awards_miles": false,
        "offers_bounties": true,
        "state": "public_mode",
        "only_cleared_hackers": false,
        "pentest_feature_enabled?": false,
        "profile": {
            "name": "Hyperledger",
            "twitter_handle": "hyperledger",
            "website": "https://www.hyperledger.org/",
            "about": "An industry-wide open source initiative to advance blockchain technology, governed by The Linux Foundation."
        }
    },
    "has_bounty?": false,
    "in_validation?": false,
    "can_view_team": true,
    "can_view_report": true,
    "is_external_bug": false,
    "is_published": false,
    "is_participant": false,
    "has_collaborators": true,
    "submitted_by_team_member": false,
    "stage": 4,
    "public": true,
    "visibility": "full",
    "cve_ids": [],
    "singular_disclosure_disabled": true,
    "disclosed_at": "2021-03-30T20:30:07.046Z",
    "bug_reporter_agreed_on_going_public_at": null,
    "team_member_agreed_on_going_public_at": "2021-03-30T18:20:53.428Z",
    "comments_closed?": false,
    "facebook_team?": false,
    "team_private?": false,
    "vulnerability_information": "To whom it may concern, \n \nWe are a research group conducting research on Hyperledger Fabric 2.0. We find a design flaw about the “payload” field of transactions, which can reveal the Private Data to all peers in one channel.  \n \nWhen a client invokes a function to read the private data, the <key, version> is stored in the read set and the value is returned in the “payload” field of transactions. In the private data related transaction workflow, to avoid revealing private data, only the hash of the read-write set is stored in transactions. However, we find that the “payload” in a transaction holds the original value of the private data. Since all transactions will be bundled into blocks and distributed to all peers in one channel, all peers including private data collection non-member peers can see the private data by fetching the specific transaction. This seriously violates the design principles of the private data collection which is shared by only a subset of peers in one channel. \n \nWe test the private data example “marbles02_private” in official documents [1]. In this example, only peer0.org1 is the member of PDC “collectionMarblePrivateDetails”. Peer0.org1 invokes the function readMarblePrivateDetails(). The generated transaction has a “payload” containing the private data {\"docType\":\"marblePrivateDetails\",\"name\":\"marble1\",\"price\":99} and is stored into the blockchain. Peer0.org2 is not the owner of this private data, but can find the actual private data in its local blockchain. Please note that we use the ‘invoke’ CLI, not the ‘query’ CLI. \n \nWe recommend that original values of private data should not appear in transactions. More restrictions on “payload” are needed. \n \nReferences \n \n[1] Hyperledger Fabric Official Docs, Tutorials>> Using Private Data in Fabric, https://hyperledger-fabric.readthedocs.io/en/release-2.0/private_data_tutorial.html?highlight=using%20private%20data \n \nPlease let me know if you have any questions or concerns. If you think it is necessary, we can give you a briefing on the issues. Look forward to your reply! \n \nBest Regards, \n \nShan Wang, Southeast University, University of Massachusetts Lowell , email: shanwang1994@gmail.com\nYue Zhang, Jinan University, University of Massachusetts Lowell \nXinwen Fu, University of Massachusetts Lowell\n\n## Impact\n\nThis design flaw seriously violates the design principles of the private data collection which is shared by only a subset of peers in one channel.",
    "original_report_id": null,
    "original_report_url": null,
    "attachments": [],
    "allow_singular_disclosure_at": null,
    "vote_count": 3,
    "voters": [
        "khizer47",
        "ekgaribadmi",
        "kc147"
    ],
    "structured_scope": {
        "databaseId": 2994,
        "asset_type": "SOURCE_CODE",
        "asset_identifier": "https://github.com/hyperledger/fabric",
        "max_severity": "critical"
    },
    "abilities": {
        "assignable_team_members": [],
        "assignable_team_member_groups": []
    },
    "activities": [
        {
            "id": 8987659,
            "is_internal": false,
            "editable": false,
            "type": "Activities::Comment",
            "message": "We have actually already accounted for this.  Any data / parameters needed by chaincode which you do not want to reveal in the transaction can be sent using the transient data field.  This way only the members of the collection who need to endorse the chaincode will ever see this data.   See https://hyperledger-fabric.readthedocs.io/en/release-2.2/private-data-arch.html#how-to-pass-private-data-in-a-chaincode-proposal for more details.",
            "automated_response": false,
            "created_at": "2020-08-20T11:15:56.835Z",
            "updated_at": "2020-08-20T11:15:56.835Z",
            "actor": {
                "username": "mastersingh24",
                "cleared": false,
                "verified": false,
                "url": "/mastersingh24",
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "hyperledger"
        },
        {
            "id": 8994995,
            "is_internal": false,
            "editable": false,
            "type": "Activities::Comment",
            "message": "@mastersingh24 We know the \"transient\" data field and performed experiments. However, we are not reporting issues on the transient data field in the transaction proposal, but the \"payload\" field in the transaction response that the endorsers return to the client. When a client sends a proposal to read the private data, the endorsers need return the results to the client in the transaction response. Note: the results of the read operation contain two parts: (i) the hash of the <key, version> in the read-write set in transaction response; (ii) the value in the “payload” in the transaction response. We find there is a security and privacy issue here: the value in the “payload” contains the actual private data. Therefore, when the transaction is put into blocks and distributed to every peer, every peer including private data collection non-members can see it.\n\nThe attached file includes the chaincode project file and guideline file to demonstrate the design flaw. When a client uses the transient field to send proposal, the \"payload\" field in transaction response still contains the actual private data value.",
            "automated_response": false,
            "created_at": "2020-08-20T22:55:36.951Z",
            "updated_at": "2020-08-20T22:58:36.556Z",
            "actor": {
                "username": "swang1994",
                "cleared": false,
                "verified": false,
                "url": "/swang1994",
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "attachments": [
                {
                    "id": 957497,
                    "filename": "DesignFlawDemo_'payload'.rar",
                    "type": "application/vnd.rar",
                    "url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/KxXourUzTArgtUpCkVs8YczA?response-content-disposition=attachment%3B%20filename%3D%22DesignFlawDemo_%2527payload%2527.rar%22%3B%20filename%2A%3DUTF-8%27%27DesignFlawDemo_%2527payload%2527.rar&response-content-type=application%2Fvnd.rar&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQS6BUFUEE%2F20230829%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230829T071236Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjENf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDD9FHXU0ld2gtz64ZpnjlAw950FEQMqICGzFbRk4pC0AIhAMguqPvT6svEZTrq0b2WG76XHZFVJtNfIkDZQTZEBAWsKrsFCKD%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQAxoMMDEzNjE5Mjc0ODQ5IgygpHklaEgyfIVznI8qjwWOIdWktDm9Jabt75qlpVIMtXS%2FssDvdH3liIUrqSO%2Fn2cugELxTHsITAFkdxtpuIqUfC022kq1x7KnVsJ8dbHLeYcjqR%2BmyMsSM7Xr6UnozwhB4Y9cX%2F6UxIQ4Shov2Zz%2B4D9ygjyO8TAHyL4iD%2B6CaUtaTRDQPU4E5CflxhSrTzcxVSW%2BqeTqxyYZggcMEnSIhCb9IgOZ920mfAKlQNAc9hEp1VBpmPzgJ45%2F2pnRD4bAeZccOTQ2N7ai9tDdrydJZNrpSPB7gPdG8BDlQdEVpOmjIqxieGAy0zoKfSOl%2F5VHAxD0l8CodVdcp4kMEcdDDDNKGFD%2BYvWC25TJ5mw59Uk5USrQymohsM1fenBd610Hv6tbF2BGQAVrViDT2nJXnDxNQyRmqsIbJeitdGdnlpUpx45ObdZIcNmzHof%2FPv%2FVqoTgI06D0Wk6Z63VBvlhxWqLe%2BSaLcx2GAU%2Fy14hWDJEf7ZqhZ%2BM9OJtRIxfWXKISDxoTmTfZp%2F5B%2FiqubY1RL%2FDk%2BkMTxMcbSGw43o6kyeDbQbyyaDtV%2BYAWvx%2BSe9%2FhRFQPmqTdKCb%2BT23vEPLhAJ2vYsQ%2BTTeLcxLwsZ3TUOVQTBnE3%2FUfsxEMeVHPai2qUl0CGsun0HgjD95lQIzmeHal%2B%2BEP6LBM8JhmIfrmEmxecDlEpJEWMvTnef%2FUlhfSrGHNndRTanOi%2BSbxAkMtWE84y5d6km2hMzs9vO8ITHcwoDqJD9MHDjIWYVJG9MlQbnFckuSFWS1rIVtaRMcayfrXSfW9hMolo%2BRqzfol8wiNwiDk%2FCKe151LpjhbW4NYcVDBPgw8tG9ATi5pkPIxbtfE3grt%2BpRK%2Faq2%2F5BArkGIJcrN5tzOoFCLeiuMLOltqcGOrABo0TqeJmB%2BrDGBqaoTHwPAvK4%2FwgcpFFUm8NwdvRQDqlRqJax0yb%2BBe6w2ez9ShfsMMqJTOyg4Y%2FE%2BuAcIW10gTr%2BvpIXBkF%2F8x6GDpOA2qbdCvafgrSufD%2B5I4%2BvTz5e4TgiIX3QWw7OH4QNLX1OUdaUk3t0Pz5pXzlKIOWV579ZeH8AP1NSW2e%2Fj%2B8nGME4HiDOlB%2BZW%2FO8raM%2BngBp42hfPK0q4CctRMJh8z2fdSQ%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=6cd448b84d33b930b07496661d6d5b0bcc19959b4c85d2ea3c7f7f0c7f5ad8e0"
                }
            ],
            "genius_execution_id": null,
            "team_handle": "hyperledger"
        },
        {
            "id": 9147000,
            "is_internal": false,
            "editable": false,
            "type": "Activities::Comment",
            "message": "Hi, @mastersingh24\n\nDid you receive our reply? Can you confirm what we reported is actually a vulnerability? Thanks.\n\nShan",
            "automated_response": false,
            "created_at": "2020-09-06T15:12:50.136Z",
            "updated_at": "2020-09-06T15:12:50.136Z",
            "actor": {
                "username": "swang1994",
                "cleared": false,
                "verified": false,
                "url": "/swang1994",
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "hyperledger"
        },
        {
            "id": 9152585,
            "is_internal": false,
            "editable": false,
            "type": "Activities::Comment",
            "message": "Why would you submit a query transaction for ordering?\nThere is no need to do that.",
            "automated_response": false,
            "created_at": "2020-09-07T12:49:27.465Z",
            "updated_at": "2020-09-07T12:49:27.465Z",
            "actor": {
                "username": "mastersingh24",
                "cleared": false,
                "verified": false,
                "url": "/mastersingh24",
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "hyperledger"
        },
        {
            "id": 9152604,
            "is_internal": false,
            "editable": false,
            "type": "Activities::Comment",
            "message": "Perhaps it’s because we don’t really have a query operation ... but just because you call invoke to perform a query,\nIt does not mean that you’d submit the transaction for ordering and commit to the ledger.",
            "automated_response": false,
            "created_at": "2020-09-07T12:51:14.752Z",
            "updated_at": "2020-09-07T12:51:14.752Z",
            "actor": {
                "username": "mastersingh24",
                "cleared": false,
                "verified": false,
                "url": "/mastersingh24",
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "hyperledger"
        },
        {
            "id": 9159988,
            "is_internal": false,
            "editable": false,
            "type": "Activities::Comment",
            "message": "Hi @mastersingh24 ,\n \nWe believe there is a legitimate reason why people would submit a query transaction for ordering. Sometimes, for sensitive data (e.g. intellectual property), we want to put who performs the query into the ledger. I guess there are many other examples. \n\nThis is also what the hyperledger documents suggest. According to the sub-section \"Query\" in the section \"Glossary\" in the official documents (https://hyperledger-fabric.readthedocs.io/en/release-2.0/glossary.html), “Although not typical, the client application can choose to submit the read-only transaction for ordering, validation, and commit, for example if the client wants auditable proof on the ledger chain that it had knowledge of specific ledger state at a certain point in time.”\n \nAccording to our experiments, when the CLI \"invoke\" is used or the SDK API submitTransaction(name,[args]) is used, the transaction will be automatically sent to the orderers and put into the ledger. So we do not know what you meant by \"but because you call invoke to perform a query, it does not mean that you'd submit the transaction for ordering and commit to the ledger.\" When “invoke” or “submitTransaction(name,[args])” is used, are there some APIs we can use to choose not to submit the read-only transaction for ordering?\n \nThanks.",
            "automated_response": false,
            "created_at": "2020-09-08T13:05:33.136Z",
            "updated_at": "2020-09-08T13:05:33.136Z",
            "actor": {
                "username": "swang1994",
                "cleared": false,
                "verified": false,
                "url": "/swang1994",
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "hyperledger"
        },
        {
            "id": 9639169,
            "is_internal": false,
            "editable": false,
            "type": "Activities::BugInformative",
            "message": "As designed",
            "automated_response": false,
            "created_at": "2020-10-26T17:44:31.993Z",
            "updated_at": "2020-10-26T17:44:31.993Z",
            "actor": {
                "username": "ryjones",
                "cleared": false,
                "verified": false,
                "url": "/ryjones",
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/variants/000/190/898/16fe922a06ceb4649331e21bb3e89674e236554b_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "hyperledger"
        },
        {
            "id": 11100418,
            "is_internal": false,
            "editable": false,
            "type": "Activities::Comment",
            "message": "Documentation has been clarified here:\nhttps://hyperledger-fabric.readthedocs.io/en/latest/private-data-arch.html#protecting-private-data-responses\n\"Chaincode can return any data to a client application in the proposal response payload field. For read-only chaincode functions that query private data and which will not get submitted as transactions to the ordering service, private data may be returned in the proposal response payload field to the requesting client. For chaincode functions that propose private data writes however, take care not to include private data in the proposal response payload field, since this field will get included in the transaction which all channel members can access.\"",
            "automated_response": false,
            "created_at": "2021-03-24T05:29:37.922Z",
            "updated_at": "2021-03-24T05:29:37.922Z",
            "actor": {
                "username": "denyeart",
                "cleared": false,
                "verified": false,
                "url": "/denyeart",
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "hyperledger"
        },
        {
            "id": 11105568,
            "is_internal": false,
            "editable": false,
            "type": "Activities::ReportCollaboratorInvited",
            "message": null,
            "automated_response": false,
            "created_at": "2021-03-24T14:23:36.110Z",
            "updated_at": "2021-03-24T14:23:36.110Z",
            "actor": {
                "username": "swang1994",
                "cleared": false,
                "verified": false,
                "url": "/swang1994",
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "hyperledger"
        },
        {
            "id": 11105974,
            "is_internal": false,
            "editable": false,
            "type": "Activities::ReportCollaboratorJoined",
            "message": "",
            "automated_response": false,
            "created_at": "2021-03-24T14:59:01.325Z",
            "updated_at": "2021-03-24T14:59:01.325Z",
            "actor": {
                "username": "xinwenfu",
                "cleared": false,
                "verified": false,
                "url": "/xinwenfu",
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "hyperledger"
        },
        {
            "id": 11187303,
            "is_internal": false,
            "editable": false,
            "type": "Activities::AgreedOnGoingPublic",
            "message": "",
            "automated_response": false,
            "created_at": "2021-03-30T18:20:53.446Z",
            "updated_at": "2021-03-30T18:20:53.446Z",
            "first_to_agree": true,
            "actor": {
                "username": "ryjones",
                "cleared": false,
                "verified": false,
                "url": "/ryjones",
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/variants/000/190/898/16fe922a06ceb4649331e21bb3e89674e236554b_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "hyperledger"
        },
        {
            "id": 11189933,
            "is_internal": false,
            "editable": false,
            "type": "Activities::ManuallyDisclosed",
            "message": "",
            "automated_response": false,
            "created_at": "2021-03-30T20:30:06.953Z",
            "updated_at": "2021-03-30T20:30:06.953Z",
            "actor": {
                "username": "denyeart",
                "cleared": false,
                "verified": false,
                "url": "/denyeart",
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "hyperledger"
        }
    ],
    "activity_page_count": 1,
    "activity_page_number": 1,
    "summaries": [
        {
            "category": "team",
            "can_view?": true,
            "can_create?": false
        },
        {
            "category": "researcher",
            "can_view?": true,
            "can_create?": false
        }
    ]
}