{
    "id": 274267,
    "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yNzQyNjc=",
    "url": "https://hackerone.com/reports/274267",
    "title": "Request Hijacking Vulnerability in RubyGems 2.6.13 and earlier",
    "state": "Closed",
    "substate": "informative",
    "severity_rating": "low",
    "readable_substate": "Informative",
    "created_at": "2017-10-04T04:06:15.449Z",
    "submitted_at": "2017-10-04T04:06:15.449Z",
    "is_member_of_team?": false,
    "is_organization_group_member?": false,
    "reporter": {
        "disabled": false,
        "username": "claudijd",
        "url": "/claudijd",
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/variants/000/003/131/3c373767fbd4f34648ab754b0f692fb718bfb8e5_original.jpeg/ede8cd84a64d5392a2bb88ecb598721116469c27c015c2caa77148f11e211d58"
        },
        "is_me?": false,
        "cleared": false,
        "verified": false,
        "hackerone_triager": false,
        "hacker_mediation": false
    },
    "team": {
        "id": 8212,
        "url": "https://hackerone.com/rubygems",
        "handle": "rubygems",
        "profile_picture_urls": {
            "small": "https://profile-photos.hackerone-user-content.com/variants/000/008/212/e65eca09896d23bc029c08d3147a79a48ec1ee2f_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
            "medium": "https://profile-photos.hackerone-user-content.com/variants/000/008/212/e65eca09896d23bc029c08d3147a79a48ec1ee2f_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "permissions": [],
        "submission_state": "open",
        "default_currency": "usd",
        "awards_miles": false,
        "offers_bounties": true,
        "state": "public_mode",
        "only_cleared_hackers": false,
        "pentest_feature_enabled?": false,
        "profile": {
            "name": "RubyGems",
            "twitter_handle": "rubygems_status",
            "website": "https://rubygems.org",
            "about": "RubyGems.org is the Ruby communityâ€™s gem hosting service."
        }
    },
    "has_bounty?": false,
    "in_validation?": false,
    "can_view_team": true,
    "can_view_report": true,
    "is_external_bug": false,
    "is_published": false,
    "is_participant": false,
    "has_collaborators": false,
    "submitted_by_team_member": true,
    "stage": 4,
    "public": true,
    "visibility": "full",
    "cve_ids": [
        "CVE-2017-0902"
    ],
    "singular_disclosure_disabled": true,
    "disclosed_at": "2018-12-08T20:06:30.799Z",
    "bug_reporter_agreed_on_going_public_at": "2018-03-16T03:15:38.782Z",
    "team_member_agreed_on_going_public_at": "2018-12-08T20:06:30.738Z",
    "comments_closed?": false,
    "facebook_team?": false,
    "team_private?": false,
    "vulnerability_information": "We received this report via security@ from david@bamsoftware.com, I'm filing here for tracking and visibility purposes...\n\n\"I was looking at commit 8d91516fb7037ecfb27622f605dc40245e0f8d32, which\nwas the fix for the DNS hijacking issue CVE-2017-0902. The function\nstill handles the DNS response in a potentially unsafe way. I did not\nfind any actual vulnerabilities in the current code; the code that uses\nthe result of api_endpoint (perhaps coincidentally) discards the\npotentially malicious components of the URI that api_endpoint returns.\nBut future code may be vulnerable. I'm sending this to the security list\nbecause my checks for vulnerability may be incomplete.\n\nThe problem is that api_endpoint allows the DNS SRV response to contain\nURI-like syntax (which was the cause of CVE-2017-0902). The fix was to\nparse the syntax as if it were a URI, extract the host component, and\nonly do a comparison using the host component, rather than the entire\nstring. However, the entire string is still pasted into the return\nvalue, assuming the comparison succeeds. It can contain URI syntax\ncharacters like '?' and '#' that change the interpretation of what\nfollows them.\n\nI'm attaching a patch that adds a new test and changes api_endpoint to\ndiscard everything but the host after parsing the DNS SRV response as a\nURI. It would probably be even better simply to disallow any syntax\nother than hostname literals.\n\nThe lines that I initially thought was vulnerable, but appear not to be,\nare in lib/rubygems/source.rb:\n   bundler_api_uri = api_uri + './api/v1/dependencies'\n   uri = api_uri + \"#{Gem::MARSHAL_SPEC_DIR}#{spec_file_name}\"\n   spec_path  = api_uri + \"#{file_name}.gz\"\nThe reason they are not vulnerable is that api_url is a URI object\nrather than a string, so the + operator is actually the merge method\nrather than string concatenation. The merge operator replaces any\nexisting path, query, and fragment components, it seems. (It would not\nhelp if the attacker-provided string changed the URI's host, pass, or\nport components, but I could not think of a realistic path to\nexploitation using only those components.) However if api_uri had been\ncoerced into a string, then the code would be vulnerable. An attacker\ncould cause the client to download some other path, which could possibly\nlead to a downgrade attack or replacing one gem with another.\n<0001-Have-api_endpoint-replace-only-host-not-port-user-pa.patch>\"",
    "weakness": {
        "id": 58,
        "name": "Command Injection - Generic"
    },
    "original_report_id": null,
    "original_report_url": null,
    "attachments": [
        {
            "id": 226270,
            "file_name": "0001-Have-api_endpoint-replace-only-host-not-port-user-pa.patch",
            "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/226/270/1eda5d0b371c77a0c61d045b4c49fda826243456/0001-Have-api_endpoint-replace-only-host-not-port-user-pa.patch?response-content-disposition=attachment%3B%20filename%3D%220001-Have-api_endpoint-replace-only-host-not-port-user-pa.patch%22%3B%20filename%2A%3DUTF-8%27%270001-Have-api_endpoint-replace-only-host-not-port-user-pa.patch&response-content-type=text%2Fx-diff&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQQTW5N2UI%2F20230829%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230829T073548Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjENf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDD1i3LYDyd6aHvd3HlI33epLYZW0pok98JBc8Mfa86BQIgRXbBVs6snAIIu0Lc8lDE%2BRwd4I9stxP1dm7ma%2BT%2B960quwUIn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDLX3MdTcD%2FtbKioD9CqPBZ5W%2BqVMdHpdZANkqKRkD%2BI6Lg2bgGhdIgo%2BGTlnVOoa0ecknz3eENoVabJBhzA%2Bj5HbJtGtbVv6oi2GFTK4QVu8tWdn9LnhbXjxpcA7dQkuykepnFHEgf1k%2BawyuqlsV9aGpNIXtNIZaCKvf2nF62VIMZL%2BjAlK89d1KMSBcMCHx8AglxcJ6aW%2FdjkbdzEp4HHfNu8xrYxjvPs7%2Fvdl5qr0ogWYnILzE02f93FfD9UpTixTWg8WjjC%2FEOayl0rLsxaO979N8s4wKqs%2FaF44tzIHzQGAhZ1GWNDCGrg1dQ3wKYj86dgoFJ7uncMoHigroIosfGufiyQm0PK8pQY0OZ0sS8ZoTtfY95Xmoxd%2BHshoGUER7i2jtIpNXWGWgUFd41NRiRdSt2a%2F%2FvhL8Y%2FPKhn%2FyFl1yH5nPqPYK%2FTlGBpQ3mvPSW4C3cwomyxnaYTZ8d0cZYXbt9L9cDOGxy6Px%2Fm8md3Wu3v935Oos79ZowPtHsYZfeOtW8UPTHvhGyJma0wrBSl7sV4OSD9xxitU7TskcitF9zFJUcSDyqswOT%2BKYj%2Bpn9y8ZpBPJSkwSx4nVPRFqbG4BYiUFXtbChhq2xETk1v3lTW%2B88QjkYKlGESBp4YRl1NA%2FN5opa5hBjY5%2FrpR4eSqr1sL3AobzkuW5%2B2Jn6aKtIfswCXzzZou9uOErvBULe8T0170c9VWOB0XfbLv7Km0DbrOJvqBeTbbbs7KQasAeG52uCexNYylFkOHf%2FgwTzLM5IVEogrCpg63J5gxnUWFRD2SEfMW%2FzmrCc4WTxo4iH4dFy7uNNXDI%2FLDxcgMlgRdfUCJB4K2wMAdY4P5470pUHy1sGWgWOjqN0lioErWF4o5uHjd4CvSvdEw6Zu2pwY6sQFPk0Fetn%2FIa9xJW%2BZItRa3W2G%2BR0uXE7SjoenUfxVuJinEYLgCleCkkHDO4gYgTjW%2BJroPlP9CFVETtxi4MVh11fL%2F53nuUkf9hDTIQ65KGj6TgceWLrMZjFUCn%2B0MKXvJGURvJ6eBvxvpU3JWmYbsx6GzJfTlTCsjgp6mPnofSpTawIfaasDyuIBXylVKbYe77ydivwLW2mmxVW9kLKt2Tz7NDZft2HwvI9d0mE9ngi8%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=b9f4fb029be9477e9ac08f335b0a03d0fb0c426f2a6827d8171807233e4bbbb9",
            "file_size": 4067,
            "type": "text/x-diff"
        }
    ],
    "allow_singular_disclosure_at": null,
    "vote_count": 5,
    "voters": [
        "sameerphad72",
        "dhakal_ananda",
        "ali",
        "s3rgio1993",
        "sonalkr132"
    ],
    "severity": {
        "rating": "low",
        "author_type": "User"
    },
    "structured_scope": null,
    "abilities": {
        "assignable_team_members": [],
        "assignable_team_member_groups": []
    },
    "activities": [
        {
            "id": 2042480,
            "is_internal": false,
            "editable": false,
            "type": "Activities::Comment",
            "message": "Thanks for submitting this report to RubyGems. Our team will review and investigate the issue. Please note that only issues in the rubygems library are eligible for our bug bounty program.",
            "automated_response": true,
            "created_at": "2017-10-04T04:06:15.623Z",
            "updated_at": "2017-10-04T04:06:15.623Z",
            "actor": {
                "url": "/rubygems",
                "ibb": true,
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/variants/000/008/212/e65eca09896d23bc029c08d3147a79a48ec1ee2f_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
                },
                "profile": {
                    "name": "RubyGems"
                }
            },
            "genius_execution_id": null,
            "team_handle": "rubygems"
        },
        {
            "id": 2042491,
            "is_internal": false,
            "editable": false,
            "type": "Activities::ReportSeverityUpdated",
            "message": "",
            "automated_response": false,
            "created_at": "2017-10-04T04:21:22.511Z",
            "updated_at": "2017-10-04T04:21:22.511Z",
            "additional_data": {
                "old_severity": "High",
                "new_severity": "Low",
                "old_severity_id": 80539,
                "new_severity_id": 80540
            },
            "actor": {
                "username": "claudijd",
                "cleared": false,
                "verified": false,
                "url": "/claudijd",
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/variants/000/003/131/3c373767fbd4f34648ab754b0f692fb718bfb8e5_original.jpeg/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "rubygems"
        },
        {
            "id": 2050566,
            "is_internal": false,
            "editable": false,
            "type": "Activities::ExternalUserJoined",
            "message": "",
            "automated_response": false,
            "created_at": "2017-10-07T00:01:15.081Z",
            "updated_at": "2017-10-07T00:01:15.081Z",
            "actor": {
                "username": "plover",
                "cleared": false,
                "verified": false,
                "url": "/plover",
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "rubygems"
        },
        {
            "id": 2057980,
            "is_internal": false,
            "editable": false,
            "type": "Activities::Comment",
            "message": "I've turned this submission into a public PR here, since this doesn't appear exploitable.\n\nhttps://github.com/rubygems/rubygems/pull/2035",
            "automated_response": false,
            "created_at": "2017-10-11T02:51:30.470Z",
            "updated_at": "2017-10-11T02:51:30.470Z",
            "actor": {
                "username": "claudijd",
                "cleared": false,
                "verified": false,
                "url": "/claudijd",
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/variants/000/003/131/3c373767fbd4f34648ab754b0f692fb718bfb8e5_original.jpeg/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "rubygems"
        },
        {
            "id": 2057982,
            "is_internal": false,
            "editable": false,
            "type": "Activities::BugInformative",
            "message": "This report was helpful in understanding how this code could be refined, but there was not exploitable vector raised.  The code improvements have been moved into the public domain and will be incorporated in RubyGems in a future release.",
            "automated_response": false,
            "created_at": "2017-10-11T02:54:18.928Z",
            "updated_at": "2017-10-11T02:54:18.928Z",
            "actor": {
                "username": "claudijd",
                "cleared": false,
                "verified": false,
                "url": "/claudijd",
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/variants/000/003/131/3c373767fbd4f34648ab754b0f692fb718bfb8e5_original.jpeg/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "rubygems"
        },
        {
            "id": 2060168,
            "is_internal": false,
            "editable": false,
            "type": "Activities::Comment",
            "message": "Thanks! Please make this report public then?",
            "automated_response": false,
            "created_at": "2017-10-11T21:50:57.274Z",
            "updated_at": "2017-10-11T21:50:57.274Z",
            "actor": {
                "username": "plover",
                "cleared": false,
                "verified": false,
                "url": "/plover",
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "rubygems"
        },
        {
            "id": 2060207,
            "is_internal": false,
            "editable": false,
            "type": "Activities::Comment",
            "message": "Pasting the original commit message here for posterity (it had more details than the message I sent to the security@ list).\n\n----\n\nThe `api_endpoint` function inserts an untrusted string into the middle of a URI:\n```\nURI.parse \"#{uri.scheme}://#{target}#{uri.path}\"\n```\nThe intention is that `target` only replaces the host component of the URI; for example if `uri.scheme = \"https\"` and `uri.path = \"/path\"`, and `target = \"example.com\"`, then the result will be\n```\nhttps://example.com/path\n```\nBut `target` could contain other URI syntax that masks `uri.path`. For example, if `target = \"example.com/badpath?query=\"`, then the result will be\n```\nhttps://example.com/badpath?query=/path\n```\nIf `target = \"example.com/badpath#fragment\"`, then the result will be\n```\nhttps://example.com/badpath#fragment/path\n```\nAdditionally, `target = \"example.com:9999\"` could change the port:\n```\nhttps://example.com:9999/path\n```\nor `target = \"user:pass@example.com\"` could change credentials:\n```\nhttps://user:pass@example.com/path\n```\n\nReturning a URI with an attacker-controlled path/query/fragment is potentially dangerous if used directly or if other URIs are created from it using string concatenation. For example, if `api_endpoint` returns `\"https://example.com/malicious.gz#\"`, and some other code tries to create a new URI by appending `\"/good.gz\"`, then the resulting URI will be `https://example.com/malicious.gz#/good.gz`, with the intended path being hidden in the fragment component of the URI. However, I did not find any places in the code where this happens; code that on first glance looks vulnerable:\n```\n    spec_path  = api_uri + \"#{file_name}.gz\"\n```\nis actually safe because the `+` is not string concatenation, but the `merge` method of `URI::Generic`. It is still possible to replace the user, password, and port, but those do not offer an obvious path to exploitation.\n\nProbably it's better not to parse `target` as a URI at all; rather to insist that it have the form of a hostname only.\n\nCommit [8d91516fb7037ecfb27622f605dc40245e0f8d32](https://github.com/rubygems/rubygems/commit/8d91516fb7037ecfb27622f605dc40245e0f8d32) began parsing `target` as a URI in order to compare the host component as a fix for CVE-2017-0902; however it does not discard components other than the host when building the result.\n",
            "automated_response": false,
            "created_at": "2017-10-11T22:01:35.297Z",
            "updated_at": "2017-10-11T22:01:35.297Z",
            "actor": {
                "username": "plover",
                "cleared": false,
                "verified": false,
                "url": "/plover",
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "rubygems"
        },
        {
            "id": 2497711,
            "is_internal": false,
            "editable": false,
            "type": "Activities::AgreedOnGoingPublic",
            "message": "",
            "automated_response": false,
            "created_at": "2018-03-16T03:15:38.811Z",
            "updated_at": "2018-03-16T03:15:38.811Z",
            "first_to_agree": true,
            "actor": {
                "username": "claudijd",
                "cleared": false,
                "verified": false,
                "url": "/claudijd",
                "profile_picture_urls": {
                    "medium": "https://profile-photos.hackerone-user-content.com/variants/000/003/131/3c373767fbd4f34648ab754b0f692fb718bfb8e5_original.jpeg/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "rubygems"
        },
        {
            "id": 3791229,
            "is_internal": false,
            "editable": false,
            "type": "Activities::AgreedOnGoingPublic",
            "message": "",
            "automated_response": false,
            "created_at": "2018-12-08T20:06:30.763Z",
            "updated_at": "2018-12-08T20:06:30.763Z",
            "actor": {
                "username": "segiddins",
                "cleared": false,
                "verified": false,
                "url": "/segiddins",
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "rubygems"
        },
        {
            "id": 3791230,
            "is_internal": false,
            "editable": false,
            "type": "Activities::ReportBecamePublic",
            "message": "",
            "automated_response": false,
            "created_at": "2018-12-08T20:06:30.815Z",
            "updated_at": "2018-12-08T20:06:30.815Z",
            "actor": {
                "username": "segiddins",
                "cleared": false,
                "verified": false,
                "url": "/segiddins",
                "profile_picture_urls": {
                    "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
                },
                "hackerone_triager": false,
                "hackerone_employee": false
            },
            "genius_execution_id": null,
            "team_handle": "rubygems"
        }
    ],
    "activity_page_count": 1,
    "activity_page_number": 1,
    "summaries": [
        {
            "category": "team",
            "can_view?": true,
            "can_create?": false
        },
        {
            "category": "researcher",
            "can_view?": true,
            "can_create?": false
        }
    ]
}